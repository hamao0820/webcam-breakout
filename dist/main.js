/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>s,Zu:()=>r});class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,s,r){return a("move")}createTensorFromGPUData(e,t,n){return a("createTensorFromGPUData")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function s(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||r)}(e,t,n),a=s<0?-(s+1):s;e.splice(a,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,s,r){return l(e,t,n,s,r,0)}function i(e,t,n,s,r,a){return l(e,t,n,s,r,0,!1,a,!0)}function o(e,t,n,s,r,a){return l(e,t,n,s,r,a,!0)}function l(e,t,n,r,a,i,o=!1,l=!1,p=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>a&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let l=!1;for(let n=m.length-1;n>=o;--n){const s=u(e,i,m[n]);if(s>=r){l=!0;break}if(t.score=t.score*c(r,f,s),t.score<=a)break}t.suppressBeginIndex=m.length,l||(t.score===n?(m.push(i),g.push(t.score)):t.score>a&&s(d,t,h))}const y=m.length,b=n-y;l&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function u(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>a,qP:()=>i,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var s=n(2657);function r(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=(0,s.f)(e,"int32"),a=(0,s.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>w,wv:()=>x});var s=n(8713),r=n(2885),a=n(5938),i=n(9121),o=n(6151),l=n(4706),u=n(9122),c=n(569);class h{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,n){let s;const a=()=>{s=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{p(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?c.oj(`${s}ms`,9):s.error,o=c.oj(e,25),l=t.rank,u=t.size,h=c.oj(t.shape.toString(),14);let p="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;p+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(4077),m=n(747);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(l.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,l.Z(`Initialization of backend ${e} failed`),l.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return l.Z(`Initialization of backend ${e} failed`),l.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=w.runKernel(i.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return w.runKernel(i.RFZ,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const u=(0,o.pI)(t,this.backendName);c.hu(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:h,attrs:p}=e,d=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),s&&this.addTapeNode(u,h,t,d,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=(0,o.uk)(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&c.HD(e[0])&&(r=e.map((e=>u.encodeString(e))));const a=s.write(r,t,n),i=new f.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,a=new f.es(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},l=(0,o.uk)(e);null!=l&&(s=l.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=c.wT(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(r instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return w.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!c.cO(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),v);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];c.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(a.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,a.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new b(t)}return(0,r.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const w=x();function v(e,t){const n={a:e,b:t};return w.runKernel(i.mm_,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{OB:()=>o,Vi:()=>l,iG:()=>u,qA:()=>a});var s=n(569);const r="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,s.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);r in e&&e[r].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return l}let l=null;function u(e){l=e}},5938:(e,t,n)=>{"use strict";let s;function r(){if(null==s){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function a(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}n.d(t,{D:()=>r,R:()=>a})},4368:(e,t,n)=>{"use strict";n.d(t,{B9:()=>g,CQ:()=>x,Cd:()=>w,Cn:()=>y,G4:()=>o,MX:()=>c,N5:()=>f,N8:()=>h,N_:()=>v,R:()=>l,SR:()=>p,VY:()=>C,XV:()=>b,cF:()=>u,cj:()=>k,jq:()=>N,lu:()=>m,sq:()=>d,x3:()=>I,y3:()=>T,ze:()=>S});var s=n(7097),r=n(2885),a=n(4077),i=n(747);function o(){(0,r.OB)().set("PROD",!0)}function l(){(0,r.OB)().set("DEBUG",!0)}function u(){(0,r.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,r.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function h(){s.BV.disposeVariables()}function p(){return s.BV}function d(){return s.BV.memory()}function f(e){return s.BV.profile(e)}function m(e,t){return s.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return s.BV.keep(e)}function b(e){return s.BV.time(e)}function x(e){return s.BV.setBackend(e)}function w(){return s.BV.ready()}function v(){return s.BV.backendName}function k(e){s.BV.removeBackend(e)}function I(e){return s.BV.findBackend(e)}function S(e){return s.BV.findBackendFactory(e)}function N(e,t,n=1){return s.BV.registerBackend(e,t,n)}function T(){return s.BV.backend}function C(e,t){(0,r.OB)().setPlatform(e,t)}(0,a.FZ)(c)},633:(e,t,n)=>{"use strict";n.d(t,{UQ:()=>o,cb:()=>p,fN:()=>c,h7:()=>u,pn:()=>h,ti:()=>l});var s=n(7097),r=n(4077),a=n(5382),i=n(569);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=(0,a._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grad"):null;return s.BV.tidy((()=>{const{value:t,grads:n}=s.BV.gradients((()=>e(r)),[r],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),d(n),n[0]}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=(0,a.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grads"):null;return s.BV.tidy((()=>{const{value:t,grads:n}=s.BV.gradients((()=>e(...r)),r,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(n),n}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof r.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:o}=s.BV.gradients((()=>e(t)),[t],n);return d(a),{grad:a[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof r.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=s.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(a.grads),a}}function h(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof r._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in s.BV.registeredVariables)t.push(s.BV.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:l,grads:u}=s.BV.gradients(e,t,null,!0);i.hu(u.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===l.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=u[t]&&(c[e.name]=u[t])})),null!=a&&a.forEach((e=>c[e.name]=null)),{value:l,grads:c}}function p(e){return s.BV.customGrad(e)}function d(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},3306:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>Nt.SYM,VGw:()=>Nt.VGw,SpW:()=>Nt.SpW,zJI:()=>ze,HeW:()=>Ue,a4z:()=>Ge,DBS:()=>Xe,mm_:()=>Nt.mm_,Xze:()=>Nt.Xze,oT6:()=>Nt.oT6,IKK:()=>Nt.IKK,sJF:()=>Nt.sJF,aJk:()=>Nt.aJk,M2y:()=>Nt.M2y,qw7:()=>Nt.qw7,jMg:()=>Nt.jMg,QCc:()=>Nt.QCc,Oyi:()=>Nt.Oyi,JhU:()=>Nt.JhU,_k9:()=>Nt._k9,IMb:()=>Nt.IMb,ROF:()=>Nt.ROF,XLW:()=>Nt.XLW,zws:()=>Nt.zws,zvY:()=>Nt.zvY,eEB:()=>Nt.eEB,Ly9:()=>Nt.Ly9,RFZ:()=>Nt.RFZ,gJX:()=>Nt.gJX,xnO:()=>Nt.xnO,Zz9:()=>Nt.Zz9,yj2:()=>Nt.yj2,Eh3:()=>Nt.Eh3,mhS:()=>Nt.mhS,wUP:()=>Nt.wUP,wm:()=>Nt.wm,x12:()=>Nt.x12,o2y:()=>Nt.o2y,ik2:()=>Nt.ik2,mc4:()=>Nt.mc4,TR1:()=>Nt.TR1,VcC:()=>Nt.VcC,Byc:()=>Nt.Byc,iHb:()=>Nt.iHb,JLz:()=>ys.JL,QRR:()=>Nt.QRR,T0n:()=>Nt.T0n,cie:()=>Nt.cie,sL$:()=>Nt.sL$,y7R:()=>Nt.y7R,$w:()=>Nt.$w,p4S:()=>Nt.p4S,Vn9:()=>Nt.Vn9,ekb:()=>Nt.ekb,ViN:()=>b.Vi,$g6:()=>Nt.$g6,SX0:()=>Nt.SX0,HEU:()=>Nt.HEU,qAh:()=>b.qA,hdR:()=>Nt.hdR,Omj:()=>Nt.Omj,NEP:()=>Nt.NEP,YFo:()=>Nt.YFo,Y0y:()=>Nt.Y0y,vwp:()=>Nt.vwp,deh:()=>Nt.deh,Uyb:()=>Nt.Uyb,OR:()=>Nt.OR,jeX:()=>Nt.jeX,eBW:()=>Nt.eBW,sHE:()=>Nt.sHE,_V0:()=>Nt._V0,luS:()=>Nt.luS,q1x:()=>Nt.q1x,qi_:()=>Nt.qi_,iZT:()=>Nt.iZT,Acj:()=>Nt.Acj,Qg5:()=>Nt.Qg5,iJz:()=>Nt.iJz,J_u:()=>Nt.J_u,avt:()=>Nt.avt,iWB:()=>Nt.iWB,r7n:()=>Nt.r7n,Zuw:()=>ys.Zu,eZ0:()=>Nt.eZ0,Hhh:()=>Nt.Hhh,J$2:()=>Nt.J$2,vtC:()=>Nt.vtC,CAk:()=>Nt.CAk,e7N:()=>Nt.e7N,ZbH:()=>Nt.ZbH,kU:()=>Nt.kU,qCd:()=>Nt.qCd,PYm:()=>Nt.PYm,VfG:()=>Nt.VfG,MZg:()=>Nt.MZg,w6g:()=>Nt.w6g,qIC:()=>Nt.qIC,YoZ:()=>Nt.YoZ,mTV:()=>Nt.mTV,OAf:()=>Nt.OAf,OU7:()=>Nt.OU7,OV7:()=>Nt.OV7,vFR:()=>Nt.vFR,BMI:()=>Nt.BMI,q2K:()=>Nt.q2K,c17:()=>Nt.c17,q8u:()=>Nt.q8u,jQs:()=>Nt.jQs,Vbg:()=>Nt.Vbg,rIn:()=>Ke,NZg:()=>Nt.NZg,wYn:()=>Nt.wYn,kuV:()=>Nt.kuV,uv1:()=>Nt.uv1,cye:()=>Nt.cye,W0H:()=>Nt.W0H,yQU:()=>Nt.yQU,zvA:()=>tn.zvA,we_:()=>Nt.we_,qWM:()=>Nt.qWM,gaJ:()=>Le,eEe:()=>Zt,QiL:()=>Nt.QiL,lyA:()=>Nt.lyA,Kgp:()=>Nt.Kgp,pe_:()=>Nt.pe_,o0g:()=>Nt.o0g,DlI:()=>Nt.DlI,gVI:()=>Qe,dDz:()=>Nt.dDz,CQl:()=>Nt.CQl,BiW:()=>Nt.BiW,e6w:()=>Nt.e6w,yw1:()=>en.yw,xJR:()=>Nt.xJR,oHH:()=>Nt.oHH,$HU:()=>Nt.$HU,IH3:()=>nn.I,qkr:()=>Nt.qkr,SbG:()=>Nt.SbG,HZH:()=>Nt.HZH,_Yw:()=>Nt._Yw,zbQ:()=>Nt.zbQ,dpD:()=>Nt.dpD,Hmb:()=>Nt.Hmb,mKl:()=>Nt.mKl,b9H:()=>Nt.b9H,e07:()=>Nt.e07,bV0:()=>Nt.bV0,DYp:()=>qe,xQA:()=>Nt.xQA,nr8:()=>Nt.nr8,PhF:()=>Nt.PhF,oFR:()=>Nt.oFR,a5O:()=>Nt.a5O,i5y:()=>Nt.i5y,RQH:()=>Nt.RQH,wYB:()=>Nt.wYB,p2w:()=>Nt.p2w,Gcp:()=>Nt.Gcp,MRv:()=>Nt.MRv,TQc:()=>Nt.TQc,O3z:()=>Nt.O3z,nhH:()=>Nt.nhH,w3H:()=>Nt.w3H,ZjV:()=>Nt.ZjV,D2d:()=>Nt.D2d,L8s:()=>Nt.L8s,FKq:()=>Nt.FKq,bK0:()=>Nt.bK0,_tC:()=>Nt._tC,h8e:()=>Nt.h8e,jQk:()=>Nt.jQk,_JP:()=>Nt._JP,s1s:()=>Nt.s1s,XkS:()=>Nt.XkS,Tr8:()=>Nt.Tr8,GBy:()=>Nt.GBy,sEM:()=>Nt.sEM,MIZ:()=>Nt.MIZ,esB:()=>Se.es,YDk:()=>Se.YD,n9L:()=>Nt.n9L,cWu:()=>Nt.cWu,wx7:()=>Nt.wx7,G3Y:()=>Nt.G3Y,kpP:()=>Nt.kpP,ToN:()=>Nt.ToN,Qvg:()=>Nt.Qvg,XDQ:()=>Nt.XDQ,_wD:()=>Se._w,RuY:()=>Nt.RuY,usg:()=>Nt.usg,WnP:()=>tn.WnP,Khb:()=>tn.Khb,__u:()=>tn.__u,IHx:()=>tn.IHx,QBD:()=>tn.QBD,$6P:()=>tn.$6P,YjB:()=>tn.YjB,NqF:()=>tn.NqF,vHJ:()=>tn.vHJ,ZRM:()=>tn.ZRM,VfV:()=>tn.VfV,z4N:()=>tn.z4N,fvJ:()=>tn.fvJ,C80:()=>tn.C80,wS1:()=>tn.wS1,uR5:()=>tn.uR5,y3$:()=>Te.y3,Wap:()=>h,zEQ:()=>tn.zEQ,tgs:()=>tn.tgs,Dxk:()=>tn.Dxk,JY5:()=>tn.JY5,p3b:()=>tn.p3b,E4h:()=>tn.E4h,yE8:()=>tn.yE8,anm:()=>tn.anm,XsQ:()=>tn.XsQ,UFq:()=>tn.UFq,Jyw:()=>St,Xhn:()=>o,f3b:()=>tn.f3b,pju:()=>tn.pju,mDi:()=>tn.mDi,iUl:()=>tn.iUl,d9v:()=>tn.d9v,PYB:()=>tn.PYB,zoF:()=>tn.zoF,gME:()=>tn.gME,Izb:()=>tn.Izb,MNy:()=>tn.MNy,ZaL:()=>tn.ZaL,PAt:()=>tn.PAt,Tek:()=>tn.Tek,bc:()=>tn.bc,pdZ:()=>tn.pdZ,$QV:()=>tn.$QV,T3b:()=>Tt.T3,mCk:()=>tn.mCk,f9Y:()=>tn.f9Y,mew:()=>tn.mew,$Gn:()=>tn.$Gn,zbp:()=>tn.zbp,cbc:()=>_e.cb,ppE:()=>tn.ppE,MXe:()=>Te.MX,nTT:()=>tn.nTT,B10:()=>tn.B10,C2$:()=>s,Ka3:()=>tn.Ka3,WmZ:()=>tn.WmZ,cFr:()=>Te.cF,B90:()=>Te.B9,N8o:()=>Te.N8,hiC:()=>tn.hiC,NTj:()=>tn.NTj,AKD:()=>tn.AKD,rvX:()=>tn.rvX,WYO:()=>tn.WYO,pyx:()=>tn.pyx,Ra$:()=>Te.R,G48:()=>Te.G4,GRh:()=>tn.GRh,SRH:()=>Te.SR,OBj:()=>b.OB,DgJ:()=>tn.DgJ,qNN:()=>tn.qNN,d2q:()=>tn.d2q,Qqt:()=>tn.Qqt,dt4:()=>tn.dt4,t$B:()=>tn.t$B,iyy:()=>tn.iyy,kp_:()=>tn.kp_,hlL:()=>tn.hlL,x3e:()=>Te.x3,zel:()=>Te.ze,GWj:()=>tn.GWj,qPi:()=>tn.qPi,imm:()=>tn.imm,Iqj:()=>tn.Iqj,dbB:()=>tn.dbB,DaI:()=>l,N_N:()=>Te.N_,ukX:()=>Tt.uk,pIF:()=>Tt.pI,trD:()=>Tt.tr,UQy:()=>_e.UQ,tiA:()=>_e.ti,pjt:()=>tn.pjt,brS:()=>tn.brS,Sxn:()=>tn.Sxn,asL:()=>tn.asL,BHj:()=>tn.BHj,V3u:()=>tn.V3u,io:()=>a,wx0:()=>tn.wx0,xVT:()=>tn.xVT,UWc:()=>tn.UWc,i2d:()=>tn.i2d,CnY:()=>Te.Cn,GDt:()=>p,hi7:()=>tn.hi7,d9m:()=>tn.d9m,zN1:()=>tn.zN1,$r2:()=>tn.$r2,SX3:()=>tn.SX3,G9k:()=>tn.G9k,cM7:()=>tn.cM7,Krr:()=>tn.Krr,e_t:()=>tn.e_t,CmS:()=>tn.CmS,l_t:()=>tn.l_t,HvI:()=>tn.HvI,hJK:()=>tn.hJK,K5V:()=>tn.K5V,egP:()=>tn.egP,MB5:()=>tn.MB5,eab:()=>tn.eab,OI3:()=>tn.OI3,mAU:()=>i,Fp7:()=>tn.Fp7,_sB:()=>tn._sB,YQQ:()=>tn.YQQ,Ip$:()=>tn.Ip$,gWQ:()=>tn.gWQ,J69:()=>tn.J69,sq6:()=>Te.sq,ry_:()=>tn.ry_,VV$:()=>tn.VV$,LTh:()=>tn.LTh,VdP:()=>tn.VdP,wQq:()=>tn.wQq,Gi7:()=>tn.Gi7,p_:()=>tn.p_,dC7:()=>tn.dC7,rq4:()=>tn.rq4,SJ_:()=>tn.SJ_,W76:()=>tn.W76,glt:()=>an,KOy:()=>tn.KOy,Quu:()=>tn.Quu,lfX:()=>tn.lfX,iUs:()=>tn.iUs,JpU:()=>tn.JpU,op:()=>tn.op,N2O:()=>tn.N2O,vku:()=>tn.vku,pNR:()=>tn.pNR,koy:()=>tn.koy,t1L:()=>tn.t1L,lGY:()=>tn.lGY,d_R:()=>tn.d_R,sQ3:()=>tn.sQ3,AL3:()=>tn.AL3,S0v:()=>tn.S0v,WVs:()=>tn.WVs,N5s:()=>Te.N5,$gW:()=>tn.$gW,VT$:()=>tn.VT$,N89:()=>tn.N89,TN_:()=>tn.TN_,wzB:()=>tn.wzB,nGf:()=>tn.nGf,ruB:()=>tn.ruB,LGj:()=>tn.LGj,w6H:()=>tn.w6H,Cd_:()=>Te.Cd,kwC:()=>tn.kwC,M25:()=>tn.M25,jqO:()=>Te.jq,LiG:()=>Tt.Li,wCN:()=>Tt.wC,UYe:()=>tn.UYe,btT:()=>tn.btT,cjG:()=>Te.cj,XLQ:()=>tn.XLQ,GYS:()=>tn.GYS,SDf:()=>tn.SDf,diP:()=>tn.diP,sx7:()=>tn.sx7,mG2:()=>tn.mG2,QEs:()=>tn.QEs,NMM:()=>tn.NMM,bp0:()=>tn.bp0,iD$:()=>tn.iD$,snQ:()=>tn.snQ,yV1:()=>Ot,zcT:()=>tn.zcT,U8D:()=>tn.U8D,U_I:()=>tn.U_I,m7h:()=>r,CQI:()=>Te.CQ,VYu:()=>Te.VY,ODp:()=>tn.ODp,XD2:()=>tn.XD2,Xxe:()=>tn.Xxe,tdS:()=>tn.tdS,O$l:()=>tn.O$l,R_K:()=>tn.R_K,tPi:()=>tn.tPi,jZU:()=>tn.jZU,SmN:()=>tn.SmN,CnO:()=>tn.CnO,p0P:()=>tn.p0P,kuN:()=>Ft,XAC:()=>tn.XAC,Wvh:()=>tn.Wvh,fBT:()=>tn.fBT,rVs:()=>tn.rVs,ers:()=>tn.ers,uN7:()=>tn.uN7,Vl2:()=>tn.Vl2,_b3:()=>tn._b3,h62:()=>tn.h62,$i:()=>tn.$i,L9e:()=>tn.L9e,knu:()=>tn.knu,Nbs:()=>tn.Nbs,NXj:()=>tn.NXj,Z_8:()=>tn.Z_8,luU:()=>tn.luU,Smz:()=>tn.Smz,z4k:()=>en.z4,ORZ:()=>tn.ORZ,AEp:()=>tn.AEp,XeE:()=>tn.XeE,RRF:()=>tn.RRF,odF:()=>tn.odF,wOQ:()=>tn.wOQ,yXz:()=>tn.yXz,Bfx:()=>tn.Bfx,xZs:()=>tn.xZs,piX:()=>Mt,p3L:()=>u,lub:()=>Te.lu,Gg6:()=>tn.Gg6,XVJ:()=>Te.XV,hg7:()=>tn.hg7,p_j:()=>sn,p4s:()=>tn.p4s,Xu6:()=>tn.Xu6,Two:()=>tn.Two,bt3:()=>Tt.bt,nEe:()=>Tt.nE,pUJ:()=>tn.pUJ,HHK:()=>tn.HHK,x8V:()=>en.x8,GaM:()=>tn.GaM,D5U:()=>Bt,h76:()=>_e.h7,fNQ:()=>_e.fN,VD$:()=>tn.VD$,pnJ:()=>_e.pn,jTM:()=>Jt,arb:()=>tn.arb,itS:()=>tn.itS,lls:()=>tn.lls,P84:()=>tn.P84});var s={};n.r(s),n.d(s,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var r={};n.r(r),n.d(r,{Serializable:()=>Fe,SerializationMap:()=>Me,registerClass:()=>Be});var a={};n.r(a),n.d(a,{browserFiles:()=>tt,browserHTTPRequest:()=>ct,concatenateArrayBuffers:()=>A,copyModel:()=>ge,decodeWeights:()=>T,encodeWeights:()=>N,fromMemory:()=>ft,fromMemorySync:()=>mt,getLoadHandlers:()=>W,getModelArtifactsForJSON:()=>O,getModelArtifactsForJSONSync:()=>_,getModelArtifactsInfoForJSON:()=>F,getSaveHandlers:()=>U,getWeightSpecs:()=>M,http:()=>ut,isHTTPScheme:()=>ot,listModels:()=>fe,loadWeights:()=>rt,moveModel:()=>ye,registerLoadRouter:()=>P,registerSaveRouter:()=>z,removeModel:()=>me,weightsLoaderFactory:()=>at,withSaveHandler:()=>gt,withSaveHandlerSync:()=>yt});var i={};n.r(i),n.d(i,{confusionMatrix:()=>It});var o={};n.r(o),n.d(o,{fromPixels:()=>Rt,fromPixelsAsync:()=>At,toPixels:()=>Dt});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>_t});var u={};n.r(u),n.d(u,{TEST_EPSILON_FLOAT16:()=>zt,createVideoElement:()=>Qt,encodeStrings:()=>Kt,expectArrayBuffersEqual:()=>qt,expectArraysClose:()=>Pt,expectArraysEqual:()=>Gt,expectNumbersClose:()=>Ht,expectPromiseToFail:()=>Vt,expectValuesInRange:()=>Xt,play:()=>Yt,testEpsilon:()=>Ut});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>ps,computeOutShape:()=>hs,segOpComputeOptimalWindowSize:()=>cs});var h={};n.r(h),n.d(h,{ERF_A1:()=>Cn,ERF_A2:()=>En,ERF_A3:()=>$n,ERF_A4:()=>An,ERF_A5:()=>Dn,ERF_P:()=>Tn,PARALLELIZE_THRESHOLD:()=>yn,RowPartitionType:()=>cn,SELU_SCALE:()=>Nn.$,SELU_SCALEALPHA:()=>Nn.y,applyActivation:()=>pn.QH,assertAndGetBroadcastShape:()=>St.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>on.lB,assertParamsConsistent:()=>ln,assignToTypedArray:()=>Ln,axesAreInnerMostDims:()=>on.YB,calculateShapes:()=>Ot.calculateShapes,checkEinsumDimSizes:()=>Xn,checkPadOnDimRoundingMode:()=>hn.m,combineLocations:()=>on.Vh,combineRaggedTensorToTensorShapes:()=>dn,complexWithEvenIndex:()=>Fn,complexWithOddIndex:()=>Mn,computeConv2DInfo:()=>hn.Ix,computeConv3DInfo:()=>hn.jw,computeDefaultPad:()=>hn.aO,computeDilation2DInfo:()=>hn.Rf,computeOptimalWindowSize:()=>bn,computeOutAndReduceShapes:()=>on.kz,computeOutShape:()=>un,computePool2DInfo:()=>hn.Xw,computePool3DInfo:()=>hn.pl,convertConv2DDataFormat:()=>hn.sl,decodeEinsumEquation:()=>Hn,eitherStridesOrDilationsAreOne:()=>hn.jT,expandShapeToKeepDim:()=>on.rv,exponent:()=>Pn,exponents:()=>zn,fromStringArrayToUint8:()=>fs,fromUint8ToStringArray:()=>ds,getAxesPermutation:()=>on.Q3,getBroadcastDims:()=>St.getBroadcastDims,getComplexWithIndex:()=>Bn,getEinsumComputePath:()=>qn,getEinsumPermutation:()=>jn,getFusedBiasGradient:()=>pn.pf,getFusedDyActivation:()=>pn.Fr,getImageCenter:()=>xn,getInnerMostAxes:()=>on.sY,getPermuted:()=>vn,getRaggedRank:()=>mn,getReductionAxes:()=>St.getReductionAxes,getReshaped:()=>wn,getReshapedPermuted:()=>kn,getRowPartitionTypesHelper:()=>fn,getSliceBeginCoords:()=>In,getSliceSize:()=>Sn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Jn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Zn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>es,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ss,getSparseReshapeInputOutputMismatchErrorMessage:()=>as,getSparseReshapeInputOutputMultipleErrorMessage:()=>rs,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>ts,getSparseReshapeNegativeOutputDimErrorMessage:()=>ns,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>us,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>is,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>os,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ls,getUndoAxesPermutation:()=>on.LJ,isIdentityPermutation:()=>Kn,log:()=>Rn.c,mergeRealAndImagArrays:()=>_n,prepareAndValidate:()=>_t,prepareSplitSize:()=>Yn,segment_util:()=>c,shouldFuse:()=>pn.uy,slice_util:()=>Ft,splitRealAndImagArrays:()=>On,stridesOrDilationsArePositive:()=>hn.U3,tupleValuesAreOne:()=>hn.I0,upcastType:()=>en.x8,validateDefaultValueShape:()=>gn,validateInput:()=>Ot.validateInput,validateUpdateShape:()=>Ot.validateUpdateShape,warn:()=>Rn.Z});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>ms.GP,nonMaxSuppressionV4Impl:()=>ms.qP,nonMaxSuppressionV5Impl:()=>ms.pA,whereImpl:()=>gs.Z});var d=n(7097);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var b=n(2885);const x=(0,b.OB)();x.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),x.registerFlag("IS_BROWSER",(()=>y())),x.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),x.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),x.registerFlag("PROD",(()=>!1)),x.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>x.getBool("DEBUG"))),x.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),x.registerFlag("IS_TEST",(()=>!1)),x.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),x.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),x.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),x.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var w=n(1661),v=n(701),k=n(569);const I={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},S=4;async function N(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+S*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=S,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:C(await Promise.all(s)),specs:n}}function T(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=(0,k.NA)(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=I[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=B()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=(0,k.NA)(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+S))[0];r+=S;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=I[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=(0,v.X)(e,o,"float32"),i=(0,v.X)(s,o,"float32");n[t]=(0,w.P)(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=(0,v.X)(u,o,i))}return n}function C(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const E="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function $(e){return E?Buffer.byteLength(e):new Blob([e]).size}function A(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function D(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function R(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function _(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}async function O(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),_(e,n,s)}function F(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function M(e){const t=[];for(const n of e)t.push(...n.weights);return t}function B(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class L{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==L.instance&&(L.instance=new L),L.instance}static registerSaveRouter(e){L.getInstance().saveRouters.push(e)}static registerLoadRouter(e){L.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return L.getHandlers(e,"save")}static getLoadHandlers(e,t){return L.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?L.getInstance().loadRouters:L.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const z=e=>L.registerSaveRouter(e),P=e=>L.registerLoadRouter(e),U=e=>L.getSaveHandlers(e),W=(e,t)=>L.getLoadHandlers(e,t),V="tensorflowjs",G="models_store",H="model_info_store";function j(){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function X(e){const t=e.result;t.createObjectStore(G,{keyPath:"modelPath"}),t.createObjectStore(H,{keyPath:"modelPath"})}class q{constructor(e){if(this.indexedDB=j(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(V,1);s.onupgradeneeded=()=>X(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(G,"readonly"),s=t.objectStore(G).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=F(t),a=r.transaction(H,"readwrite");let i=a.objectStore(H);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(G,"readwrite");const o=l.objectStore(G).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(H);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}q.URL_SCHEME="indexeddb://";const K=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};L.registerSaveRouter(K),L.registerLoadRouter(K);class Q{constructor(){this.indexedDB=j()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(V,1);n.onupgradeneeded=()=>X(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(H,"readonly"),a=r.objectStore(H).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(V,1);s.onupgradeneeded=()=>X(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(H,"readwrite"),i=a.objectStore(H),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(G,"readwrite");const s=l.objectStore(G).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const Y="/",J="tensorflowjs_models",Z="info",ee="model_topology",te="weight_specs",ne="weight_data",se="model_metadata";function re(e){return{info:[J,e,Z].join(Y),topology:[J,e,ee].join(Y),weightSpecs:[J,e,te].join(Y),weightData:[J,e,ne].join(Y),modelMetadata:[J,e,se].join(Y)}}function ae(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ie(e){const t=e.split(Y);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Y)}class oe{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=re(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=F(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(E)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw ae(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(E){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}oe.URL_SCHEME="localstorage://";const le=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oe.URL_SCHEME)?(t=e.slice(oe.URL_SCHEME.length),new oe(t)):null;var t};L.registerSaveRouter(le),L.registerLoadRouter(le);class ue{constructor(){(0,k.hu)((0,b.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,k.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=J+Y,n=Y+Z;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[ie(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=re(e=(t=e).startsWith(oe.URL_SCHEME)?t.slice(oe.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return ae(n),s}}const ce="://";class he{constructor(){this.managers={}}static getInstance(){return null==he.instance&&(he.instance=new he),he.instance}static registerManager(e,t){(0,k.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ce)&&(e=e.slice(0,e.indexOf(ce))),(0,k.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=he.getInstance();(0,k.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=he.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(he.getInstance().managers)}}function pe(e){if(-1===e.indexOf(ce))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${he.getSchemes().join(",")}`);return{scheme:e.split(ce)[0],path:e.split(ce)[1]}}async function de(e,t,n=!1){(0,k.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=L.getLoadHandlers(e);(0,k.hu)(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,k.hu)(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=L.getSaveHandlers(t);(0,k.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,k.hu)(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=pe(e).scheme,l=pe(e).path,u=o===pe(e).scheme,c=await r.load();n&&u&&await he.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await he.getManager(o).removeModel(l),h.modelArtifactsInfo}async function fe(){const e=he.getSchemes(),t={};for(const n of e){const e=await he.getManager(n).listModels();for(const s in e)t[n+ce+s]=e[s]}return t}async function me(e){const t=pe(e);return he.getManager(t.scheme).removeModel(t.path)}async function ge(e,t){return de(e,t,!1)}async function ye(e,t){return de(e,t,!0)}class be{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&(0,b.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}if((0,b.OB)().get("IS_BROWSER")){(0,b.OB)().setPlatform("browser",new be);try{he.registerManager(oe.URL_SCHEME,new ue)}catch(e){}try{he.registerManager(q.URL_SCHEME,new Q)}catch(e){}}let xe;(0,b.OB)().get("IS_NODE")&&!(0,b.OB)().get("IS_BROWSER")&&(0,b.OB)().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b.OB)().global.fetch?(0,b.OB)().global.fetch(e,t):(null==xe&&(xe=n(5410)),xe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var we=n(2657),ve=n(2271),ke=n(8723),Ie=n(9798),Se=n(4077);(0,d.wv)();const Ne={buffer:we.f,cast:ve.p,clone:ke.d,print:Ie.S};(0,Se.Vp)(Ne);var Te=n(4368),Ce=n(6407),Ee=n(1274),$e=n(4841),Ae=n(3261),De=n(248),Re=n(6577),_e=n(633),Oe=n(9494);class Fe{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Me{constructor(){this.classNameMap={}}static getMap(){return null==Me.instance&&(Me.instance=new Me),Me.instance}static register(e){Me.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Be(e){(0,k.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,k.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,k.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Me.register(e)}class Le extends Fe{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,Te.B9)(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,_e.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Te.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Oe.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Le,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class ze extends Le{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.BV.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Te.lu)((()=>(0,Re.P)(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Te.lu)((()=>(0,Re.P)(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,Te.lu)((()=>{const e=(0,Ce.I)((0,$e.d)(a,this.rho),(0,$e.d)((0,De.h)(r),1-this.rho)),t=(0,$e.d)((0,Ee.h)((0,Ae._)((0,Ce.I)(i,this.epsilon)),(0,Ae._)((0,Ce.I)(a,this.epsilon))),r),n=(0,Ce.I)((0,$e.d)(i,this.rho),(0,$e.d)((0,De.h)(t),1-this.rho));a.assign(e),i.assign(n);const o=(0,Ce.I)((0,$e.d)(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Te.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Te.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Pe=n(4006);class Ue extends Le{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Te.lu)((()=>(0,Pe.h)(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;(0,Te.lu)((()=>{const e=(0,Ce.I)(a,(0,De.h)(r));a.assign(e);const t=(0,Ce.I)((0,$e.d)((0,Ee.h)(r,(0,Ae._)((0,Ce.I)(e,d.BV.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Te.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var We=n(3453),Ve=n(827);class Ge extends Le{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Te.lu)((()=>{this.accBeta1=(0,Oe.i)(t).variable(),this.accBeta2=(0,Oe.i)(n).variable()})),null==s&&(this.epsilon=d.BV.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Te.lu)((()=>{const n=(0,Ve.l)(1,this.accBeta1),s=(0,Ve.l)(1,this.accBeta2);t.forEach(((t,r)=>{const a=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:(0,Te.lu)((()=>(0,Re.P)(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:(0,Te.lu)((()=>(0,Re.P)(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=(0,Ce.I)((0,$e.d)(o,this.beta1),(0,$e.d)(i,1-this.beta1)),c=(0,Ce.I)((0,$e.d)(l,this.beta2),(0,$e.d)((0,De.h)(i),1-this.beta2)),h=(0,Ee.h)(u,n),p=(0,Ee.h)(c,s);o.assign(u),l.assign(c);const f=(0,Ce.I)((0,$e.d)((0,Ee.h)(h,(0,Ce.I)((0,Ae._)(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,$e.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,$e.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Te.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Te.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Te.lu)((()=>{this.accBeta1.assign((0,We.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,We.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var He=n(6235),je=n(632);class Xe extends Le{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Te.lu)((()=>{this.iteration=(0,Oe.i)(0).variable(),this.accBeta1=(0,Oe.i)(t).variable()})),null==s&&(this.epsilon=d.BV.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Te.lu)((()=>{const n=(0,Ve.l)(1,this.accBeta1),s=(0,Ee.h)(-this.learningRate,(0,Ce.I)((0,$e.d)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:(0,Re.P)(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:(0,Re.P)(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=(0,Ce.I)((0,$e.d)(o,this.beta1),(0,$e.d)(i,1-this.beta1)),c=(0,$e.d)(l,this.beta2),h=(0,He.W)(i),p=(0,je.g)(c,h);o.assign(u),l.assign(p);const f=(0,Ce.I)((0,$e.d)((0,Ee.h)(s,n),(0,Ee.h)(u,(0,Ce.I)(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,Ce.I)(this.iteration,1)),this.accBeta1.assign((0,$e.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Te.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Te.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class qe extends Le{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=d.BV.registeredVariables[t];(0,Te.lu)((()=>{const e=(0,Ce.I)((0,$e.d)(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Te.Cn)((0,Oe.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ke extends qe{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Oe.i)(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Te.lu)((()=>(0,Re.P)(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,Te.lu)((()=>{let e;const t=(0,Ce.I)((0,$e.d)(this.m,r),a);e=this.useNesterov?(0,Ce.I)((0,$e.d)(this.c,(0,Ce.I)(a,(0,$e.d)(t,this.m))),s):(0,Ce.I)((0,$e.d)(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Te.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Qe extends Le{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=d.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=d.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Te.lu)((()=>(0,Re.P)(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Te.lu)((()=>(0,Re.P)(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Te.lu)((()=>(0,Re.P)(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,Te.lu)((()=>{const e=(0,Ce.I)((0,$e.d)(i,this.decay),(0,$e.d)((0,De.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,Ce.I)((0,$e.d)(t,this.decay),(0,$e.d)(a,1-this.decay)),l=(0,Ee.h)((0,$e.d)(a,this.learningRate),(0,Ae._)((0,Ve.l)(e,(0,Ce.I)((0,De.h)(r),this.epsilon)))),u=(0,Ce.I)((0,$e.d)(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=(0,Ve.l)(s,u);s.assign(c)}else{const e=(0,Ce.I)((0,$e.d)(i,this.decay),(0,$e.d)((0,De.h)(a),1-this.decay)),t=(0,Ce.I)((0,$e.d)(o,this.momentum),(0,Ee.h)((0,$e.d)(a,this.learningRate),(0,Ae._)((0,Ce.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Ve.l)(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Te.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Te.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Te.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ye=[ze,Ue,Ge,Xe,Ke,Qe,qe];function Je(e){return new Promise((e=>setTimeout(e))).then(e)}class Ze{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ze.URL_SCHEME)&&(e=e.slice(Ze.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=R(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Je((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Je((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:F(e)}}}}Ze.URL_SCHEME="downloads://";class et{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const s=JSON.parse(n.target.result),r=s.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==s.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const a=O(s,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const s=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,s[e])));return Promise.all(r).then((e=>[t,A(e)]))}loadWeightsFile(e,t){return new Promise(((n,s)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>D(e.name))),s={};for(const r of e)r.paths.forEach((e=>{const r=D(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);s[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function tt(e){return new et(e)}function nt(e,t,n,s){!function(e){(0,k.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,k.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,k.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,k.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function st(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b.OB)().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await nt(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await nt(r,t.onProgress,.5,1)}async function rt(e,t="",n,s){return at((e=>st(e,{requestInit:s})))(e,t,n)}function at(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=I[l]*k.NA(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let s=0;for(let e=0;e<n;e++)s+=c[p+e].byteLength;const r=new ArrayBuffer(s),i=new Uint8Array(r);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=T(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}L.registerSaveRouter((e=>(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ze.URL_SCHEME)?function(e="model"){return new Ze(e)}(e.slice(Ze.URL_SCHEME.length)):null));class it{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,k.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b.OB)().platform.fetch,(0,k.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,k.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=R(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:F(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return O(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=M(e),i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,A(await st(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ot(e){return null!=e.match(it.URL_SCHEME_REGEX)}it.URL_SCHEME_REGEX=/^https?:\/\//;const lt=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ot(e))):ot(e),n)return ut(e,t)}return null};function ut(e,t){return new it(e,t)}function ct(e,t){return ut(e,t)}L.registerSaveRouter(lt),L.registerLoadRouter(lt);class ht{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class pt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class dt{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ft(e,t,n,s){return new dt(mt(...arguments))}function mt(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new ht(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ht({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ht({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function gt(e){return new pt(e)}function yt(e){return new pt(e)}var bt=n(5382),xt=n(8687),wt=n(6708),vt=n(2668),kt=n(9065);const It=(0,vt.op)({confusionMatrix_:function(e,t,n){const s=(0,bt._1)(e,"labels","confusionMatrix"),r=(0,bt._1)(t,"predictions","confusionMatrix");k.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),k.hu(1===s.rank,(()=>`Expected the rank of labels to be 1, but got ${s.rank}`)),k.hu(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),k.hu(s.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),k.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=(0,wt.l)((0,ve.p)(s,"int32"),n),i=(0,wt.l)((0,ve.p)(r,"int32"),n),o=(0,kt.p)(a),l=(0,xt.O)(o,i);return(0,ve.p)(l,"int32")}});var St=n(2200),Nt=n(9121),Tt=n(6151),Ct=n(9906);let Et;function $t(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=(0,Tt.pI)(Nt.eBW,d.BV.backendName)){const n={pixels:e},s={numChannels:t};return d.BV.runKernel(Nt.eBW,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(a||r||o){if(null==Et)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Et=new OffscreenCanvas(1,1).getContext("2d")}else Et=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Et.canvas.width=l,Et.canvas.height=u,Et.drawImage(e,0,0,l,u),c=Et.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}const p=[u,l,t];return(0,Ct.w)(h,p,"int32")}async function At(e,t=3){let n=null;if((0,b.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return $t(n,t)}async function Dt(e,t){let n=(0,bt._1)(e,"img","toPixels");if(!(e instanceof Se.es)){const e=n;n=(0,ve.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let e=0;e<s*r;++e){const t=[0,0,0,255];for(let s=0;s<a;s++){const r=i[e*a+s];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===a?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[s]=r*o}const s=4*e;l[s+0]=Math.round(t[0]),l[s+1]=Math.round(t[1]),l[s+2]=Math.round(t[2]),l[s+3]=Math.round(t[3])}if(null!=t){t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(l,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const Rt=(0,vt.op)({fromPixels_:$t});function _t(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===(0,k.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...(0,k.e3)(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}var Ot=n(3028),Ft=n(7650),Mt=n(747),Bt=n(9122);const Lt=.001,zt=.1;function Pt(e,t,n){return null==n&&(n=Ut()),Wt(e,t,((e,t)=>jt(e,t,n)))}function Ut(){return 32===d.BV.backend.floatPrecision()?Lt:zt}function Wt(e,t,n){let s=!0;if(((0,Bt.isTypedArray)(e)||(0,Bt.isTypedArray)(t))&&(s=!1),(0,Bt.isTypedArray)(e)&&(0,Bt.isTypedArray)(t)&&(s=!0),s){const n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${s}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,bt.C)(e),s=(0,bt.C)(t);if(!(0,k.cO)(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}const r=(0,Bt.isTypedArray)(e)?e:(0,Bt.flatten)(e),a=(0,Bt.isTypedArray)(t)?t:(0,Bt.flatten)(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.\nActual:   ${r}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=r[e],s=a[e];if(!n(t,s))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${s}.\nActual:   ${r}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function Vt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function Gt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,k.HD)(e)||(0,k.HD)(e[0])||(0,k.HD)(t)||(0,k.HD)(t[0])?Wt(e,n,((e,t)=>e==t)):Wt(e,t,((e,t)=>jt(e,t,0)))}function Ht(e,t,n){if(null==n&&(n=Ut()),!jt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function jt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Xt(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function qt(e,t){const n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let e=0;e<s.length;e++)if(n[e]!==s[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${s[e]} but got ${n[e]} instead`)}function Kt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Kt(n):e[t]=(0,Bt.encodeString)(n)}return e}function Qt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Yt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Jt="4.2.0";class Zt{static sgd(e){return new qe(e)}static momentum(e,t,n=!1){return new Ke(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Qe(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Ge(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new ze(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Xe(e,t,n,s,r)}static adagrad(e,t=.1){return new Ue(e,t)}}var en=n(1221),tn=n(3412),nn=n(9876);const sn=Zt,rn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function an(){return new Promise((e=>rn((()=>e()))))}var on=n(3591);function ln(e,t){const n=e[0].length;e.forEach(((e,t)=>{k.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),k.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)k.hu(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function un(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var cn,hn=n(2582),pn=n(9323);function dn(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const a=n[r],i=s[s.length-n.length+r],o=s[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${a} but shape[${r+e}] = ${o}`)}else s[i]=a}return s}function fn(e){const t={FIRST_DIM_SIZE:cn.FIRST_DIM_SIZE,VALUE_ROWIDS:cn.VALUE_ROWIDS,ROW_LENGTHS:cn.ROW_LENGTHS,ROW_SPLITS:cn.ROW_SPLITS,ROW_LIMITS:cn.ROW_LIMITS,ROW_STARTS:cn.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function mn(e){return 0===e.length?0:e[0]===cn.FIRST_DIM_SIZE?e.length-1:e.length}function gn(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(cn||(cn={}));const yn=30;function bn(e){return e<=yn?e:(0,k.jP)(e,Math.floor(Math.sqrt(e)))}function xn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function wn(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function vn(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function kn(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function In(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Sn(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var Nn=n(3179);const Tn=.3275911,Cn=.254829592,En=-.284496736,$n=1.421413741,An=-1.453152027,Dn=1.061405429;var Rn=n(4706);function _n(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function On(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Fn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Mn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Bn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ln(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function zn(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function Pn(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Un="->",Wn=/->/g,Vn=",",Gn="...";function Hn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Wn,"").length)/Un.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Un}").`);const[s,r]=e.split(Un);(0,k.hu)(-1===s.indexOf(Gn),(()=>`The ellipsis notation ("${Gn}") is not supported yet.`));const a=s.split(Vn),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&t!==Vn&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function jn(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Xn(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:(0,k.hu)(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function qn(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=Qn(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function Kn(e){return e.every(((e,t)=>e===t))}function Qn(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function Yn(e,t,n=0){let s=[];if("number"==typeof t)(0,k.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,k.hu)(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}(0,k.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function Jn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Zn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function es(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function ts(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function ns(e,t){return`size ${e} must be non-negative, not ${t}`}function ss(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function rs(e,t){return`Input to reshape is a SparseTensor with ${(0,k.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,k.NA)(t)}. inputShape=${e} outputShape= ${t}`}function as(e,t){return`Input to reshape is a tensor with ${(0,k.NA)(e)} dense values, but the requested shape has ${(0,k.NA)(t)}. inputShape=${e} outputShape=${t}`}function is(){return"segment ids must be >= 0"}function os(){return"segment ids are not increasing"}function ls(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function us(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function cs(e,t){let n,s=!1;for(e<=yn?(n=e,s=!0):n=(0,k.jP)(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=(0,k.jP)(e,n+1);return n}function hs(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function ps(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function ds(e){try{return e.map((e=>(0,Bt.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function fs(e){return e.map((e=>(0,Bt.encodeString)(e)))}var ms=n(3337),gs=n(8333),ys=n(8713);!function(){for(const e of Ye)Be(e)}()},9121:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>mt,$g6:()=>Z,$w:()=>q,Acj:()=>ge,BMI:()=>Le,BiW:()=>pt,Byc:()=>P,CAk:()=>Ne,CQl:()=>ht,D2d:()=>Ht,DlI:()=>ut,Eh3:()=>D,FKq:()=>Mt,G3Y:()=>rn,GBy:()=>Bt,Gcp:()=>Pt,HEU:()=>te,HZH:()=>yt,Hhh:()=>Me,Hmb:()=>xt,IKK:()=>u,IMb:()=>w,J$2:()=>Ie,J_u:()=>xe,JhU:()=>y,Kgp:()=>it,L8s:()=>zt,Ly9:()=>S,M2y:()=>p,MIZ:()=>en,MRv:()=>Ft,MZg:()=>De,NEP:()=>re,NZg:()=>Ke,O3z:()=>Ut,OAf:()=>Ue,OR:()=>ce,OU7:()=>We,OV7:()=>Pe,Omj:()=>ne,Oyi:()=>m,PYm:()=>$e,PhF:()=>Et,QCc:()=>g,QRR:()=>V,Qg5:()=>be,QiL:()=>rt,Qvg:()=>ln,RFZ:()=>T,ROF:()=>b,RQH:()=>Dt,RuY:()=>cn,SX0:()=>ee,SYM:()=>s,SbG:()=>kt,SpW:()=>a,T0n:()=>G,TQc:()=>Lt,TR1:()=>z,ToN:()=>on,Tr8:()=>Jt,Uyb:()=>ue,VGw:()=>r,Vbg:()=>qe,VcC:()=>W,VfG:()=>Ae,Vn9:()=>Y,W0H:()=>tt,XDQ:()=>un,XLW:()=>v,XkS:()=>Yt,Xze:()=>o,Y0y:()=>ie,YFo:()=>ae,YoZ:()=>Be,ZbH:()=>Ce,ZjV:()=>Gt,Zz9:()=>$,_JP:()=>Kt,_V0:()=>mn,_Yw:()=>wt,_k9:()=>x,_tC:()=>jt,a5O:()=>Ot,aJk:()=>h,avt:()=>we,b9H:()=>dn,bK0:()=>Xt,bV0:()=>Nt,c17:()=>He,cWu:()=>nn,cie:()=>H,cye:()=>et,dDz:()=>ct,deh:()=>le,dpD:()=>bt,e07:()=>St,e6w:()=>dt,e7N:()=>Te,eBW:()=>pn,eEB:()=>N,eZ0:()=>Fe,ekb:()=>Q,gJX:()=>C,h8e:()=>hn,hdR:()=>se,i5y:()=>_t,iHb:()=>U,iJz:()=>ye,iWB:()=>ve,iZT:()=>me,ik2:()=>B,jMg:()=>f,jQk:()=>qt,jQs:()=>Xe,jeX:()=>he,kU:()=>Ee,kpP:()=>an,kuV:()=>Ye,luS:()=>gn,lyA:()=>at,mKl:()=>It,mTV:()=>ze,mc4:()=>L,mhS:()=>R,mm_:()=>i,n9L:()=>tn,nhH:()=>Wt,nr8:()=>Ct,o0g:()=>lt,o2y:()=>M,oFR:()=>$t,oHH:()=>J,oT6:()=>l,p2w:()=>At,p4S:()=>K,pe_:()=>ot,q1x:()=>fe,q2K:()=>Ge,q8u:()=>je,qCd:()=>_e,qIC:()=>Oe,qWM:()=>nt,qi_:()=>de,qkr:()=>gt,qw7:()=>d,r7n:()=>ke,s1s:()=>Qt,sEM:()=>Zt,sHE:()=>pe,sJF:()=>c,sL$:()=>j,usg:()=>fn,uv1:()=>Ze,vFR:()=>Ve,vtC:()=>Se,vwp:()=>oe,w3H:()=>Vt,w6g:()=>Re,wUP:()=>_,wYB:()=>Rt,wYn:()=>Qe,we_:()=>st,wm:()=>O,wx7:()=>sn,x12:()=>F,xJR:()=>ft,xQA:()=>Tt,xnO:()=>E,y7R:()=>X,yQU:()=>Je,yj2:()=>A,zbQ:()=>vt,zvY:()=>I,zws:()=>k});const s="Abs",r="Acos",a="Acosh",i="Add",o="AddN",l="All",u="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BroadcastTo",N="BroadcastArgs",T="Cast",C="Ceil",E="ClipByValue",$="Complex",A="ComplexAbs",D="Concat",R="Conv2D",_="Conv2DBackpropFilter",O="Conv2DBackpropInput",F="Conv3D",M="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",L="Cos",z="Cosh",P="Cumprod",U="Cumsum",W="CropAndResize",V="DenseBincount",G="DepthToSpace",H="DepthwiseConv2dNative",j="DepthwiseConv2dNativeBackpropFilter",X="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",Q="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",J="RealDiv",Z="Einsum",ee="Elu",te="EluGrad",ne="Erf",se="Equal",re="Exp",ae="ExpandDims",ie="Expm1",oe="FFT",le="Fill",ue="FlipLeftRight",ce="Floor",he="FloorDiv",pe="FusedBatchNorm",de="GatherV2",fe="GatherNd",me="Greater",ge="GreaterEqual",ye="Identity",be="IFFT",xe="Imag",we="IsFinite",ve="IsInf",ke="IsNan",Ie="LeakyRelu",Se="Less",Ne="LessEqual",Te="LinSpace",Ce="Log",Ee="Log1p",$e="LogicalAnd",Ae="LogicalNot",De="LogicalOr",Re="LogicalXor",_e="LogSoftmax",Oe="LowerBound",Fe="LRN",Me="LRNGrad",Be="Max",Le="Maximum",ze="MaxPool",Pe="MaxPoolGrad",Ue="MaxPool3D",We="MaxPool3DGrad",Ve="MaxPoolWithArgmax",Ge="Mean",He="Min",je="Minimum",Xe="MirrorPad",qe="Mod",Ke="Multinomial",Qe="Multiply",Ye="Neg",Je="NotEqual",Ze="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",st="OneHot",rt="Pack",at="PadV2",it="Pool",ot="Pow",lt="Prelu",ut="Prod",ct="RaggedGather",ht="RaggedRange",pt="RaggedTensorToTensor",dt="Range",ft="Real",mt="Reciprocal",gt="Relu",yt="Reshape",bt="ResizeNearestNeighbor",xt="ResizeNearestNeighborGrad",wt="ResizeBilinear",vt="ResizeBilinearGrad",kt="Relu6",It="Reverse",St="Round",Nt="Rsqrt",Tt="ScatterNd",Ct="SearchSorted",Et="Select",$t="Selu",At="Slice",Dt="Sin",Rt="Sinh",_t="Sign",Ot="Sigmoid",Ft="Softplus",Mt="Sqrt",Bt="Sum",Lt="SpaceToBatchND",zt="SplitV",Pt="Softmax",Ut="SparseFillEmptyRows",Wt="SparseReshape",Vt="SparseSegmentMean",Gt="SparseSegmentSum",Ht="SparseToDense",jt="SquaredDifference",Xt="Square",qt="StridedSlice",Kt="StringNGrams",Qt="StringSplit",Yt="StringToHashBucketFast",Jt="Sub",Zt="Tan",en="Tanh",tn="Tile",nn="TopK",sn="Transform",rn="Transpose",an="Unique",on="Unpack",ln="UnsortedSegmentSum",un="UpperBound",cn="ZerosLike",hn="Step",pn="FromPixels",dn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{Li:()=>p,T3:()=>m,bt:()=>f,nE:()=>d,pI:()=>l,tr:()=>c,uk:()=>u,wC:()=>h});var s=n(2885),r=n(5938),a=n(4706);const i=(0,r.R)("kernelRegistry",(()=>new Map)),o=(0,r.R)("gradRegistry",(()=>new Map));function l(e,t){const n=g(e,t);return i.get(n)}function u(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,s=g(t,n);i.has(s)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(s,e)}function p(e){const{kernelName:t}=e;o.has(t)&&(0,s.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function d(e,t){const n=g(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){c(e).forEach((e=>{h(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},4706:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r,c:()=>a});var s=n(2885);function r(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,s.OB)().getBool("IS_TEST")||(0,s.OB)().getBool("PROD")||console.log(...e)}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return s.BV.runKernel(r.yj2,e)}{const e={x:t};return s.BV.runKernel(r.SYM,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({acos_:function(e){const t={x:(0,a._1)(e,"x","acos")};return s.BV.runKernel(r.VGw,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({acosh_:function(e){const t={x:(0,a._1)(e,"x","acosh")};return s.BV.runKernel(r.SpW,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.mm_,l)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.oT6,i,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.IKK,i,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},i={axis:t};return s.BV.runKernel(r.sJF,n,i)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMin")},i={axis:t};return s.BV.runKernel(r.aJk,n,i)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({asin_:function(e){const t={x:(0,a._1)(e,"x","asin")};return s.BV.runKernel(r.M2y,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({asinh_:function(e){const t={x:(0,a._1)(e,"x","asinh")};return s.BV.runKernel(r.qw7,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({atan_:function(e){const t={x:(0,a._1)(e,"x","atan")};return s.BV.runKernel(r.jMg,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.QCc,l)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({atanh_:function(e){const t={x:(0,a._1)(e,"x","atanh")};return s.BV.runKernel(r.Oyi,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2271),l=n(2582),u=n(2668),c=n(4968);const h=(0,u.op)({avgPool_:function(e,t,n,u,h){const p=(0,a._1)(e,"x","avgPool","float32");i.hu(l.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),l.m("avgPool",u,h);const m={x:d},g={filterSize:t,strides:n,pad:u,dimRoundingMode:h};let y=s.BV.runKernel(r.JhU,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{LJ:()=>c,Q3:()=>u,Vh:()=>a,YB:()=>r,kz:()=>i,lB:()=>l,rv:()=>o,sY:()=>h});var s=n(569);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function i(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function l(e,t,n){s.hu(r(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(r(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,a._1)(e,"x","batchToSpaceND"),l=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%l==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`));const u={x:o},c={blockShape:t,crops:n};return s.BV.runKernel(r.zws,u,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>l});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(4968);const l=(0,n(2668).op)({batchNorm_:function(e,t,n,l,u,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),p=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=u&&(f=(0,a._1)(u,"scale","batchNorm")),null!=l&&(m=(0,a._1)(l,"offset","batchNorm")),i.hu(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),scale:f,offset:m,mean:p,variance:d},y={varianceEpsilon:c},b=s.BV.runKernel(r.sHE,g,y);return(0,o.X)(b,h.shape)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>c});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(8723),l=n(2668),u=n(4968);const c=(0,l.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const l=n.shape;if((0,i.Mu)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const c=n.shape,h=Array.from(t);for(let e=t.length-1;e>=0;e--)if(c[e]===t[e])h[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${l}] cannot be broadcast to [${t}].`);if(0===h.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.d)(n);const p={x:n},d={reps:h};return s.BV.runKernel(r.n9L,p,d)}})},2200:(e,t,n)=>{"use strict";function s(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function r(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>a,getBroadcastDims:()=>s,getReductionAxes:()=>r})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var s=n(4077),r=n(569);function a(e,t="float32",n){return t=t||"float32",r.Mu(e),new s.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},l={dtype:t};return s.BV.runKernel(r.RFZ,o,l)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({ceil_:function(e){const t={x:(0,a._1)(e,"x","ceil","float32")};return s.BV.runKernel(r.gJX,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>l});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(4006);const l=(0,n(2668).op)({clipByValue_:function(e,t,n){const l=(0,a._1)(e,"x","clipByValue");if(i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,o.h)(l.shape,t,l.dtype);const u={x:l},c={clipValueMin:t,clipValueMax:n};return s.BV.runKernel(r.xnO,u,c)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return s.BV.runKernel(r.iJz,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const l={real:n,imag:o};return s.BV.runKernel(r.Zz9,l)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(8723);const l=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const l=n,u={axis:t};return s.BV.runKernel(r.Eh3,l,u)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var s=n(5382),r=n(569),a=n(4794),i=n(2582),o=n(2668),l=n(4968);const u=(0,o.op)({conv1d_:function(e,t,n,o,u="NWC",c=1,h){const p=(0,s._1)(e,"x","conv1d"),d=(0,s._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1]])),r.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),r.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),i.m("conv1d",o,h),r.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),r.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),r.hu(i.U3(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),r.hu(i.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),r.hu("NWC"===u,(()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`));const g=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,l.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],w=(0,a.T)(y,g,b,o,"NHWC",x,h);return m?(0,l.X)(w,[w.shape[2],w.shape[3]]):(0,l.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({conv2d_:function(e,t,n,l,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","conv2d","float32"),f=(0,a._1)(t,"filter","conv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.m("conv2d",l,p);const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),i.hu(o.U3(h),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),i.hu(o.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},x={strides:n,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p},w=s.BV.runKernel(r.mhS,b,x);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},6013:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2582),o=n(2668),l=n(4968);const u=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,u,c="NHWC",h){let p=e;3===e.rank&&(p=(0,l.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,l.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===p.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),a.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?p.shape[3]:p.shape[1],m="NHWC"===c?d.shape[3]:d.shape[1];a.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),a.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.m("conv2dDerFilter",u,h);const g={x:p,dy:d},y={strides:o,pad:u,dataFormat:c,dimRoundingMode:h,filterShape:n};return s.BV.runKernel(r.wUP,g,y)}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2582),o=n(2668),l=n(4968);const u=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,u,c="NHWC",h){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let p=e,d=t,f=!1;3===t.rank&&(f=!0,d=(0,l.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),a.hu(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`)),a.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?p[3]:p[1],g="NHWC"===c?d.shape[3]:d.shape[1];a.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),a.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.m("conv2dDerInput",u,h);const y={dy:d,filter:n},b={strides:o,pad:u,dataFormat:c,dimRoundingMode:h,inputShape:p},x=s.BV.runKernel(r.wm,y,b);return f?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var s=n(5382),r=n(9832);const a=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,a,i,o){const l=(0,s._1)(e,"x","conv2dTranspose"),u=(0,s._1)(t,"filter","conv2dTranspose");return(0,r._)(n,l,u,a,i,"NHWC",o)}})},7594:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var s=n(7097),r=n(9121),a=n(569),i=n(2668),o=n(4968);const l=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,l){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const p=u[4],d=c.shape[4];a.hu(5===u.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`)),a.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),a.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:l,strides:i,inputShape:u},g=s.BV.runKernel(r.ik2,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:(e,t,n)=>{"use strict";n.d(t,{I0:()=>f,Ix:()=>o,Rf:()=>r,U3:()=>g,Xw:()=>a,aO:()=>u,jT:()=>m,jw:()=>l,m:()=>b,pl:()=>i,sl:()=>y});var s=n(569);function r(e,t,n,s,r="NHWC",a){return o(e,[...t,e[3]],n,a,s,null,null,y(r))}function a(e,t,n,s,r,a,i="channelsLast"){const[l,u]=c(t);let h;if("channelsLast"===i)h=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);h=[l,u,e[1],e[1]]}return o(e,h,n,s,r,a,!1,i)}function i(e,t,n,s,r,a,i="NDHWC"){const[o,u,c]=h(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[o,u,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",p=[o,u,c,e[1],e[1]]}return l(e,p,n,s,r,!1,d,a)}function o(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,m,h,f]=e}const[g,y,,b]=t,[x,w]=c(n),[v,k]=c(s),I=p(g,v),S=p(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,s,r,a,i,o,l){let c,h,p;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=u(e,t,n));const a=e[1];return[d((e[0]-t+2*s)/n+1,r),d((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);h=r[0],p=r[1]}else if("same"===e){h=Math.ceil(t/s),p=Math.ceil(n/r);const e=Math.max(0,(h-1)*s+a-t),o=Math.max(0,(p-1)*r+i-n),l=Math.floor(e/2),u=e-l,d=Math.floor(o/2);c={top:l,bottom:u,left:d,right:o-d,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/s),p=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=d((t-a+u+f)/s+1,o),p=d((n-i+m+g)/r+1,o)}}return{padInfo:c,outHeight:h,outWidth:p}}(r,h,f,x,w,I,S,a,o),E=i?b*m:b;let $;return"channelsFirst"===o?$=[l,E,T,C]:"channelsLast"===o&&($=[l,T,C,E]),{batchSize:l,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:E,padInfo:N,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:v,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function l(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,c,f,m]=e}const[y,b,x,,w]=t,[v,k,I]=h(n),[S,N,T]=h(s),C=p(y,S),E=p(b,N),$=p(x,T),{padInfo:A,outDepth:D,outHeight:R,outWidth:_}=function(e,t,n,s,r,a,i,o,l,c,h){let p,f,m,g;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,s,r,a){null==r&&(r=u(e,t[0],s[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*r>=t[n]&&(i[n]=d((e[n]-t[n]+2*r)/s[n]+1,a));return i}([t,n,s,1],[o,l,c],0,[r,a,i],e,h);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/r),m=Math.ceil(n/a),g=Math.ceil(s/i);const e=(f-1)*r+o-t,u=(m-1)*a+l-n,h=(g-1)*i+c-s,d=Math.floor(e/2),y=e-d,b=Math.floor(u/2),x=u-b,w=Math.floor(h/2);p={top:b,bottom:x,left:w,right:h-w,front:d,back:y,type:"SAME"}}}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(r,c,f,m,v,k,I,C,E,$,o),O=a?w*g:w;let F;return"channelsFirst"===i?F=[l,O,D,R,_]:"channelsLast"===i&&(F=[l,D,R,_,O]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:D,outHeight:R,outWidth:_,outChannels:O,padInfo:A,strideDepth:v,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:$,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:e,outShape:F,filterShape:t}}function u(e,t,n,s=1){const r=p(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"==typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,s]=c(e);return 1===t&&1===n&&1===s}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)s.hu(s.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{s.hu(s.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({cos_:function(e){const t={x:(0,a._1)(e,"x","cos","float32")};return s.BV.runKernel(r.mc4,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({cosh_:function(e){const t={x:(0,a._1)(e,"x","cosh","float32")};return s.BV.runKernel(r.TR1,t)}})},9640:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({cumprod_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumprod")},l={axis:t,exclusive:n,reverse:i};return s.BV.runKernel(r.Byc,o,l)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumsum")},l={axis:t,exclusive:n,reverse:i};return s.BV.runKernel(r.iHb,o,l)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,a._1)(e,"x","depthToSpace","float32"),l="NHWC"===n?o.shape[1]:o.shape[2],u="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const h={x:o},p={blockSize:t,dataFormat:n};return s.BV.runKernel(r.T0n,h,p)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>c});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({depthwiseConv2d_:function(e,t,n,l,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","depthwiseConv2d","float32"),f=(0,a._1)(t,"filter","depthwiseConv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.m("depthwiseConv2d",l,p);const b={x:m,filter:f},x={strides:n,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p},w=s.BV.runKernel(r.cie,b,x);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},8098:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var s=n(7097),r=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,l=[1,1],u){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:h},d={strides:a,pad:o,dimRoundingMode:u,dilations:l,filterShape:n};return s.BV.runKernel(r.sL$,p,d)}})},4375:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var s=n(7097),r=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,l=[1,1],u){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},d={strides:a,pad:o,dimRoundingMode:u,dilations:l,inputShape:e},f=s.BV.runKernel(r.y7R,p,d);return h?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>u});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2668),l=n(4968);const u=(0,o.op)({dilation2d_:function(e,t,n,o,u=[1,1],c="NHWC"){const h=(0,a._1)(e,"x","dilation2d"),p=(0,a._1)(t,"filter","dilation2d");i.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),i.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let d=h,f=!1;3===h.rank&&(d=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0),i.hu(d.shape[3]===p.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${d.shape[3]} vs ${p.shape[2]}`));const m={x:d,filter:p},g={strides:n,pad:o,dilations:u},y=s.BV.runKernel(r.p4S,m,g);return f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(9165);const l=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),l=(0,i._1)(t,"b","div");if([n,l]=(0,a.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,o.q)(n,l);const u={a:n,b:l};return s.BV.runKernel(r.oHH,u,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var s=n(747),r=n(5382),a=n(1274),i=n(6477),o=n(2668),l=n(5912),u=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,r._1)(e,"a","div"),o=(0,r._1)(t,"b","div");[n,o]=(0,s.makeTypesMatch)(n,o);const c=(0,a.h)(n,o),h=(0,u.P)(c),p=(0,i.D)(o,h);return(0,l.a)(p,h,c)}})},548:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var s=n(5382),r=n(569),a=n(8687),i=n(2668),o=n(4968);const l=(0,i.op)({dot_:function(e,t){const n=(0,s._1)(e,"t1","dot"),i=(0,s._1)(t,"t2","dot");r.hu(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const l=1===n.rank?n.size:n.shape[1],u=1===i.rank?i.size:i.shape[0];if(r.hu(l===u,(()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),s=(0,a.O)(e,t);return(0,o.X)(s,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),s=(0,a.O)(e,t);return(0,o.X)(s,[s.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,a.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,a.O)(n,e)}}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu","float32")};return s.BV.runKernel(r.SX0,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200);const l=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),l=(0,i._1)(t,"b","equal","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.hdR,u)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>l});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2271);const l=(0,n(2668).op)({erf_:function(e){let t=(0,a._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return s.BV.runKernel(r.Omj,n)}})},1954:(e,t,n)=>{"use strict";n.d(t,{d:()=>r});var s=n(3561);const r=(0,n(2668).op)({euclideanNorm_:function(e,t=null,n=!1){return(0,s.K)(e,"euclidean",t,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return s.BV.runKernel(r.NEP,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},l={dim:t};return s.BV.runKernel(r.YFo,o,l)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({expm1_:function(e){const t={x:(0,a._1)(e,"x","expm1")};return s.BV.runKernel(r.Y0y,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(569);function i(e,t,n){(0,a.Mu)(e);const i={shape:e,value:t,dtype:n};return s.BV.runKernel(r.deh,{},i)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor","float32")};return s.BV.runKernel(r.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.jeX,l)}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,QH:()=>g,pf:()=>m,uy:()=>y});var s=n(2200),r=n(3233),a=n(9133),i=n(4841),o=n(8151),l=n(7409),u=n(3582),c=n(4968),h=n(625),p=n(1901),d=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const r=s.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,d.S)(n,r)),(0,c.X)(n,e.shape)}function g(e,t,n,s){if("linear"===t)return e;if("relu"===t)return(0,l.U)(e);if("elu"===t)return(0,r.p)(e);if("relu6"===t)return(0,u.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,s);if("sigmoid"===t)return(0,h.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},l={axis:n,batchDims:i};return s.BV.runKernel(r.qi_,o,l)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200);const l=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),l=(0,i._1)(t,"b","greater","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.iZT,u)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200);const l=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),l=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.Acj,u)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return s.BV.runKernel(r.J_u,t)}})},3305:(e,t,n)=>{"use strict";n.d(t,{I:()=>u});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2668),l=n(4968);const u=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const u=(0,a._1)(e,"images","resizeBilinear");i.hu(3===u.rank||4===u.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=u,h=!1;3===u.rank&&(h=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r._Yw,p,d);return h?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},5098:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2668),l=n(4968);const u=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const u=(0,a._1)(e,"images","resizeNearestNeighbor");i.hu(3===u.rank||4===u.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===u.dtype||"int32"===u.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=u,h=!1;3===u.rank&&(h=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r.dpD,p,d);return h?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3963:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({isFinite_:function(e){const t={x:(0,a._1)(e,"x","isFinite")};return s.BV.runKernel(r.avt,t)}})},4365:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({isInf_:function(e){const t={x:(0,a._1)(e,"x","isInf")};return s.BV.runKernel(r.iWB,t)}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,a._1)(e,"x","isNaN")};return s.BV.runKernel(r.r7n,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},i={alpha:t};return s.BV.runKernel(r.J$2,n,i)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200);const l=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),l=(0,i._1)(t,"b","less","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.vtC,u)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200);const l=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),l=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.CAk,u)}})},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2668),l=n(4968);const u=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,u=.5){const c=(0,a._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,p=!1;3===c.rank&&(p=!0,h=(0,l.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:h},f={depthRadius:t,bias:n,alpha:o,beta:u},m=s.BV.runKernel(r.eZ0,d,f);return p?(0,l.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log","float32")};return s.BV.runKernel(r.ZbH,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return s.BV.runKernel(r.kU,t)}})},3888:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var s=n(633),r=n(5382),a=n(4841),i=n(7370),o=n(2668),l=n(625),u=n(3694);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,r._1)(e,"x","logSigmoid");return(0,s.cb)((e=>({value:(0,i.W)((0,u.W)((0,i.W)(e))),gradFunc:t=>(0,a.d)(t,(0,l.X)((0,i.W)(e)))})))(t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var s=n(633),r=n(5382),a=n(2271),i=n(4842),o=n(2597),l=n(3307),u=n(4841),c=n(2668),h=n(827),p=n(5475);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,r._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,s.cb)(((e,n)=>{const s=(0,l.F)(e,t,!0),r=(0,h.l)(e,s),c=(0,h.l)((0,a.p)(r,"float32"),(0,o.c)((0,p.S)((0,i.Q)(r),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[s]=n,r=(0,i.Q)(s);return(0,h.l)(e,(0,u.d)((0,p.S)(e,t,!0),r))}}}))(n)}})},1391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var s=n(5382),r=n(569),a=n(6407),i=n(3591),o=n(4842),l=n(2597),u=n(3307),c=n(2668),h=n(4968),p=n(827),d=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,s._1)(e,"x","logSumExp"),f=(0,r.EC)(t,c.shape),m=(0,u.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,d.S)(y,f),x=(0,l.c)(b),w=(0,a.I)((0,h.X)(m,x.shape),x);if(n){const e=(0,i.rv)(w.shape,f);return(0,h.X)(w,e)}return w}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return s.BV.runKernel(r.PYm,l)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,a._1)(e,"x","logicalNot","bool")};return s.BV.runKernel(r.VfG,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,a._1)(e,"a","logicalOr","bool"),o=(0,a._1)(t,"b","logicalOr","bool");(0,i.assertAndGetBroadcastShape)(n.shape,o.shape);const l={a:n,b:o};return s.BV.runKernel(r.MZg,l)}})},596:(e,t,n)=>{"use strict";n.d(t,{e:()=>l});var s=n(5382),r=n(2200),a=n(2856),i=n(8651),o=n(5750);const l=(0,n(2668).op)({logicalXor_:function(e,t){const n=(0,s._1)(e,"a","logicalXor","bool"),l=(0,s._1)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,l.shape),(0,a.H)((0,o.K)(e,t),(0,i.h)((0,a.H)(e,t)))}})},9876:(e,t,n)=>{"use strict";var s;n.d(t,{I:()=>s}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(s||(s={}))},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let l=(0,i._1)(e,"a","matMul"),u=(0,i._1)(t,"b","matMul");[l,u]=(0,a.makeTypesMatch)(l,u);const c={a:l,b:u},h={transposeA:n,transposeB:o};return s.BV.runKernel(r.XLW,c,h)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return s.BV.runKernel(r.YoZ,i,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var s=n(7097),r=n(9121),a=n(5382),i=n(569),o=n(2582),l=n(2668),u=n(4968);const c=(0,l.op)({maxPool_:function(e,t,n,l,c){const h=(0,a._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.m("maxPool",l,c);const f={x:p},m={filterSize:t,strides:n,pad:l,dimRoundingMode:c},g=s.BV.runKernel(r.mTV,f,m);return d?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200),l=n(2271);const u=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),u=(0,i._1)(t,"b","maximum");[n,u]=(0,a.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return s.BV.runKernel(r.BMI,c)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","mean")},o={axis:t,keepDims:n};return s.BV.runKernel(r.q2K,i,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","min")},o={axis:t,keepDims:n};return s.BV.runKernel(r.c17,i,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200),l=n(2271);const u=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),u=(0,i._1)(t,"b","minimum");[n,u]=(0,a.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return s.BV.runKernel(r.q8u,c)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,a._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const l="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-l&&t[e][1]>=0&&t[e][1]<=o.shape[e]-l,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-l} or less than 0 for input of shape ${o.shape}`));const u={paddings:t,mode:n},c={x:o};return s.BV.runKernel(r.jQs,c,u)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.Vbg,l)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.wYn,l)}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return s.BV.runKernel(r.kuV,t)}})},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var s=n(5382),r=n(569),a=n(6235),i=n(3591),o=n(3307),l=n(5735),u=n(2668),c=n(3453),h=n(4968),p=n(9494),d=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,l.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,l.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,u.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,s._1)(e,"x","norm"),t,n);let l=o.shape;if(a){const t=(0,r.EC)(n,e.shape);l=i.rv(o.shape,t)}return(0,h.X)(o,l)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200);const l=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),l=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.yQU,u)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const l={indices:(0,a._1)(e,"indices","oneHot","int32")},u={dtype:o,depth:t,onValue:n,offValue:i};return s.BV.runKernel(r.we_,l,u)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(7097),r=n(569),a=n(1661),i=n(723);function o(e,t="float32"){if((0,r.Mu)(e),"complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,r.p8)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return s.BV.runKernel(r.qWM,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{op:()=>i,z:()=>a});var s=n(7097),r=n(569);const a="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const o=(...e)=>{s.BV.startScope(n);try{const t=i(...e);return(0,r.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),s.BV.endScope(t),t}catch(e){throw s.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},3412:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>p.z,WnP:()=>r.W,Khb:()=>a.K,__u:()=>i._,IHx:()=>o.I,QBD:()=>d,$6P:()=>f.$,YjB:()=>m.Y,NqF:()=>g.N,vHJ:()=>y.v,ZRM:()=>b.Z,VfV:()=>x.V,z4N:()=>w.z,fvJ:()=>v.f,C80:()=>k.C,wS1:()=>I.w,uR5:()=>C,zEQ:()=>O,tgs:()=>M.t,Dxk:()=>B,JY5:()=>L,p3b:()=>z,E4h:()=>F.E,yE8:()=>P,anm:()=>Yn,XsQ:()=>U,UFq:()=>W.U,f3b:()=>V.f,pju:()=>S.p,mDi:()=>G.m,iUl:()=>H.i,d9v:()=>j.d,PYB:()=>X.P,zoF:()=>E.z,gME:()=>q,Izb:()=>K,MNy:()=>Q,ZaL:()=>Y,PAt:()=>J.P,Tek:()=>Z.T,bc:()=>ee.b,pdZ:()=>te,$QV:()=>se,mCk:()=>re.m,f9Y:()=>ae.f,mew:()=>ls,$Gn:()=>ie.$,zbp:()=>oe.z,ppE:()=>le,nTT:()=>ue.n,B10:()=>ce.B,Ka3:()=>he,WmZ:()=>pe.W,hiC:()=>de.h,NTj:()=>fe.N,AKD:()=>me.A,rvX:()=>is,WYO:()=>ge,pyx:()=>ye.p,GRh:()=>os,DgJ:()=>be.D,qNN:()=>xe.q,d2q:()=>we.d,Qqt:()=>ve.Q,dt4:()=>ke.d,t$B:()=>Ie.t,iyy:()=>Ne,kp_:()=>bn.k,hlL:()=>Te.h,GWj:()=>Ce.G,qPi:()=>Ee.q,imm:()=>s,Iqj:()=>$e.I,dbB:()=>as,pjt:()=>Ae.p,brS:()=>De.b,Sxn:()=>xn.S,asL:()=>Re.a,BHj:()=>or,V3u:()=>us,wx0:()=>wn.w,xVT:()=>_e.x,UWc:()=>Oe.U,i2d:()=>Fe.i,hi7:()=>Me.h,d9m:()=>Be.d,zN1:()=>Le.z,$r2:()=>lr,SX3:()=>ze,G9k:()=>Pe.G,cM7:()=>Ue.c,Krr:()=>We.K,e_t:()=>Ve.e,CmS:()=>Ge.C,l_t:()=>He.l,HvI:()=>je.H,hJK:()=>Xe.h,K5V:()=>qe.K,egP:()=>Ke.e,MB5:()=>ur,eab:()=>Je,OI3:()=>$.O,Fp7:()=>Ze.F,_sB:()=>et._,YQQ:()=>tt,Ip$:()=>nt,gWQ:()=>st.g,J69:()=>rt.J,ry_:()=>ot,VV$:()=>lt.V,LTh:()=>ut.L,VdP:()=>ct.V,wQq:()=>ht.w,Gi7:()=>mt,p_:()=>ts,dC7:()=>A.d,rq4:()=>gt,SJ_:()=>yt,W76:()=>bt.W,KOy:()=>Zn.K,Quu:()=>xt.Q,lfX:()=>wt.l,iUs:()=>at.i,JpU:()=>vt.J,op:()=>p.op,N2O:()=>kt,vku:()=>It.v,pNR:()=>St,koy:()=>Nt,t1L:()=>Tt,lGY:()=>Ct,d_R:()=>Et.d,sQ3:()=>$t.s,AL3:()=>At.A,S0v:()=>Dt.S,WVs:()=>Rt.W,$gW:()=>_t,VT$:()=>Ot,N89:()=>Ft,TN_:()=>Mt,wzB:()=>Ut,nGf:()=>Wt,ruB:()=>Vt,LGj:()=>Gt,w6H:()=>Ht,kwC:()=>jt.k,M25:()=>Xt.M,UYe:()=>qt.U,btT:()=>Kt.b,XLQ:()=>T.X,GYS:()=>Qt.G,SDf:()=>Yt,diP:()=>Jt,sx7:()=>Zt,mG2:()=>en,QEs:()=>vn.Q,NMM:()=>tn.N,bp0:()=>nn.b,iD$:()=>sn.i,snQ:()=>ss,zcT:()=>Ye,U8D:()=>rn.U,U_I:()=>an.U,ODp:()=>on,XD2:()=>D.X,Xxe:()=>ln.X,tdS:()=>ir,O$l:()=>un.O,R_K:()=>cn.R,tPi:()=>R.t,jZU:()=>hn,SmN:()=>pn,CnO:()=>dn,p0P:()=>fn,XAC:()=>mn.X,Wvh:()=>gn.W,fBT:()=>yn.f,rVs:()=>cr,ers:()=>rs,uN7:()=>ar,Vl2:()=>kn.V,_b3:()=>In._,h62:()=>dt.h,$i:()=>Sn.$,L9e:()=>Nn.L,knu:()=>Tn.k,Nbs:()=>Cn.N,NXj:()=>En.N,Z_8:()=>hr,luU:()=>ft.l,Smz:()=>$n.S,ORZ:()=>An.O,AEp:()=>_.A,XeE:()=>Dn.X,RRF:()=>_n,odF:()=>On,wOQ:()=>Fn.w,yXz:()=>Mn,Bfx:()=>Bn,xZs:()=>Ln,Gg6:()=>Se.G,hg7:()=>zn.h,p4s:()=>Jn.p,Xu6:()=>Pn,Two:()=>Un.T,pUJ:()=>Wn.p,HHK:()=>Vn.H,GaM:()=>Gn,VD$:()=>Hn,arb:()=>jn.a,itS:()=>qn,lls:()=>Kn.l,P84:()=>Qn.P});var s={};n.r(s),n.d(s,{conv2d:()=>ms,depthwiseConv2d:()=>bs,matMul:()=>xs});var r=n(6235),a=n(7839),i=n(1470),o=n(6407),l=n(7097),u=n(9121),c=n(5382),h=n(569),p=n(2668);const d=(0,p.op)({addN_:function(e){h.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),h.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!h.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return l.BV.runKernel(u.Xze,s)}});var f=n(781),m=n(2998),g=n(47),y=n(7394),b=n(2421),x=n(1891),w=n(7037),v=n(9812),k=n(369),I=n(5176),S=n(2271),N=n(2582),T=n(4968);const C=(0,p.op)({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=(0,c._1)(e,"x","avgPool3d","float32");let o=i,p=!1;4===i.rank&&(p=!0,o=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),h.hu("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),h.hu("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,N.m)("avgPool3d",s,r);const d={x:o},f={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let m=l.BV.runKernel(u._k9,d,f);return m=(0,S.p)(m,o.dtype),p?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(6884),$=n(8687),A=n(4841),D=n(625),R=n(2676),_=n(1869);const O=(0,p.op)({basicLSTMCell_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"forgetBias","basicLSTMCell"),l=(0,c._1)(t,"lstmKernel","basicLSTMCell"),u=(0,c._1)(n,"lstmBias","basicLSTMCell"),h=(0,c._1)(s,"data","basicLSTMCell"),p=(0,c._1)(r,"c","basicLSTMCell"),d=(0,c._1)(a,"h","basicLSTMCell"),f=(0,E.z)([h,d],1),m=(0,$.O)(f,l),g=(0,o.I)(m,u),y=g.shape[0],b=g.shape[1]/4,x=[y,b],w=(0,R.t)(g,[0,0],x),v=(0,R.t)(g,[0,b],x),k=(0,R.t)(g,[0,2*b],x),I=(0,R.t)(g,[0,3*b],x),S=(0,o.I)((0,A.d)((0,D.X)(w),(0,_.A)(v)),(0,A.d)(p,(0,D.X)((0,o.I)(i,k))));return[S,(0,A.d)((0,_.A)(S),(0,D.X)(I))]}});var F=n(8441),M=n(7505);const B=(0,p.op)({batchNorm2d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),l=(0,c._1)(n,"variance","batchNorm");let u,p;return null!=r&&(u=(0,c._1)(r,"scale","batchNorm")),null!=s&&(p=(0,c._1)(s,"offset","batchNorm")),h.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),h.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),h.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&h.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=p&&h.hu(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,l,p,u,a)}}),L=(0,p.op)({batchNorm3d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),l=(0,c._1)(n,"variance","batchNorm");let u,p;return null!=r&&(u=(0,c._1)(r,"scale","batchNorm")),null!=s&&(p=(0,c._1)(s,"offset","batchNorm")),h.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),h.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),h.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&h.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=p&&h.hu(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,l,p,u,a)}}),z=(0,p.op)({batchNorm4d_:function(e,t,n,s,r,a){const i=(0,c._1)(e,"x","batchNorm"),o=(0,c._1)(t,"mean","batchNorm"),l=(0,c._1)(n,"variance","batchNorm");let u,p;return null!=r&&(u=(0,c._1)(r,"scale","batchNorm")),null!=s&&(p=(0,c._1)(s,"offset","batchNorm")),h.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),h.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),h.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&h.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=p&&h.hu(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),(0,M.t)(i,o,l,p,u,a)}}),P=(0,p.op)({bincount_:function(e,t,n){const s=(0,c._1)(e,"x","bincount"),r=(0,c._1)(t,"weights","bincount");h.hu("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return l.BV.runKernel(u.zvY,a,i)}}),U=(0,p.op)({broadcastArgs_:function(e,t){const n=(0,c._1)(e,"s0","broadcastArgs","int32"),s=(0,c._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return l.BV.runKernel(u.eEB,r)}});var W=n(8247),V=n(2657),G=n(6825),H=n(2279),j=n(8723),X=n(1661);const q=(0,p.op)({concat1d_:function(e){return(0,E.z)(e,0)}}),K=(0,p.op)({concat2d_:function(e,t){return(0,E.z)(e,t)}}),Q=(0,p.op)({concat3d_:function(e,t){return(0,E.z)(e,t)}}),Y=(0,p.op)({concat4d_:function(e,t){return(0,E.z)(e,t)}});var J=n(1355),Z=n(4794),ee=n(1405);const te=(0,p.op)({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=(0,c._1)(e,"x","conv3d"),o=(0,c._1)(t,"filter","conv3d");let p=i,d=!1;4===i.rank&&(d=!0,p=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===p.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`)),h.hu(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),h.hu(p.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),h.hu((0,N.jT)(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),h.hu("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),h.hu((0,N.U3)(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),h.hu((0,N.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:p,filter:o},m={strides:n,pad:s,dataFormat:r,dilations:a},g=l.BV.runKernel(u.x12,f,m);return d?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ne=n(7594);const se=(0,p.op)({conv3dTranspose_:function(e,t,n,s,r){const a=(0,c._1)(e,"x","conv3dTranspose"),i=(0,c._1)(t,"filter","conv3dTranspose");return(0,ne._)(n,a,i,s,r)}});var re=n(173),ae=n(2699),ie=n(9640),oe=n(7405);const le=(0,p.op)({denseBincount_:function(e,t,n,s=!1){const r=(0,c._1)(e,"x","denseBincount"),a=(0,c._1)(t,"weights","denseBincount");h.hu("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),h.hu(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return l.BV.runKernel(u.QRR,i,o)}});var ue=n(9112),ce=n(4718);const he=(0,p.op)({diag_:function(e){const t={x:(0,c._1)(e,"x","diag")};return l.BV.runKernel(u.$w,t)}});var pe=n(557),de=n(1274),fe=n(9322),me=n(548);const ge=(0,p.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"einsum"))),s={equation:e};return l.BV.runKernel(u.$g6,n,s)}});var ye=n(3233),be=n(6477),xe=n(4650),we=n(1954),ve=n(4842),ke=n(1300),Ie=n(3426),Se=n(7501);const Ne=(0,p.op)({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=(0,V.f)([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=(0,T.X)(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,Se.G)((0,ke.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,Se.G)((0,ke.d)((0,ke.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Se.G)((0,ke.d)((0,ke.d)((0,ke.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Te=n(4006),Ce=n(6943),Ee=n(9165),$e=n(4926),Ae=n(636),De=n(7630),Re=n(4386),_e=n(3963),Oe=n(4365),Fe=n(6230),Me=n(9133),Be=n(6573),Le=n(624);function ze(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return l.BV.runKernel(u.e7N,{},s)}var Pe=n(9648),Ue=n(2597),We=n(7474),Ve=n(3888),Ge=n(1510),He=n(1391),je=n(2856),Xe=n(8651),qe=n(5750),Ke=n(596);const Qe=2147483648,Ye=(0,p.op)({searchSorted_:function(e,t,n="left"){const s=(0,c._1)(e,"sortedSequence","searchSorted"),r=(0,c._1)(t,"values","searchSorted"),a=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],o=(0,T.X)(s,[-1,a]),p=(0,T.X)(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,h.NA)(p.shape)>=Qe)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=Qe)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const d={sortedSequence:o,values:p},f={side:n};return l.BV.runKernel(u.nr8,d,f)}});function Je(e,t){return Ye(e,t,"left")}var Ze=n(3307),et=n(1174);const tt=(0,p.op)({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=(0,c._1)(e,"x","maxPool3d");let o=i,p=!1;4===i.rank&&(p=!0,o=(0,T.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),h.hu(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),h.hu("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),(0,N.m)("maxPool3d",s,r);const d={x:o},f={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},m=l.BV.runKernel(u.OAf,d,f);return p?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),nt=(0,p.op)({maxPoolWithArgmax_:function(e,t,n,s,r=!1){const a={x:(0,c._1)(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},o=l.BV.runKernel(u.vFR,a,i);return{result:o[0],indexes:o[1]}}});var st=n(632),rt=n(5130),at=n(4917),it=n(4077);function ot(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let s=(0,c._1)(e,"x","meshgrid",e instanceof it.es?e.dtype:"float32");if(void 0===t)return[s];let r=(0,c._1)(t,"y","meshgrid",t instanceof it.es?t.dtype:"float32");const a=(0,h.NA)(s.shape),i=(0,h.NA)(r.shape);return"xy"===n?(s=(0,T.X)(s,[1,-1]),r=(0,T.X)(r,[-1,1]),[(0,$.O)((0,at.i)([i,1],s.dtype),s),(0,$.O)(r,(0,at.i)([1,a],r.dtype))]):(s=(0,T.X)(s,[-1,1]),r=(0,T.X)(r,[1,-1]),[(0,$.O)(s,(0,at.i)([1,i],s.dtype)),(0,$.O)((0,at.i)([a,1],r.dtype),r)])}var lt=n(5735),ut=n(4513),ct=n(1483),ht=n(5228),pt=n(3591),dt=n(248),ft=n(827);const mt=(0,p.op)({moments_:function(e,t=null,n=!1){e=(0,c._1)(e,"x","moments");const s=(0,h.EC)(t,e.shape),r=(0,rt.J)(e,s,n);let a=r.shape;n||(a=(0,pt.rv)(r.shape,s));const i=(0,dt.h)((0,ft.l)((0,S.p)(e,"float32"),(0,T.X)(r,a)));return{mean:r,variance:(0,rt.J)(i,s,n)}}}),gt=(0,p.op)({multiRNNCell_:function(e,t,n,s){const r=(0,c._1)(t,"data","multiRNNCell"),a=(0,c.sI)(n,"c","multiRNNCell"),i=(0,c.sI)(s,"h","multiRNNCell");let o=r;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}}),yt=(0,p.op)({multinomial_:function(e,t,n,s=!1){const r=(0,c._1)(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?(0,T.X)(r,[1,-1]):r},h={numSamples:t,seed:n,normalized:s},p=l.BV.runKernel(u.NZg,o,h);return 1===i?(0,T.X)(p,[p.size]):p}});var bt=n(7370),xt=n(6500),wt=n(6708),vt=n(7846);const kt=(0,p.op)({outerProduct_:function(e,t){const n=(0,c._1)(e,"v1","outerProduct"),s=(0,c._1)(t,"v2","outerProduct");h.hu(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=(0,T.X)(n,[-1,1]),a=(0,T.X)(s,[1,-1]);return(0,$.O)(r,a)}});var It=n(9682);const St=(0,p.op)({pad1d_:function(e,t,n=0){return(0,h.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,It.v)(e,[t],n)}}),Nt=(0,p.op)({pad2d_:function(e,t,n=0){return(0,h.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.v)(e,t,n)}}),Tt=(0,p.op)({pad3d_:function(e,t,n=0){return(0,h.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.v)(e,t,n)}}),Ct=(0,p.op)({pad4d_:function(e,t,n=0){return(0,h.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.v)(e,t,n)}});var Et=n(5860),$t=n(3453),At=n(8151),Dt=n(9798),Rt=n(9451);const _t=(0,p.op)({raggedGather_:function(e,t,n,s){const r={paramsNestedSplits:e.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,c._1)(t,"paramsDenseValues","raggedGather"),indices:(0,c._1)(n,"indices","raggedGather","int32")},a={outputRaggedRank:s},i=l.BV.runKernel(u.dDz,r,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),Ot=(0,p.op)({raggedRange_:function(e,t,n){const s=(0,c._1)(e,"starts","raggedRange"),r={starts:s,limits:(0,c._1)(t,"limits","raggedRange",s.dtype),deltas:(0,c._1)(n,"deltas","raggedRange",s.dtype)},a=l.BV.runKernel(u.CQl,r);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),Ft=(0,p.op)({raggedTensorToTensor_:function(e,t,n,s,r){const a=(0,c._1)(e,"shape","raggedTensorToTensor","int32"),i=(0,c._1)(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:(0,c._1)(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:s.map(((e,t)=>(0,c._1)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},h={rowPartitionTypes:r};return l.BV.runKernel(u.BiW,o,h)}}),Mt=(0,p.op)({rand_:function(e,t,n){(0,h.Mu)(e);const s=(0,h.NA)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(s)}for(let e=0;e<s;e++)r[e]=t();return l.BV.makeTensor(r,e,n)}});var Bt=n(6377);class Lt{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Bt.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class zt{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const r=s||Math.random();this.randu=Bt.alea(r.toString()),this.randn=new Lt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do{s=this.randn.nextValue(),a=1+this.c*s}while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Pt{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Bt.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ut=(0,p.op)({randomGamma_:function(e,t,n=1,s="float32",r){if((0,h.Mu)(e),null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const a=new zt(t,n,s,r),i=(0,V.f)(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Wt=(0,p.op)({randomNormal_:function(e,t=0,n=1,s,r){if((0,h.Mu)(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Lt(t,n,s,!1,r),i=(0,V.f)(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Vt=(0,p.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Wt(e,0,1,t,n)}}),Gt=(0,p.op)({randomUniform_:function(e,t=0,n=1,s="float32",r){(0,h.Mu)(e);const a=(0,V.f)(e,s),i=new Pt(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function Ht(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return l.BV.runKernel(u.e6w,{},r)}var jt=n(766),Xt=n(9036),qt=n(7409),Kt=n(3582),Qt=n(7486);const Yt=(0,p.op)({reverse1d_:function(e){const t=(0,c._1)(e,"x","reverse");return h.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Qt.G)(t,0)}}),Jt=(0,p.op)({reverse2d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Qt.G)(n,t)}}),Zt=(0,p.op)({reverse3d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Qt.G)(n,t)}}),en=(0,p.op)({reverse4d_:function(e,t){const n=(0,c._1)(e,"x","reverse");return h.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Qt.G)(n,t)}});var tn=n(7809),nn=n(2634),sn=n(9494),rn=n(5503),an=n(8678);const on=async function(e,t){const n=(0,c._1)(e,"x","setdiff1d"),s=(0,c._1)(t,"y","setdiff1d");h.hu(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),h.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),h.hu(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;const l=new it.YD([o],n.dtype),u=new it.YD([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var ln=n(4434),un=n(9331),cn=n(3254);const hn=(0,p.op)({slice1d_:function(e,t,n){const s=(0,c._1)(e,"x","slice1d");return h.hu(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,[t],[n])}}),pn=(0,p.op)({slice2d_:function(e,t,n){const s=(0,c._1)(e,"x","slice2d");return h.hu(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,t,n)}}),dn=(0,p.op)({slice3d_:function(e,t,n){const s=(0,c._1)(e,"x","slice3d");return h.hu(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,t,n)}}),fn=(0,p.op)({slice4d_:function(e,t,n){const s=(0,c._1)(e,"x","slice4d");return h.hu(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),(0,R.t)(s,t,n)}});var mn=n(682),gn=n(3694),yn=n(7918),bn=n(7020),xn=n(8447),wn=n(4415),vn=n(3710),kn=n(8644),In=n(3261),Sn=n(5265),Nn=n(9590),Tn=n(2991),Cn=n(1901),En=n(5158),$n=n(5475),An=n(1173),Dn=n(701),Rn=n(7852);function _n(e,t){(0,h.Cq)(e);const n=(0,c.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Rn.H)(e,null,n,t)}function On(e,t,n){if((0,h.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=(0,c.C)(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Rn.H)(e,t,s,n)}var Fn=n(9906);function Mn(e,t,n){if((0,h.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=(0,c.C)(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Rn.H)(e,t,s,n)}function Bn(e,t,n){if((0,h.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=(0,c.C)(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Rn.H)(e,t,s,n)}function Ln(e,t,n){if((0,h.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=(0,c.C)(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,(0,Rn.H)(e,t,s,n)}var zn=n(3243);const Pn=(0,p.op)({truncatedNormal_:function(e,t=0,n=1,s,r){if((0,h.Mu)(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Lt(t,n,s,!0,r),i=(0,V.f)(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});var Un=n(9608),Wn=n(8749),Vn=n(4136);function Gn(e,t){return Ye(e,t,"right")}function Hn(e,t=!0,n,s){return l.BV.makeVariable(e,t,n,s)}var jn=n(5912),Xn=n(8333);const qn=async function(e){const t=(0,c._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,Xn.Z)(t.shape,n);return e!==t&&t.dispose(),s};var Kn=n(723),Qn=n(6577);const Yn=async function(e,t,n){const s=(0,c._1)(e,"tensor","boolMask"),r=(0,c._1)(t,"mask","boolMask","bool"),a=null==n?0:n,i=r.rank,o=s.shape;h.hu(i>0,(()=>"mask cannot be scalar")),h.k5(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),p=(0,T.X)(s,u),d=(0,T.X)(r,[-1]),f=await qn(d),m=(0,Nn.L)(f,[1]),g=(0,$e.I)(p,m,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),m.dispose(),p.dispose(),d.dispose(),f.dispose(),g};var Jn=n(9065),Zn=n(3561),es=n(747);const ts=(0,p.op)({movingAverage_:function(e,t,n,s,r=!0){const a=(0,c._1)(e,"v","movingAverage"),i=(0,c._1)(t,"x","movingAverage"),l=(0,c._1)(n,"decay","movingAverage");(0,es.assertTypesMatch)(a,i),h.hu(h.cO(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=(0,sn.i)(1),p=(0,ft.l)(u,l);let d=(0,A.d)((0,ft.l)(i,a),p);if(r){h.hu(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=(0,c._1)(s,"step","movingAverage");d=(0,de.h)(d,(0,ft.l)(u,(0,$t.s)(l,e)))}return(0,o.I)(a,d)}});var ns=n(3028);const ss=(0,p.op)({scatterND_:function(e,t,n){(0,h.Mu)(n);const s=(0,c._1)(e,"indices","scatterND","int32"),r=(0,c._1)(t,"updates","scatterND");ns.validateInput(r,s,n);const a={indices:s,updates:r},i={shape:n};return l.BV.runKernel(u.xQA,a,i)}}),rs=(0,p.op)({sparseToDense_:function(e,t,n,s=0){(0,h.Mu)(n);const r=(0,c._1)(e,"sparseIndices","sparseToDense","int32"),a=(0,c._1)(t,"sparseValues","sparseToDense","string_or_numeric"),i=(0,c._1)(s,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},p={outputShape:n};return l.BV.runKernel(u.D2d,o,p)}}),as=(0,p.op)({gatherND_:function(e,t){const n=(0,c._1)(t,"indices","gatherND","int32"),s={params:(0,c._1)(e,"x","gatherND","string_or_numeric"),indices:n};return l.BV.runKernel(u.q1x,s)}}),is=(0,p.op)({dropout_:function(e,t,n,s){const r=(0,c._1)(e,"x","dropout");if(h.hu("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),h.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof it.es?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(h.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,l=(0,de.h)((0,Ce.G)((0,o.I)(Gt(a,0,1,"float32",s),i)),i);return(0,A.d)(r,l)}});function os(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ls(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return _n(r,"float32")}const us=async function(e,t,n=1){const s=(0,c._1)(e,"predictions","inTopK"),r=(0,c._1)(t,"targets","inTopK");(0,h.hu)(s.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`)),(0,h.hu)(s.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`)),(0,h.k5)(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];(0,h.hu)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await s.data(),o=await r.data(),[l,u]=[i.length/a,a],p=(0,h.WP)("bool",l);for(let e=0;e<l;e++){const t=e*u,s=i.subarray(t,t+u),r=[];for(let e=0;e<s.length;e++)r.push({value:s[e],index:e});r.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){p[e]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),(0,Dn.X)(p,r.shape,"bool")};var cs=n(633),hs=n(2200),ps=n(6013),ds=n(9832),fs=n(9323);const ms=(0,p.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(d=d||"linear",!1===(0,fs.uy)(l.BV.state.gradientDepth,d)){h.hu("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let l=(0,Z.T)(e,t,n,s,r,a,i);return null!=p&&(l=(0,o.I)(l,p)),(0,fs.QH)(l,d,f,m)}const g=(0,c._1)(e,"x","conv2d","float32"),y=(0,c._1)(t,"filter","conv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),N.m("fused conv2d",s,i);const w="NHWC"===r?b.shape[3]:b.shape[1];h.hu(y.shape[2]===w,(()=>`Error in conv2d: depth of input (${w}) must match input depth for filter ${y.shape[2]}.`)),h.hu(N.jT(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const v=N.Ix(b.shape,y.shape,n,a,s,i);let k,I;if(null!=p&&(k=(0,c._1)(p,"bias","fused conv2d"),[k]=(0,es.makeTypesMatch)(k,g),"NHWC"===r?hs.assertAndGetBroadcastShape(v.outShape,k.shape):(h.hu(k.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${k.shape.length}.`)),h.hu(0===k.shape.length||k.shape[0]===v.outChannels||1===k.shape[0],(()=>`Error in fused conv2d: bias shape (${k.shape}) is not compatible with the number of output channels (${v.outChannels})`)))),null!=f){const e=f.shape;if(h.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)h.hu(1===e[0]||e[0]===v.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${v.outChannels}).`));else if(3===e.length)try{hs.assertAndGetBroadcastShape(e,v.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${v.outShape}).`;throw Error(n)}I=(0,c._1)(f,"prelu weights","fused conv2d")}const S=(e,t)=>{h.hu("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[i,o,l,u]=t,c=(0,fs.Fr)(e,l,d);h.hu(N.I0(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[(0,ds._)(o.shape,c,i,n,s),(0,ps.p)(o,c,i.shape,n,s)];if(null!=u){const e=(0,fs.pf)(u,c);p.push(e)}return p},C={x:b,filter:y,bias:k,preluActivationWeights:I},E={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:m};if(null==p){const e=(0,cs.cb)(((e,t,n)=>{let s=l.BV.runKernel(u._V0,C,E);return n([t,e,s]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return e(b,y)}{const e=(0,cs.cb)(((e,t,n,s)=>{let r=l.BV.runKernel(u._V0,C,E);return s([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}));return e(b,y,k)}}});var gs=n(8098),ys=n(4375);const bs=(0,p.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===(0,fs.uy)(l.BV.state.gradientDepth,d)){let l=(0,ce.B)(e,t,n,s,r,a,i);return null!=p&&(l=(0,o.I)(l,p)),(0,fs.QH)(l,d,f,m)}const g=(0,c._1)(e,"x","depthwiseConv2d","float32"),y=(0,c._1)(t,"filter","depthwiseConv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),h.hu(b.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==a&&(a=[1,1]),h.hu(N.jT(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),N.m("fused depthwiseConv2d",s,i);const w=N.Ix(b.shape,y.shape,n,a,s,i,!0);let v,k;null!=p&&(v=(0,c._1)(p,"bias","fused conv2d"),[v]=(0,es.makeTypesMatch)(v,g),hs.assertAndGetBroadcastShape(w.outShape,v.shape)),null!=f&&(k=(0,c._1)(f,"prelu weights","fused depthwiseConv2d"));const I=(e,t)=>{h.hu(N.I0(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,l,u]=t,c=(0,fs.Fr)(e,l,d),p=(0,ys.v)(o.shape,c,r,n,s,a,i),f=(0,gs.z)(o,c,r.shape,n,s,a,i);return null!=u?[p,f,(0,fs.pf)(v,c)]:[p,f]},S={x:b,filter:y,bias:v,preluActivationWeights:k},C={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:d,leakyreluAlpha:m};if(null==p){const e=(0,cs.cb)(((e,t,n)=>{let s=l.BV.runKernel(u.luS,S,C);return n([t,e,s]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:I}}));return e(b,y)}{const e=(0,cs.cb)(((e,t,n,s)=>{let r=l.BV.runKernel(u.luS,S,C);return s([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:I}}));return e(b,y,v)}}}),xs=(0,p.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:p=.2}){if(!1===(0,fs.uy)(l.BV.state.gradientDepth,a)){let l=(0,$.O)(e,t,n,s);return null!=r&&(l=(0,o.I)(l,r)),(0,fs.QH)(l,a,i,p)}let d=(0,c._1)(e,"a","fused matMul"),f=(0,c._1)(t,"b","fused matMul");[d,f]=(0,es.makeTypesMatch)(d,f);const m=n?d.shape[d.rank-2]:d.shape[d.rank-1],g=s?f.shape[f.rank-1]:f.shape[f.rank-2],y=n?d.shape[d.rank-1]:d.shape[d.rank-2],b=s?f.shape[f.rank-2]:f.shape[f.rank-1],x=d.shape.slice(0,-2),w=f.shape.slice(0,-2),v=h.NA(x),k=h.NA(w);h.hu(m===g,(()=>`Error in fused matMul: inner shapes (${m}) and (${g}) of Tensors with shapes ${d.shape} and ${f.shape} and transposeA=${n} and transposeB=${s} must match.`));const I=hs.assertAndGetBroadcastShape(d.shape.slice(0,-2),f.shape.slice(0,-2)).concat([y,b]),S=n?(0,T.X)(d,[v,m,y]):(0,T.X)(d,[v,y,m]),N=s?(0,T.X)(f,[k,b,g]):(0,T.X)(f,[k,g,b]);let C,E;null!=r&&(C=(0,c._1)(r,"bias","fused matMul"),[C]=(0,es.makeTypesMatch)(C,d),hs.assertAndGetBroadcastShape(I,C.shape)),null!=i&&(E=(0,c._1)(i,"prelu weights","fused matMul"));const A=(e,t)=>{const[i,o,l,u]=t,c=(0,fs.Fr)((0,T.X)(e,l.shape),l,a);let h,p;return n||s?!n&&s?(h=(0,$.O)(c,o,!1,!1),p=(0,$.O)(c,i,!0,!1)):n&&!s?(h=(0,$.O)(o,c,!1,!0),p=(0,$.O)(i,c,!1,!1)):(h=(0,$.O)(o,c,!0,!0),p=(0,$.O)(c,i,!0,!0)):(h=(0,$.O)(c,o,!1,!0),p=(0,$.O)(i,c,!0,!1)),null!=r?[h,p,(0,fs.pf)(u,c)]:[h,p]},D={a:S,b:N,bias:C,preluActivationWeights:E},R={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:p};if(null==r){const e=(0,cs.cb)(((e,t,n)=>{const s=l.BV.runKernel(u.usg,D,R);return n([e,t,s]),{value:(0,T.X)(s,I),gradFunc:A}}));return e(S,N)}{const e=(0,cs.cb)(((e,t,n,s)=>{const r=l.BV.runKernel(u.usg,D,R);return s([e,t,r,n]),{value:(0,T.X)(r,I),gradFunc:A}}));return e(S,N,C)}}}),ws=(0,p.op)({hammingWindow_:function(e){return ls(e,.54,.46)}}),vs=(0,p.op)({hannWindow_:function(e){return ls(e,.5,.5)}}),ks=(0,p.op)({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push((0,R.t)(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=(0,E.z)([(0,R.t)(e,a,t-s),(0,Te.h)([s],r)]);i.push(o),a+=n}return 0===i.length?On([],[0,t]):(0,T.X)((0,E.z)(i),[i.length,t])}}),Is=(0,p.op)({stft_:function(e,t,n,s,r=vs){null==s&&(s=os(t));const a=ks(e,t,n),i=(0,A.d)(a,r(t));return(0,vn.Q)(i,s)}}),Ss=(0,p.op)({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=(0,c._1)(e,"image","cropAndResize"),o=(0,c._1)(t,"boxes","cropAndResize","float32"),p=(0,c._1)(n,"boxInd","cropAndResize","int32"),d=o.shape[0];h.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${o.shape}.`)),h.hu(1===p.rank&&p.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${o.shape}.`)),h.hu(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),h.hu(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),h.hu("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const f={image:i,boxes:o,boxInd:p},m={method:r,extrapolationValue:a,cropSize:s};return l.BV.runKernel(u.VcC,f,m)}}),Ns=(0,p.op)({flipLeftRight_:function(e){const t=(0,c._1)(e,"image","flipLeftRight","float32");h.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return l.BV.runKernel(u.Uyb,n,{})}}),Ts=(0,p.op)({grayscaleToRGB_:function(e){const t=(0,c._1)(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];h.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),h.hu(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Se.G)(t,r)}}),Cs=(0,p.op)({rotateWithOffset_:function(e,t,n=0,s=.5){const r=(0,c._1)(e,"image","rotateWithOffset","float32");h.hu(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return l.BV.runKernel(u.b9H,a,i)}});function Es(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),h.hu(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),h.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),h.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),h.hu(1===t.rank,(()=>"scores must be a 1D tensor")),h.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),h.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const $s=(0,p.op)({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppression","float32"),i=(0,c._1)(t,"scores","nonMaxSuppression","float32"),o=Es(a,i,n,s,r),h={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return l.BV.runKernel(u.uv1,{boxes:a,scores:i},h)}});var As=n(3337);const Ds=(0,p.op)({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),h=Es(i,o,n,s,r,a),p={boxes:i,scores:o},d={maxOutputSize:n=h.maxOutputSize,iouThreshold:s=h.iouThreshold,scoreThreshold:r=h.scoreThreshold,softNmsSigma:a=h.softNmsSigma},f=l.BV.runKernel(u.W0H,p,d);return{selectedIndices:f[0],selectedScores:f[1]}}}),Rs=(0,p.op)({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppression"),o=(0,c._1)(t,"scores","nonMaxSuppression"),h=Es(i,o,n,s,r,null),p={boxes:i,scores:o},d={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:a},f=l.BV.runKernel(u.cye,p,d);return{selectedIndices:f[0],validOutputs:f[1]}}});var _s=n(3305),Os=n(5098);const Fs=(0,p.op)({threshold_:function(e,t="binary",n=!1,s=.5){const r=(0,c._1)(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,l,u,p,d=(0,A.d)(_n([s]),255);if(h.hu(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),h.hu(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),h.hu("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),h.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,l,u]=(0,kn.V)(r,[1,1,1],-1);const e=(0,A.d)(i,.2989),t=(0,A.d)(l,.587),n=(0,A.d)(u,.114);p=(0,o.I)((0,o.I)(e,t),n)}else p=e;"otsu"===t&&(d=function(e,t){let n,s,r,a,i,l,u=_n([-1]),c=_n([0]),h=_n([0]);for(let p=0;p<e.size-1;p++){n=(0,R.t)(e,0,p+1),s=(0,R.t)(e,p+1),i=(0,de.h)((0,$n.S)(n),t),l=(0,de.h)((0,$n.S)(s),t);const d=(0,$n.S)((0,A.d)(n,Ht(0,n.size)));r=(0,de.h)(d,(0,$n.S)(n));const f=(0,Te.h)(s.shape,n.size),m=(0,o.I)(Ht(0,s.size),f),g=(0,A.d)(s,m);a=(0,de.h)((0,$n.S)(g),(0,$n.S)(s));const y=(0,ft.l)(r,a),b=(0,ft.l)(r,a),x=(0,A.d)(i,l);h=(0,A.d)((0,A.d)(x,y),b);const w=(0,Ae.p)(h,c);c=(0,jn.a)(w,h,c),u=(0,jn.a)(w,_n([p]),u)}return u}(P((0,S.p)((0,tn.N)(p),"int32"),(0,Dn.X)([]),256),a));const f=n?(0,Le.z)(p,d):(0,Ae.p)(p,d);return(0,S.p)((0,A.d)(f,255),"int32")}}),Ms=(0,p.op)({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=(0,c._1)(e,"image","transform","float32"),o=(0,c._1)(t,"transforms","transform","float32");h.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),h.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),h.hu(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const p={image:i,transforms:o},d={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return l.BV.runKernel(u.wx7,p,d)}}),Bs=(0,p.op)({bandPart_:function(e,t,n){(0,h.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,h.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=(0,c._1)(e,"a","bandPart");(0,h.hu)(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=(0,T.X)(Ht(0,a,1,"int32"),[-1,1]),l=Ht(0,i,1,"int32"),u=(0,ft.l)(o,l),p=(0,je.H)((0,Le.z)(u,(0,sn.i)(+t,"int32")),(0,De.b)(u,(0,sn.i)(-n,"int32"))),d=(0,Kn.l)([a,i],s.dtype);return(0,T.X)((0,Tn.k)((0,Vn.H)((0,T.X)(s,[-1,a,i])).map((e=>(0,jn.a)(p,e,d)))),r)}}),Ls=(0,p.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,h.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,h.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,kn.V)(e,e.shape[0],0).map((e=>(0,Nn.L)(e,[0])));(0,h.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(l.BV.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=(0,A.d)((0,$n.S)((0,A.d)(n[s],e)),n[s]);e=(0,ft.l)(e,t)}return(0,de.h)(e,(0,Zn.K)(e,"euclidean"))})));return t?(0,Tn.k)(n,0):n}});var zs=n(4368);function Ps(e,t=!1){return l.BV.tidy((()=>{(0,h.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Ne(n),a=(0,j.d)(e);const i=On([[1]],[1,1]);let o=(0,j.d)(i);const u=n>=s?s:n;for(let e=0;e<u;++e){const t=a,u=o,c=r;[o,a,r]=l.BV.tidy((()=>{const t=(0,R.t)(a,[e,e],[n-e,1]),l=(0,Zn.K)(t),u=(0,R.t)(a,[e,e],[1,1]),c=(0,jn.a)((0,Ae.p)(u,0),On([[-1]]),On([[1]])),h=(0,ft.l)(u,(0,A.d)(c,l)),p=(0,de.h)(t,h);o=1===p.shape[0]?(0,j.d)(i):(0,E.z)([i,(0,R.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,bt.W)((0,de.h)((0,$.O)(c,h),l)),f=(0,R.t)(a,[e,0],[n-e,s]),m=(0,A.d)(d,o),g=(0,Jn.p)(o);if(0===e)a=(0,ft.l)(f,(0,$.O)(m,(0,$.O)(g,f)));else{const t=(0,ft.l)(f,(0,$.O)(m,(0,$.O)(g,f)));a=(0,E.z)([(0,R.t)(a,[0,0],[e,s]),t],0)}const y=(0,Jn.p)(m),b=(0,R.t)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,ft.l)(b,(0,$.O)((0,$.O)(b,o),y));else{const t=(0,ft.l)(b,(0,$.O)((0,$.O)(b,o),y));r=(0,E.z)([(0,R.t)(r,[0,0],[n,e]),t],1)}return[o,a,r]})),(0,zs.B9)([t,u,c])}return!t&&n>s&&(r=(0,R.t)(r,[0,0],[n,s]),a=(0,R.t)(a,[0,0],[s,s])),[r,a]}))}const Us=(0,p.op)({qr_:function(e,t=!1){if((0,h.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ps(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=(0,Vn.H)((0,T.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=Ps(e,t);r.push(n),a.push(s)})),[(0,T.X)((0,Tn.k)(r,0),e.shape),(0,T.X)((0,Tn.k)(a,0),e.shape)]}}});var Ws=n(9876);const Vs=(0,p.op)({computeWeightedLoss_:function(e,t,n=Ws.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,c._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,c._1)(t,"weights","computeWeightedLoss"));const a=null==r?s:(0,A.d)(s,r);if(n===Ws.I.NONE)return a;if(n===Ws.I.SUM)return(0,$n.S)(a);if(n===Ws.I.MEAN){if(null==r)return(0,rt.J)(a);{const e=s.size/r.size,t=(0,de.h)((0,$n.S)(a),(0,$n.S)(r));return e>1?(0,de.h)(t,(0,sn.i)(e)):t}}if(n===Ws.I.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,de.h)((0,$n.S)(a),(0,sn.i)(s.size));{const e=(0,A.d)(r,(0,at.i)(s.shape)),t=(0,S.p)((0,$n.S)((0,xt.Q)(e,(0,sn.i)(0))),"float32");return(0,de.h)((0,$n.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),Gs=(0,p.op)({absoluteDifference_:function(e,t,n,s=Ws.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","absoluteDifference"),i=(0,c._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,c._1)(n,"weights","absoluteDifference")),(0,h.k5)(a.shape,i.shape,"Error in absoluteDifference: ");const l=(0,r.W)((0,ft.l)(a,i));return Vs(l,o,s)}}),Hs=(0,p.op)({cosineDistance_:function(e,t,n,s,r=Ws.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","cosineDistance"),i=(0,c._1)(t,"predictions","cosineDistance");let o=null;null!=s&&(o=(0,c._1)(s,"weights","cosineDistance")),(0,h.k5)(a.shape,i.shape,"Error in cosineDistance: ");const l=(0,sn.i)(1),u=(0,ft.l)(l,(0,$n.S)((0,A.d)(a,i),n,!0));return Vs(u,o,r)}}),js=(0,p.op)({hingeLoss_:function(e,t,n,s=Ws.I.SUM_BY_NONZERO_WEIGHTS){let r=(0,c._1)(e,"labels","hingeLoss");const a=(0,c._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,c._1)(n,"weights","hingeLoss")),(0,h.k5)(r.shape,a.shape,"Error in hingeLoss: ");const o=(0,sn.i)(1);r=(0,ft.l)((0,A.d)((0,sn.i)(2),r),o);const l=(0,qt.U)((0,ft.l)(o,(0,A.d)(r,a)));return Vs(l,i,s)}}),Xs=(0,p.op)({huberLoss_:function(e,t,n,s=1,a=Ws.I.SUM_BY_NONZERO_WEIGHTS){const i=(0,c._1)(e,"labels","huberLoss"),l=(0,c._1)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,c._1)(n,"weights","huberLoss")),(0,h.k5)(i.shape,l.shape,"Error in huberLoss: ");const p=(0,sn.i)(s),d=(0,r.W)((0,ft.l)(l,i)),f=(0,ut.L)(d,p),m=(0,ft.l)(d,f),g=(0,o.I)((0,A.d)((0,sn.i)(.5),(0,dt.h)(f)),(0,A.d)(p,m));return Vs(g,u,a)}}),qs=(0,p.op)({logLoss_:function(e,t,n,s=1e-7,r=Ws.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","logLoss"),i=(0,c._1)(t,"predictions","logLoss");let l=null;null!=n&&(l=(0,c._1)(n,"weights","logLoss")),(0,h.k5)(a.shape,i.shape,"Error in logLoss: ");const u=(0,sn.i)(1),p=(0,sn.i)(s),d=(0,bt.W)((0,A.d)(a,(0,Ue.c)((0,o.I)(i,p)))),f=(0,A.d)((0,ft.l)(u,a),(0,Ue.c)((0,o.I)((0,ft.l)(u,i),p))),m=(0,ft.l)(d,f);return Vs(m,l,r)}}),Ks=(0,p.op)({meanSquaredError_:function(e,t,n,s=Ws.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,c._1)(e,"labels","meanSquaredError"),a=(0,c._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,c._1)(n,"weights","meanSquaredError")),(0,h.k5)(r.shape,a.shape,"Error in meanSquaredError: ");const o=(0,Sn.$)(r,a);return Vs(o,i,s)}}),Qs=(0,p.op)({sigmoidCrossEntropy_:function(e,t,n,s=0,a=Ws.I.SUM_BY_NONZERO_WEIGHTS){let i=(0,c._1)(e,"multiClassLabels","sigmoidCrossEntropy");const l=(0,c._1)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,c._1)(n,"weights","sigmoidCrossEntropy")),(0,h.k5)(i.shape,l.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=(0,sn.i)(s),t=(0,sn.i)(1),n=(0,sn.i)(.5);i=(0,o.I)((0,A.d)(i,(0,ft.l)(t,e)),(0,A.d)(n,e))}const p=function(e,t){const n=(0,c._1)(e,"labels","sigmoidCrossEntropyWithLogits"),s=(0,c._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,h.k5)(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,qt.U)(s),i=(0,A.d)(s,n),l=(0,We.K)((0,ve.Q)((0,bt.W)((0,r.W)(s))));return(0,o.I)((0,ft.l)(a,i),l)}(i,l);return Vs(p,u,a)}}),Ys=(0,p.op)({softmaxCrossEntropy_:function(e,t,n,s=0,r=Ws.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,c._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,c._1)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,c._1)(n,"weights","softmaxCrossEntropy")),(0,h.k5)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=(0,sn.i)(s),t=(0,sn.i)(1),n=(0,sn.i)(a.shape[1]);a=(0,o.I)((0,A.d)(a,(0,ft.l)(t,e)),(0,de.h)(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=(0,cs.cb)(((e,t,s)=>{const r=(0,He.l)(t,[n],!0),a=(0,ft.l)((0,S.p)(t,"float32"),r);s([e,a]);const i=(0,bt.W)((0,A.d)(a,e));return{value:(0,$n.S)(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=(0,pt.rv)(e.shape,[n]);return[(0,A.d)((0,T.X)(e,a),(0,ft.l)((0,S.p)(s,"float32"),(0,ve.Q)(r))),(0,A.d)((0,T.X)(e,a),(0,ft.l)((0,ve.Q)(r),(0,S.p)(s,"float32")))]}}}));return s(e,t)}(a,i);return Vs(u,l,r)}}),Js=(0,p.op)({sparseFillEmptyRows_:function(e,t,n,s){const r=(0,c._1)(e,"indices","sparseFillEmptyRows","int32"),a=(0,c._1)(t,"values","sparseFillEmptyRows"),i=(0,c._1)(n,"denseShape","sparseFillEmptyRows","int32"),o=(0,c._1)(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const h={indices:r,values:a,denseShape:i,defaultValue:o},p=l.BV.runKernel(u.O3z,h);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}}),Zs=(0,p.op)({sparseReshape_:function(e,t,n){const s=(0,c._1)(e,"inputIndices","sparseReshape","int32"),r=(0,c._1)(t,"inputShape","sparseReshape","int32"),a=(0,c._1)(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=l.BV.runKernel(u.nhH,i);return{outputIndices:o[0],outputShape:o[1]}}}),er=(0,p.op)({sparseSegmentMean_:function(e,t,n){const s=(0,c._1)(e,"data","sparseSegmentMean"),r=(0,c._1)(t,"indices","sparseSegmentMean","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return l.BV.runKernel(u.w3H,i)}}),tr=(0,p.op)({sparseSegmentSum_:function(e,t,n){const s=(0,c._1)(e,"data","sparseSegmentSum"),r=(0,c._1)(t,"indices","sparseSegmentSum","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return l.BV.runKernel(u.ZjV,i)}}),nr=(0,p.op)({stringNGrams_:function(e,t,n,s,r,a,i,o){const h=(0,c._1)(e,"data","stringNGrams","string");if("string"!==h.dtype)throw new Error("Data must be of datatype string");if(1!==h.shape.length)throw new Error(`Data must be a vector, saw: ${h.shape}`);const p=(0,c._1)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},f={data:h,dataSplits:p},m=l.BV.runKernel(u._JP,f,d);return{nGrams:m[0],nGramsSplits:m[1]}}}),sr=(0,p.op)({stringSplit_:function(e,t,n=!0){const s=(0,c._1)(e,"input","stringSplit","string"),r=(0,c._1)(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=l.BV.runKernel(u.s1s,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),rr=(0,p.op)({stringToHashBucketFast_:function(e,t){const n=(0,c._1)(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return l.BV.runKernel(u.XkS,r,s)}}),ar={fft:bn.k,ifft:xn.S,rfft:vn.Q,irfft:wn.w},ir={hammingWindow:ws,hannWindow:vs,frame:ks,stft:Is},or={flipLeftRight:Ns,grayscaleToRGB:Ts,resizeNearestNeighbor:Os.j,resizeBilinear:_s.I,rotateWithOffset:Cs,cropAndResize:Ss,nonMaxSuppression:$s,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),o=Es(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=(0,As.GP)(u,h,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),_n(p,"int32")},nonMaxSuppressionWithScore:Ds,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),l=Es(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:f}=(0,As.pA)(h,p,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_n(d,"int32"),selectedScores:_n(f)}},nonMaxSuppressionPadded:Rs,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),l=Es(i,o,n,s,r,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,f]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:g}=(0,As.qP)(d,f,u,h,p,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_n(m,"int32"),validOutputs:(0,sn.i)(g,"int32")}},threshold:Fs,transform:Ms},lr={bandPart:Bs,gramSchmidt:Ls,qr:Us},ur={absoluteDifference:Gs,computeWeightedLoss:Vs,cosineDistance:Hs,hingeLoss:js,huberLoss:Xs,logLoss:qs,meanSquaredError:Ks,sigmoidCrossEntropy:Qs,softmaxCrossEntropy:Ys},cr={sparseFillEmptyRows:Js,sparseReshape:Zs,sparseSegmentMean:er,sparseSegmentSum:tr},hr={stringNGrams:nr,stringSplit:sr,stringToHashBucketFast:rr}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},l={x:i};return s.BV.runKernel(r.lyA,l,o)}})},5860:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var s=n(5382),r=n(569),a=n(5176),i=n(8441),o=n(2582),l=n(1174),u=n(2668),c=n(4968),h=n(7918);const p=(0,u.op)({pool_:function(e,t,n,u,p,d,f){null==p&&(p=[1,1]),null==d&&(d=1),0===u&&(u="valid");const m=(0,s._1)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,c.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.hu(o.jT(d,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${p}'`));const b=o.Xw(g.shape,t,d,p,u),x=[b.dilationHeight,b.dilationWidth];let w;w="same"===u?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([b.filterHeight,b.filterWidth],x):[[0,0],[0,0]];const v=1===x[0]&&1===x[1],[k,I]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([b.inHeight,b.inWidth],x,w),S=v?u:"valid",N=v?g:(0,h.f)(g,x,k),T=("avg"===n?()=>(0,a.w)(N,t,d,S,f):()=>(0,l._)(N,t,d,S,f))(),C=v?T:(0,i.E)(T,x,I);return y?(0,c.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.pe_,l)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return s.BV.runKernel(r.o0g,n)}})},9798:(e,t,n)=>{"use strict";function s(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>s})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return s.BV.runKernel(r.DlI,l,u)}})},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return s.BV.runKernel(r.xJR,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,a._1)(e,"x","reciprocal")};return s.BV.runKernel(r.$HU,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return s.BV.runKernel(r.qkr,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return s.BV.runKernel(r.SbG,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return s.BV.runKernel(r.HZH,n,i)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},i={dims:t};return s.BV.runKernel(r.mKl,n,i)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return s.BV.runKernel(r.e07,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,a._1)(e,"x","rsqrt","float32")};return s.BV.runKernel(r.bV0,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var s=n(9122),r=n(7852);function a(e,t){if(((0,s.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,s.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.H)(e,[],[],t)}},3028:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>i,validateInput:()=>a,validateUpdateShape:()=>r});var s=n(569);function r(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}r(n,t,e)}function i(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let o=1;for(let e=a;e<i;++e)o*=n[e];const l=a<1?1:a;return{sliceRank:a,numUpdates:(0,s.NA)(t.shape)/l,sliceSize:o,strides:[...(0,s.e3)(n.slice(0,a)),1],outputSize:(0,s.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return s.BV.runKernel(r.oFR,t)}})},3179:(e,t,n)=>{"use strict";n.d(t,{$:()=>r,y:()=>s});const s=1.7580993408473768,r=1.0507009873554805},8678:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var s=n(5382),r=n(569),a=n(4794),i=n(4718),o=n(2668),l=n(4968);const u=(0,o.op)({separableConv2d_:function(e,t,n,o,u,c=[1,1],h="NHWC"){const p=(0,s._1)(e,"x","separableConv2d"),d=(0,s._1)(t,"depthwiseFilter","separableConv2d"),f=(0,s._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),r.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),r.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];r.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,u,h,c),w=(0,a.T)(x,f,1,"valid",h);return g?(0,l.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid","float32")};return s.BV.runKernel(r.a5O,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({sign_:function(e){const t={x:(0,a._1)(e,"x","sign")};return s.BV.runKernel(r.i5y,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({sin_:function(e){const t={x:(0,a._1)(e,"x","sin","float32")};return s.BV.runKernel(r.RQH,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({sinh_:function(e){const t={x:(0,a._1)(e,"x","sinh")};return s.BV.runKernel(r.wYB,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},l={begin:t,size:n};return s.BV.runKernel(r.p2w,o,l)}})},7650:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>i,computeFlatOffset:()=>x,computeOutShape:()=>l,getNormalizedAxes:()=>p,isSliceContinous:()=>b,maskToAxes:()=>o,parseSliceParams:()=>w,sliceInfo:()=>v,startForAxis:()=>g,startIndicesWithElidedDims:()=>d,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>u});var s=n(569);const r=-2,a=-1;function i(e,t,n){const r=e.shape.length;s.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),s.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)s.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function o(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function l(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function u(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function c(e,t,n){return n<=e?n:n-(t-1)}function h(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function p(e,t,n,s,r,a,i,o,l){const c=e.length;let h=new Array(c),p=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;h=d(i,l,c,s,e),p=f(o,l,c,r,e),b=u(a,l,c,e)}else for(let t=0;t<c;t++)h[t]=g(i,s,a,e,t,l),p[t]=y(o,r,a,e,t,l),b[t]=m(a,t,l);return{begin:h,end:p,strides:b}}function d(e,t,n,s,r){const a=[...r],i=h(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=c(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function f(e,t,n,r,a){const i=[...a],o=h(n,t);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=c(t,n,s);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=s.uZ(0,i[e],a[e])}return i}function m(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function g(e,t,n,r,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=s.uZ(0,o,u-1),o}function y(e,t,n,r,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=l>0?s.uZ(0,o,u):s.uZ(-1,o,u-1),o}function b(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function x(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function w(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{s.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(s.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function v(e,t,n,s,i,o,l,u,c){let h;if(null==s?(h=new Array(t.length),h.fill(1)):h=s,null!=l&&0!=(l&l-1))throw new Error("Multiple ellipses in slice is not allowed.");let p=!1;const d={dims:h.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:h.slice(),beginMask:i,endMask:o,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:c};for(let e=0;e<d.dims;e++)p&&0!=(1<<e&u)&&d.numAddAxisAfterEllipsis++,1<<e&l&&(p=!0);p||(d.ellipsisMask|=1<<d.dims,d.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(d,f);let m=!0,g=!0,y=!0;const b=[],x=[];for(let t=0;t<e.length;++t){if(0===f.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(f.shrinkAxisMask&1<<t),s=e[t];if(-1===s){b.push(n?1:-1);continue}const r=[f.beginMask&1<<t,f.endMask&1<<t],a=[f.strides[t]>0?0:-1,f.strides[t]>0?s:s-1];if(n&&f.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[t];const i=!!(f.beginMask&1<<t&&f.endMask&1<<t);if(f.beginValid&&f.endValid){if(n){const e=f.begin[t]<0?s+f.begin[t]:f.begin[t];if(f.begin[t]=e,f.end[t]=f.begin[t]+1,e<0||e>=s)throw Error(`slice index ${f.begin[t]} of dimension ${t} out of bounds.`)}else f.begin[t]=k(f.begin[t],0,f.strides[t],s,r,a),f.end[t]=k(f.end[t],1,f.strides[t],s,r,a);const e=1===f.strides[t]&&0===f.begin[t]&&f.end[t]===s;m=m&&e,g=g&&(0===t&&1===f.strides[t]||e)}else m=m&&1===f.strides[t]&&i,g=g&&(0===t&&1===f.strides[t]||i);let o,l=!1;if(f.beginValid&&f.endValid?(o=f.end[t]-f.begin[t],l=!0):n?(o=1,l=!0):i&&s>=0&&(o=f.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=f.strides[t]<0?0:Math.trunc(o/f.strides[t])+(o%f.strides[t]!=0?1:0),b.push(e)}else b.push(-1)}for(let e=0;e<f.finalShapeGatherIndices.length;++e){const t=f.finalShapeGatherIndices[e];t>=0?x.push(b[t]):t===r&&x.push(1)}return{finalShapeSparse:x.filter(((e,t)=>f.finalShapeGatherIndices[t]!==r)),finalShape:x,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return s.BV.runKernel(r.Gcp,i,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return s.BV.runKernel(r.MRv,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,a._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const l={x:o},u={blockShape:t,paddings:n};return s.BV.runKernel(r.TQc,l,u)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(7097),r=n(9121),a=n(569);const i=(0,n(2668).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.vwp,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var s=n(7097),r=n(9121),a=n(569);const i=(0,n(2668).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.Qg5,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var s=n(1661),r=n(6884),a=n(4386),i=n(4841),o=n(2668),l=n(766),u=n(4968),c=n(7486),h=n(9494),p=n(2676),d=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const s=(0,u.X)(e,[n,t]);o=(0,d.S)(s)}else{const f=[n,2*(t-1)],m=(0,u.X)((0,l.k)(e),[n,t]),g=(0,u.X)((0,a.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),x=(0,r.z)([m,y],1),w=(0,r.z)([g,b],1),v=(0,u.X)((0,s.P)(x,w),[f[0],f[1]]);o=(0,d.S)(v)}if(o=(0,l.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,u.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var s=n(569),r=n(1661),a=n(6884),i=n(4386),o=n(2668),l=n(766),u=n(4968),c=n(2676),h=n(8644),p=n(723),d=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,s.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const s=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,c.t)(e,s,r),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,p.l)(s)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,u.X)((0,r.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,w=(0,l.k)(b),v=(0,i.a)(b),k=(0,h.V)(w,[x,n-x],w.shape.length-1),I=(0,h.V)(v,[x,n-x],v.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,u.X)((0,r.P)(k[0],I[0]),S)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,a._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return s.BV.runKernel(r.L8s,i,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt","float32")};return s.BV.runKernel(r.FKq,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var s=n(7097),r=n(5382);const a=(0,n(2668).op)({square_:function(e){const t=(0,r._1)(e,"x","square");return s.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(5382),o=n(2200);const l=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),l=(0,i._1)(t,"b","squaredDifference");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r._tC,u,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var s=n(5382),r=n(569),a=n(2668),i=n(4968);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,s._1)(e,"x","squeeze","string_or_numeric");return(0,i.X)(n,(0,r.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,l={axis:t};return s.BV.runKernel(r.QiL,o,l)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},i={alpha:t};return s.BV.runKernel(r.h8e,n,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({stridedSlice_:function(e,t,n,i,o=0,l=0,u=0,c=0,h=0){const p={x:(0,a._1)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:i,beginMask:o,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:h};return s.BV.runKernel(r.jQk,p,d)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(5382);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.Tr8,l)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return s.BV.runKernel(r.GBy,l,u)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({tan_:function(e){const t={x:(0,a._1)(e,"x","tan","float32")};return s.BV.runKernel(r.sEM,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh","float32")};return s.BV.runKernel(r.MIZ,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var s=n(5382),r=n(7852);function a(e,t,n){const a=(0,s.C)(e,n);return(0,r.H)(e,t,a,n)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var s=n(5382),r=n(569),a=n(7852);function i(e,t,n){if((0,r.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,s.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.H)(e,t,i,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var s=n(7097),r=n(569),a=n(9122);function i(e,t,n,i){if(null==i)i=(0,r.D2)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof e&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if("float32"!==i&&"int32"!==i)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${i}.`);return s.BV.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,a.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,r.Mu)(t);const e=(0,r.NA)(t),s=(0,r.NA)(n);(0,r.hu)(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],a=e!==n.length-1||s!==(0,r.NA)(t.slice(e));(0,r.hu)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,a.toTypedArray)(e,i):(0,a.flatten)(e,[],!0),s.BV.makeTensor(e,t,i)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},l={reps:t};return s.BV.runKernel(r.n9L,o,l)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,a._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const l={x:i},u={k:t,sorted:n},[c,h]=s.BV.runKernel(r.cWu,l,u);return{values:c,indices:h}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>d});var s=n(7097),r=n(4368),a=n(9121),i=n(5382),o=n(569),l=n(1661),u=n(4386),c=n(7370),h=n(2668),p=n(766);const d=(0,h.op)({transpose_:function(e,t,n){const h=(0,i._1)(e,"x","transpose");if(null==t&&(t=h.shape.map(((e,t)=>t)).reverse()),o.hu(h.rank===t.length,(()=>`Error in transpose: rank of input ${h.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<h.rank,(()=>"All entries in 'perm' must be between 0 and "+(h.rank-1)+` but got ${t}`))})),h.rank<=1)return h.clone();const d={x:h},f={perm:t};return"complex64"===h.dtype?(0,r.lu)((()=>{let e=(0,p.k)(h),t=(0,u.a)(h);return e=s.BV.runKernel(a.G3Y,{x:e},f),t=s.BV.runKernel(a.G3Y,{x:t},f),n&&(t=(0,c.W)(t)),(0,l.P)(e,t)})):s.BV.runKernel(a.G3Y,d,f)}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,a._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},l={axis:t},[u,c]=s.BV.runKernel(r.kpP,o,l);return{values:u,indices:c}}})},8749:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,a._1)(e,"x","unsortedSegmentSum"),l=(0,a._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.hu)((0,i.GN)(n),(()=>"numSegments must be of dtype int"));const u={x:o,segmentIds:l},c={numSegments:n};return s.BV.runKernel(r.Qvg,u,c)}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(7097),r=n(9121),a=n(5382),i=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},l={axis:t};return s.BV.runKernel(r.ToN,o,l)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>l});var s=n(7097),r=n(9121),a=n(5382),i=n(8247),o=n(2200);const l=(0,n(2668).op)({where_:function(e,t,n){const l=(0,a._1)(t,"a","where"),u=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),h=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,l.shape),u.shape),p={condition:(0,i.U)(c,h),t:(0,i.U)(l,h),e:(0,i.U)(u,h)};return s.BV.runKernel(r.PhF,p)}})},723:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(7097),r=n(569),a=n(1661);function i(e,t="float32"){if((0,r.Mu)(e),"complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,r.wT)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var s=n(7097),r=n(9121),a=n(5382);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return s.BV.runKernel(r.RuY,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>v,YD:()=>f,_w:()=>I,t3:()=>k,FZ:()=>w,Vp:()=>x,Vi:()=>b});var s=n(5938),r=n(569);const a=20,i=3,o=7;function l(e,t,n,s){const a=(0,r.e3)(t),i=function(e,t,n,s){const a=(0,r.NA)(t),i=s[s.length-1],o=new Array(i).fill(0),l=t.length,c="complex64"===n?p(e):e;if(l>1)for(let e=0;e<a/i;e++){const t=e*i;for(let e=0;e<i;e++)o[e]=Math.max(o[e],u(c[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,l=h(e,t,n,a,i),c=["Tensor"];return s&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${o}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(l.map((e=>"    "+e)).join("\n")),c.join("\n")}function u(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(o))} + ${parseFloat(e[1].toFixed(o))}j`:(0,r.HD)(e)?`'${e}'`:"bool"===n?c(e):parseFloat(e.toFixed(o)).toString(),(0,r.oj)(s,t)}function c(e){return 0===e?"false":"true"}function h(e,t,n,s,r,o=!0){const l="complex64"===n?2:1,d=t[0],f=t.length;if(0===f)return"complex64"===n?[u(p(e)[0],0,n)]:"bool"===n?[c(e[0])]:[e[0].toString()];if(1===f){if(d>a){const t=i*l;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-i)*l,d*l));return"complex64"===n&&(s=p(s),a=p(a)),["["+s.map(((e,t)=>u(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>u(e,r[d-i+t],n))).join(", ")+"]"]}return["["+("complex64"===n?p(e):Array.from(e)).map(((e,t)=>u(e,r[t],n))).join(", ")+"]"]}const m=t.slice(1),g=s.slice(1),y=s[0]*l,b=[];if(d>a){for(let t=0;t<i;t++){const s=t*y,a=s+y;b.push(...h(e.slice(s,a),m,n,g,r,!1))}b.push("...");for(let t=d-i;t<d;t++){const s=t*y,a=s+y;b.push(...h(e.slice(s,a),m,n,g,r,t===d-1))}}else for(let t=0;t<d;t++){const s=t*y,a=s+y;b.push(...h(e.slice(s,a),m,n,g,r,t===d-1))}const x=2===f?",":"";b[0]="["+(d>0?b[0]+x:"");for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+x;let w=",\n";for(let e=2;e<f;e++)w+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(o?"":w),b}function p(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var d=n(9122);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e,...t){0===t.length&&(t=[0]),r.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(e){m=e}function x(e){g=e}function w(e){y=e}class v{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>d.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>d.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(e=!1){return l(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function k(){return(0,s.R)("Tensor",(()=>v))}Object.defineProperty(v,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class I extends v{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(I,Symbol.hasInstance,{value:e=>e instanceof v&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>o,getTensorsInContainer:()=>u,isTensorInList:()=>l,makeTypesMatch:()=>i});var s=n(4077),r=n(1221),a=n(569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e,t){return t.some((t=>t.id===e.id))}function u(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof s.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const s=a[e];n.has(s)||(n.add(s),c(s,t,n))}}},5382:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>h,sI:()=>p});var s=n(7097),r=n(2885),a=n(4077),i=n(9122),o=n(569);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if("object"==typeof e){if("texture"in e){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(null==t?4:(0,o.bT)(t))]}if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,s,[]),s}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,o.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,o.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,o.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)u(e[t],s,n.concat(t))}function c(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,r="numeric"){if(e instanceof a.es)return c(r,e.dtype,t,n),e;let u=(0,o.D2)(e);if("string"!==u&&["bool","int32","float32"].indexOf(r)>=0&&(u=r),c(r,u,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const h=l(e,u);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const p="string"!==u?(0,i.toTypedArray)(e,u):(0,i.flatten)(e,[],!0);return s.BV.makeTensor(p,h,u)}function p(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>h(e,`${t}[${r}]`,n,s)))}},1221:(e,t,n)=>{"use strict";var s,r,a,i,o;n.d(t,{x8:()=>u,yw:()=>s,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const l={float32:i,int32:r,bool:a,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>r.cO,assert:()=>r.hu,assertNonNegativeIntegerDimensions:()=>r.Mu,assertNonNull:()=>r.Cq,assertShapesMatch:()=>r.k5,bytesFromStringArray:()=>r.Ub,bytesPerElement:()=>r.bT,checkConversionForErrors:()=>r.D5,clamp:()=>r.uZ,computeStrides:()=>r.e3,convertBackendValuesAndArrayBuffer:()=>r.KS,createScalarValue:()=>x,createShuffledIndices:()=>r.U$,decodeString:()=>S,distSquared:()=>r.E7,encodeString:()=>I,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>T,getArrayFromDType:()=>r.rQ,getTypedArrayFromDType:()=>r.WP,hasEncodingLoss:()=>r.QB,hexToLong:()=>o,indexToLoc:()=>r.NE,inferDtype:()=>r.D2,inferFromImplicitShape:()=>r.JZ,isBoolean:()=>r.jn,isFunction:()=>r.mf,isInt:()=>r.GN,isNumber:()=>r.hj,isPromise:()=>r.tI,isScalarShape:()=>r.xH,isString:()=>r.HD,isTypedArray:()=>N,isValidDtype:()=>r.LP,locToIndex:()=>r.qy,makeOnesTypedArray:()=>r.p8,makeZerosNestedTypedArray:()=>r.l6,makeZerosTypedArray:()=>r.wT,nearestDivisor:()=>r.jP,nearestLargerEven:()=>r.nY,now:()=>v,parseAxisParam:()=>r.EC,randUniform:()=>r.bj,repeatedTry:()=>r.WD,rightPad:()=>r.oj,shuffle:()=>r.TV,shuffleCombo:()=>r.d7,sizeFromShape:()=>r.NA,sizeToSquarishShape:()=>r.YP,squeezeShape:()=>r.bp,sum:()=>r.Sm,swap:()=>r.LF,tanh:()=>r.AE,toNestedArray:()=>r.GX,toTypedArray:()=>w});var s=n(2885),r=n(569),a=n(3720);const i=n.n(a)()||a;function o(e){return i.fromString(e,!0,16)}const l=o("c3a5c85c97cb3127"),u=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const s=e.slice(t,t+n);return i.fromBytes(Array.from(s),!0,!0)}function d(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function y(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=m(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(m(r,44)),[r.add(s),a.add(i)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,s)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),s=d(e,0).add(c),r=d(e,t-8);return g(m(r,37).mul(n).add(s),m(s,25).add(r).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return h(c.mul(n).xor(l.mul(s))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),s=d(e,0).mul(u),r=d(e,8),a=d(e,t-8).mul(n),i=d(e,t-16).mul(c);return g(m(s.add(r),43).add(m(a,30)).add(i),s.add(m(r.add(c),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),s=d(e,0).mul(c),r=d(e,8),a=d(e,t-8).mul(n),i=d(e,t-16).mul(c),o=m(s.add(r),43).add(m(a,30)).add(i),l=g(o,s.add(m(r.add(c),18)).add(a),n),u=d(e,16).mul(n),h=d(e,24),p=o.add(d(e,t-32)).mul(n),f=l.add(d(e,t-24)).mul(n);return g(m(u.add(h),43).add(m(p,30)).add(f),u.add(m(h.add(s),18)).add(p),n)}(e,t);let s=n,r=n.mul(u).add(113),a=h(r.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],p=[i.UZERO,i.UZERO];s=s.mul(c).add(d(e,0));let b=0;const x=64*(t-1>>6),w=x+(t-1&63)-63;do{s=m(s.add(r).add(o[0]).add(d(e,b+8)),37).mul(u),r=m(r.add(o[1]).add(d(e,b+48)),42).mul(u),s=s.xor(p[1]),r=r.add(o[0]).add(d(e,b+40)),a=m(a.add(p[0]),33).mul(u),o=y(e,b,o[1].mul(u),s.add(p[0])),p=y(e,b+32,a.add(p[1]),r.add(d(e,b+16))),[a,s]=[s,a],b+=64}while(b!==x);const v=u.add(a.and(255).shl(1));return b=w,p[0]=p[0].add(t-1&63),o[0]=o[0].add(p[0]),p[0]=p[0].add(o[0]),s=m(s.add(r).add(o[0]).add(d(e,b+8)),37).mul(v),r=m(r.add(o[1]).add(d(e,b+48)),42).mul(v),s=s.xor(p[1].mul(9)),r=r.add(o[0].mul(9).add(d(e,b+40))),a=m(a.add(p[0]),33).mul(v),o=y(e,b,o[1].mul(v),s.add(p[0])),p=y(e,b+32,a.add(p[1]),r.add(d(e,b+16))),[a,s]=[s,a],g(g(o[0],p[0],v).add(h(r).mul(l)).add(a),g(o[1],p[1],v).add(s),v)}function x(e,t){return"string"===t?I(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=T(e)),(0,s.OB)().getBool("DEBUG")&&r.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function v(){return(0,s.OB)().platform.now()}function k(e,t){return(0,s.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.decode(e,t)}function N(e){return(0,s.OB)().platform.isTypedArray(e)}function T(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||r.tI(e)||null==e||N(e)&&n)t.push(e);else if(Array.isArray(e)||N(e))for(let s=0;s<e.length;++s)T(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let r=0;r<=s;r++)T(e[r],t,n)}return t}},569:(e,t,n)=>{"use strict";function s(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,o(e,n,s),o(t,n,s)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function l(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function h(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){h(g(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function b(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return s(t),t}function v(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n,s){return new Promise(((r,a)=>{let i=0;const o=()=>{if(e())return void r();i++;const l=t(i);null!=n&&i>=n?a():null!=s?s(o,l):setTimeout(o,l)};o()}))}function I(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function S(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>y(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:S(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function $(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function _(e){return"string"==typeof e||e instanceof String}function O(e){return"boolean"==typeof e}function F(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":F(e)?"float32":_(e)?"string":O(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function z(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function P(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=P(e+t*o,i,n,s)}return r}function U(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return P(0,e,t,n)}function W(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function V(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function j(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function q(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function K(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{AE:()=>b,Cq:()=>d,D2:()=>M,D5:()=>E,E7:()=>c,EC:()=>S,GN:()=>y,GX:()=>U,HD:()=>_,JZ:()=>I,KS:()=>W,LF:()=>o,LP:()=>$,Mu:()=>j,NA:()=>f,NE:()=>q,QB:()=>A,Sm:()=>l,TV:()=>s,U$:()=>w,Ub:()=>R,WD:()=>k,WP:()=>T,YP:()=>x,bT:()=>D,bj:()=>u,bp:()=>N,cO:()=>g,d7:()=>r,e3:()=>z,hj:()=>F,hu:()=>h,jP:()=>L,jn:()=>O,k5:()=>p,l6:()=>H,mf:()=>B,nY:()=>i,oj:()=>v,p8:()=>V,qy:()=>X,rQ:()=>C,tI:()=>K,uZ:()=>a,wT:()=>G,xH:()=>m})},5934:(e,t,n)=>{"use strict";n.r(t),n.d(t,{CSVDataset:()=>j,Dataset:()=>O,FileDataSource:()=>re,TextLineDataset:()=>z,URLDataSource:()=>ae,array:()=>M,csv:()=>ie,func:()=>oe,generator:()=>le,microphone:()=>ce,version_data:()=>he,webcam:()=>ue,zip:()=>B});var s,r=n(3306),a=n(6377);function i(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(h(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const o=i(e[a],t,n,s);r[a]=o}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function o(e,t=u){return l(e,t)}function l(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(h(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=l(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function u(e){return null===e?null:h(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function c(e,t){const n=new Map;i(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(r.D5U.isPromise(t)){const s=await t;n.set(e,s)}}return i(e,t,n)}function h(e){let t=!1;if(r.OBj().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(4977);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.esB)&&!(e instanceof Promise)&&!t)}function p(e){return e instanceof r.esB?{value:e.clone(),recurse:!1}:h(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class d{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class f extends d{constructor(){super(f.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function m(e){return new b(e)}function g(e){return new x(e)}f.INITIAL_CAPACITY=32;class y{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new T(this,e)}filter(e){return new S(this,e)}map(e){return new N(this,e)}mapAsync(e){return new C(this,e)}serialMapAsync(e){return new C(this,e).serial()}flatmap(e){return new $(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new I(this,e,t)}columnMajorBatch(e,t=!0,n=u){return this.rowMajorBatch(e,t).map((e=>o(e,n)))}concatenate(e,t){return new A(m([this,e]),t)}take(e){return e<0||null==e?this:new k(this,e)}skip(e){return e<0||null==e?this:new v(this,e)}prefetch(e){return new R(this,e)}shuffle(e,t){return new _(this,e,t)}serial(){return new w(this)}}class b extends y{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,i(t,p)),done:!1};var t}}class x extends y{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class w extends y{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class v extends y{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;r.B90(e.value)}return this.upstream.next()}}class k extends y{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class I extends y{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class S extends y{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;r.B90(e.value)}}}class N extends y{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class T extends y{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class C extends y{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class E extends y{constructor(){super(),this.outputQueue=new f,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class $ extends E{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return!0}}class A extends y{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(s||(s={}));class D extends y{constructor(e,t=s.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await c(this.iterators,(function(e){return e instanceof y?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case s.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case s.SHORTEST:return{value:null,done:!0};case s.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class R extends y{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new d(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class _ extends R{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=a.alea(n||r.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class O{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return r.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),F((async()=>(await n.iterator()).columnMajorBatch(e,t,L)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,F((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,F((async()=>(await t.iterator()).filter((t=>r.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return F((async()=>(await t.iterator()).map((t=>r.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return F((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return F((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,F((async()=>{return n=g((async()=>({value:await t.iterator(),done:!1}))).take(e),new A(n,s);var n,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,F((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,i=a.alea(t||r.D5U.now().toString());return F((async()=>{let t=i.int32();return n&&(t+=i.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,F((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function F(e,t=null){return new class extends O{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function M(e){return F((async()=>m(e)),e.length)}function B(e){if(!h(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return F((async()=>function(e,t=s.FAIL){return new D(e,t)}(await c(e,(e=>{if(e instanceof O)return{value:e.iterator(),recurse:!1};if(h(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),s.SHORTEST)),t)}function L(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof r.esB||r.D5U.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof r.esB?r.knu(e):r.XeE(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}O.MAX_BUFFER_SIZE=1e4;class z extends O{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const P='"',U=Symbol("out"),W=Symbol("field"),V=Symbol("quote"),G=Symbol("quoteafterquote"),H=Symbol("quoteinquote");class j extends O{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new z(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(r.D5U.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&r.D5U.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(r.D5U.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?s[a]=l:n[a]=l}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const r=e.length;let a=U;for(let t=0;t<r;t++)switch(a){case U:switch(e.charAt(t)){case P:s=t+1,a=V;break;case this.delimiter:if(s=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=U;break;default:a=W,s=t}break;case W:e.charAt(t)===this.delimiter&&(n.push(e.substring(s,t)),a=U,s=t+1);break;case V:e.charAt(t)===P&&(a=G);break;case G:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(s,t-1)),a=U,s=t+1;break;case P:a=V;break;default:a=H}break;case H:e.charAt(t)===P&&(a=V)}if(a===G?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class X extends y{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!(0,r.OBj)().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new X(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(r.D5U.sizeFromShape(t));return n.set(e,n.length-e.length),(0,r.XeE)(n,t)}}class q extends y{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,r.RRF)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,a=n+e,i=t+s;this.cropBox=(0,r.odF)([s,n,i,a],[1,4])}else this.cropBox=(0,r.odF)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!(0,r.OBj)().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new q(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&r.D5U.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=r.Xhn.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,r.lub)((()=>{const t=(0,r.dt4)((0,r.pju)(e,"float32"),0);let n;n=r.BHj.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return(0,r.XLQ)(n,s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class K{}class Q extends y{split(e){return new Y(this,e)}}class Y extends Q{constructor(e,t){super(),this.upstream=e,this.impl=new J(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class J extends E{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class Z extends y{decodeUTF8(){return new ee(this)}}class ee extends Q{constructor(e){super(),this.upstream=e,this.impl=new te(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class te extends E{constructor(e){if(super(),this.upstream=e,(0,r.OBj)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(1601);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,r.OBj)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class ne extends Z{constructor(e,t={}){super(),this.file=e,this.options=t,r.D5U.assert(e instanceof Uint8Array||!!(0,r.OBj)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let r=s.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);s.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}function se(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class re extends K{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(se(this.input)&&(0,r.OBj)().get("IS_NODE")){const e=n(7792);this.input=e.readFileSync(this.input.slice(7))}return new ne(this.input,this.options)}}class ae extends K{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return se(this.url)?new re(this.url,this.fileOptions).iterator():async function(e,t={},n){let s,a;var i;"string"==typeof e?s=e:(s=e.url,a={method:(i=e).method,headers:i.headers,body:i.body,mode:i.mode,credentials:i.credentials,cache:i.cache,redirect:i.redirect,referrer:i.referrer,integrity:i.integrity});const o=await(n||r.D5U.fetch)(s,a);if(o.ok){const e=new Uint8Array(await o.arrayBuffer());return new ne(e,t)}throw new Error(o.statusText)}(this.url,this.fileOptions)}}function ie(e,t={}){return new j(new ae(e),t)}function oe(e){const t=g(e);return F((async()=>t))}function le(e){return F((async()=>{const t=await e();return g((()=>t.next()))}))}async function ue(e,t){return q.create(e,t)}async function ce(e){return X.create(e)}const he="4.2.0"},9422:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>A.SYM,Acos:()=>A.VGw,Acosh:()=>A.SpW,AdadeltaOptimizer:()=>A.zJI,AdagradOptimizer:()=>A.HeW,AdamOptimizer:()=>A.a4z,AdamaxOptimizer:()=>A.DBS,Add:()=>A.mm_,AddN:()=>A.Xze,All:()=>A.oT6,Any:()=>A.IKK,ArgMax:()=>A.sJF,ArgMin:()=>A.aJk,Asin:()=>A.M2y,Asinh:()=>A.qw7,Atan:()=>A.jMg,Atan2:()=>A.QCc,Atanh:()=>A.Oyi,AvgPool:()=>A.JhU,AvgPool3D:()=>A._k9,AvgPool3DGrad:()=>A.IMb,AvgPoolGrad:()=>A.ROF,BatchMatMul:()=>A.XLW,BatchToSpaceND:()=>A.zws,Bincount:()=>A.zvY,BroadcastArgs:()=>A.eEB,BroadcastTo:()=>A.Ly9,Callback:()=>hp,CallbackList:()=>ro,Cast:()=>A.RFZ,Ceil:()=>A.gJX,ClipByValue:()=>A.xnO,Complex:()=>A.Zz9,ComplexAbs:()=>A.yj2,Concat:()=>A.Eh3,Conv2D:()=>A.mhS,Conv2DBackpropFilter:()=>A.wUP,Conv2DBackpropInput:()=>A.wm,Conv3D:()=>A.x12,Conv3DBackpropFilterV2:()=>A.o2y,Conv3DBackpropInputV2:()=>A.ik2,Cos:()=>A.mc4,Cosh:()=>A.TR1,CropAndResize:()=>A.VcC,Cumprod:()=>A.Byc,Cumsum:()=>A.iHb,CustomCallback:()=>oo,DataStorage:()=>A.JLz,DenseBincount:()=>A.QRR,DepthToSpace:()=>A.T0n,DepthwiseConv2dNative:()=>A.cie,DepthwiseConv2dNativeBackpropFilter:()=>A.sL$,DepthwiseConv2dNativeBackpropInput:()=>A.y7R,Diag:()=>A.$w,Dilation2D:()=>A.p4S,Dilation2DBackpropFilter:()=>A.Vn9,Dilation2DBackpropInput:()=>A.ekb,ENV:()=>A.ViN,EarlyStopping:()=>fp,Einsum:()=>A.$g6,Elu:()=>A.SX0,EluGrad:()=>A.HEU,Environment:()=>A.qAh,Equal:()=>A.hdR,Erf:()=>A.Omj,Exp:()=>A.NEP,ExpandDims:()=>A.YFo,Expm1:()=>A.Y0y,FFT:()=>A.vwp,Fill:()=>A.deh,FlipLeftRight:()=>A.Uyb,Floor:()=>A.OR,FloorDiv:()=>A.jeX,FromPixels:()=>A.eBW,FusedBatchNorm:()=>A.sHE,FusedConv2D:()=>A._V0,FusedDepthwiseConv2D:()=>A.luS,GatherNd:()=>A.q1x,GatherV2:()=>A.qi_,GraphModel:()=>Zd,Greater:()=>A.iZT,GreaterEqual:()=>A.Acj,History:()=>io,IFFT:()=>A.Qg5,Identity:()=>A.iJz,Imag:()=>A.J_u,InputSpec:()=>ui,IsFinite:()=>A.avt,IsInf:()=>A.iWB,IsNan:()=>A.r7n,KernelBackend:()=>A.Zuw,LRN:()=>A.eZ0,LRNGrad:()=>A.Hhh,LayerVariable:()=>ii,LayersModel:()=>ll,LeakyRelu:()=>A.J$2,Less:()=>A.vtC,LessEqual:()=>A.CAk,LinSpace:()=>A.e7N,Log:()=>A.ZbH,Log1p:()=>A.kU,LogSoftmax:()=>A.qCd,LogicalAnd:()=>A.PYm,LogicalNot:()=>A.VfG,LogicalOr:()=>A.MZg,LogicalXor:()=>A.w6g,LowerBound:()=>A.qIC,Max:()=>A.YoZ,MaxPool:()=>A.mTV,MaxPool3D:()=>A.OAf,MaxPool3DGrad:()=>A.OU7,MaxPoolGrad:()=>A.OV7,MaxPoolWithArgmax:()=>A.vFR,Maximum:()=>A.BMI,Mean:()=>A.q2K,Min:()=>A.c17,Minimum:()=>A.q8u,MirrorPad:()=>A.jQs,Mod:()=>A.Vbg,MomentumOptimizer:()=>A.rIn,Multinomial:()=>A.NZg,Multiply:()=>A.wYn,Neg:()=>A.kuV,NonMaxSuppressionV3:()=>A.uv1,NonMaxSuppressionV4:()=>A.cye,NonMaxSuppressionV5:()=>A.W0H,NotEqual:()=>A.yQU,OP_SCOPE_SUFFIX:()=>A.zvA,OneHot:()=>A.we_,OnesLike:()=>A.qWM,Optimizer:()=>A.gaJ,OptimizerConstructors:()=>A.eEe,Pack:()=>A.QiL,PadV2:()=>A.lyA,Pool:()=>A.Kgp,Pow:()=>A.pe_,Prelu:()=>A.o0g,Prod:()=>A.DlI,RMSPropOptimizer:()=>A.gVI,RNN:()=>fu,RaggedGather:()=>A.dDz,RaggedRange:()=>A.CQl,RaggedTensorToTensor:()=>A.BiW,Range:()=>A.e6w,Rank:()=>A.yw1,Real:()=>A.xJR,RealDiv:()=>A.oHH,Reciprocal:()=>A.$HU,Reduction:()=>A.IH3,Relu:()=>A.qkr,Relu6:()=>A.SbG,Reshape:()=>A.HZH,ResizeBilinear:()=>A._Yw,ResizeBilinearGrad:()=>A.zbQ,ResizeNearestNeighbor:()=>A.dpD,ResizeNearestNeighborGrad:()=>A.Hmb,Reverse:()=>A.mKl,RotateWithOffset:()=>A.b9H,Round:()=>A.e07,Rsqrt:()=>A.bV0,SGDOptimizer:()=>A.DYp,ScatterNd:()=>A.xQA,SearchSorted:()=>A.nr8,Select:()=>A.PhF,Selu:()=>A.oFR,Sequential:()=>pl,Sigmoid:()=>A.a5O,Sign:()=>A.i5y,Sin:()=>A.RQH,Sinh:()=>A.wYB,Slice:()=>A.p2w,Softmax:()=>A.Gcp,Softplus:()=>A.MRv,SpaceToBatchND:()=>A.TQc,SparseFillEmptyRows:()=>A.O3z,SparseReshape:()=>A.nhH,SparseSegmentMean:()=>A.w3H,SparseSegmentSum:()=>A.ZjV,SparseToDense:()=>A.D2d,SplitV:()=>A.L8s,Sqrt:()=>A.FKq,Square:()=>A.bK0,SquaredDifference:()=>A._tC,Step:()=>A.h8e,StridedSlice:()=>A.jQk,StringNGrams:()=>A._JP,StringSplit:()=>A.s1s,StringToHashBucketFast:()=>A.XkS,Sub:()=>A.Tr8,Sum:()=>A.GBy,SymbolicTensor:()=>ci,Tan:()=>A.sEM,Tanh:()=>A.MIZ,Tensor:()=>A.esB,TensorBuffer:()=>A.YDk,Tile:()=>A.n9L,TopK:()=>A.cWu,Transform:()=>A.wx7,Transpose:()=>A.G3Y,Unique:()=>A.kpP,Unpack:()=>A.ToN,UnsortedSegmentSum:()=>A.Qvg,UpperBound:()=>A.XDQ,Variable:()=>A._wD,ZerosLike:()=>A.RuY,_FusedMatMul:()=>A.usg,abs:()=>A.WnP,acos:()=>A.Khb,acosh:()=>A.__u,add:()=>A.IHx,addN:()=>A.QBD,all:()=>A.$6P,any:()=>A.YjB,argMax:()=>A.NqF,argMin:()=>A.vHJ,asin:()=>A.ZRM,asinh:()=>A.VfV,atan:()=>A.z4N,atan2:()=>A.fvJ,atanh:()=>A.C80,avgPool:()=>A.wS1,avgPool3d:()=>A.uR5,backend:()=>A.y3$,backend_util:()=>A.Wap,basicLSTMCell:()=>A.zEQ,batchNorm:()=>A.tgs,batchNorm2d:()=>A.Dxk,batchNorm3d:()=>A.JY5,batchNorm4d:()=>A.p3b,batchToSpaceND:()=>A.E4h,bincount:()=>A.yE8,booleanMaskAsync:()=>A.anm,broadcastArgs:()=>A.XsQ,broadcastTo:()=>A.UFq,broadcast_util:()=>A.Jyw,browser:()=>A.Xhn,buffer:()=>A.f3b,callbacks:()=>mp,cast:()=>A.pju,ceil:()=>A.mDi,clipByValue:()=>A.iUl,clone:()=>A.d9v,complex:()=>A.PYB,concat:()=>A.zoF,concat1d:()=>A.gME,concat2d:()=>A.Izb,concat3d:()=>A.MNy,concat4d:()=>A.ZaL,constraints:()=>s,conv1d:()=>A.PAt,conv2d:()=>A.Tek,conv2dTranspose:()=>A.bc,conv3d:()=>A.pdZ,conv3dTranspose:()=>A.$QV,copyRegisteredKernels:()=>A.T3b,cos:()=>A.mCk,cosh:()=>A.f9Y,cosineWindow:()=>A.mew,cumprod:()=>A.$Gn,cumsum:()=>A.zbp,customGrad:()=>A.cbc,data:()=>sf,denseBincount:()=>A.ppE,deprecationWarn:()=>A.MXe,depthToSpace:()=>A.nTT,depthwiseConv2d:()=>A.B10,deregisterOp:()=>vp,device_util:()=>A.C2$,diag:()=>A.Ka3,dilation2d:()=>A.WmZ,disableDeprecationWarnings:()=>A.cFr,dispose:()=>A.B90,disposeVariables:()=>A.N8o,div:()=>A.hiC,divNoNan:()=>A.NTj,dot:()=>A.AKD,dropout:()=>A.rvX,einsum:()=>A.WYO,elu:()=>A.pyx,enableDebugMode:()=>A.Ra$,enableProdMode:()=>A.G48,enclosingPowerOfTwo:()=>A.GRh,engine:()=>A.SRH,env:()=>A.OBj,equal:()=>A.DgJ,erf:()=>A.qNN,euclideanNorm:()=>A.d2q,exp:()=>A.Qqt,expandDims:()=>A.dt4,expm1:()=>A.t$B,eye:()=>A.iyy,fft:()=>A.kp_,fill:()=>A.hlL,findBackend:()=>A.x3e,findBackendFactory:()=>A.zel,floor:()=>A.GWj,floorDiv:()=>A.qPi,fused:()=>A.imm,gather:()=>A.Iqj,gatherND:()=>A.dbB,gather_util:()=>A.DaI,getBackend:()=>A.N_N,getGradient:()=>A.ukX,getKernel:()=>A.pIF,getKernelsForBackend:()=>A.trD,grad:()=>A.UQy,grads:()=>A.tiA,greater:()=>A.pjt,greaterEqual:()=>A.brS,ifft:()=>A.Sxn,imag:()=>A.asL,image:()=>A.BHj,inTopKAsync:()=>A.V3u,initializers:()=>r,input:()=>ml,io:()=>A.io,irfft:()=>A.wx0,isFinite:()=>A.xVT,isInf:()=>A.UWc,isNaN:()=>A.i2d,keep:()=>A.CnY,kernel_impls:()=>A.GDt,layers:()=>a,leakyRelu:()=>A.hi7,less:()=>A.d9m,lessEqual:()=>A.zN1,linalg:()=>A.$r2,linspace:()=>A.SX3,loadGraphModel:()=>ef,loadGraphModelSync:()=>tf,loadLayersModel:()=>hl,localResponseNormalization:()=>A.G9k,log:()=>A.cM7,log1p:()=>A.Krr,logSigmoid:()=>A.e_t,logSoftmax:()=>A.CmS,logSumExp:()=>A.l_t,logicalAnd:()=>A.HvI,logicalNot:()=>A.hJK,logicalOr:()=>A.K5V,logicalXor:()=>A.egP,losses:()=>A.MB5,lowerBound:()=>A.eab,matMul:()=>A.OI3,math:()=>A.mAU,max:()=>A.Fp7,maxPool:()=>A._sB,maxPool3d:()=>A.YQQ,maxPoolWithArgmax:()=>A.Ip$,maximum:()=>A.gWQ,mean:()=>A.J69,memory:()=>A.sq6,meshgrid:()=>A.ry_,metrics:()=>i,min:()=>A.VV$,minimum:()=>A.LTh,mirrorPad:()=>A.VdP,mod:()=>A.wQq,model:()=>dl,models:()=>o,moments:()=>A.Gi7,movingAverage:()=>A.p_,mul:()=>A.dC7,multiRNNCell:()=>A.rq4,multinomial:()=>A.SJ_,neg:()=>A.W76,nextFrame:()=>A.glt,norm:()=>A.KOy,notEqual:()=>A.Quu,oneHot:()=>A.lfX,ones:()=>A.iUs,onesLike:()=>A.JpU,op:()=>A.op,outerProduct:()=>A.N2O,pad:()=>A.vku,pad1d:()=>A.pNR,pad2d:()=>A.koy,pad3d:()=>A.t1L,pad4d:()=>A.lGY,pool:()=>A.d_R,pow:()=>A.sQ3,prelu:()=>A.AL3,print:()=>A.S0v,prod:()=>A.WVs,profile:()=>A.N5s,raggedGather:()=>A.$gW,raggedRange:()=>A.VT$,raggedTensorToTensor:()=>A.N89,rand:()=>A.TN_,randomGamma:()=>A.wzB,randomNormal:()=>A.nGf,randomStandardNormal:()=>A.ruB,randomUniform:()=>A.LGj,range:()=>A.w6H,ready:()=>A.Cd_,real:()=>A.kwC,reciprocal:()=>A.M25,registerBackend:()=>A.jqO,registerCallbackConstructor:()=>gl,registerGradient:()=>A.LiG,registerKernel:()=>A.wCN,registerOp:()=>xp,regularizers:()=>l,relu:()=>A.UYe,relu6:()=>A.btT,removeBackend:()=>A.cjG,reshape:()=>A.XLQ,reverse:()=>A.GYS,reverse1d:()=>A.SDf,reverse2d:()=>A.diP,reverse3d:()=>A.sx7,reverse4d:()=>A.mG2,rfft:()=>A.QEs,round:()=>A.NMM,rsqrt:()=>A.bp0,scalar:()=>A.iD$,scatterND:()=>A.snQ,scatter_util:()=>A.yV1,searchSorted:()=>A.zcT,selu:()=>A.U8D,separableConv2d:()=>A.U_I,sequential:()=>fl,serialization:()=>A.m7h,setBackend:()=>A.CQI,setPlatform:()=>A.VYu,setdiff1dAsync:()=>A.ODp,sigmoid:()=>A.XD2,sign:()=>A.Xxe,signal:()=>A.tdS,sin:()=>A.O$l,sinh:()=>A.R_K,slice:()=>A.tPi,slice1d:()=>A.jZU,slice2d:()=>A.SmN,slice3d:()=>A.CnO,slice4d:()=>A.p0P,slice_util:()=>A.kuN,softmax:()=>A.XAC,softplus:()=>A.Wvh,spaceToBatchND:()=>A.fBT,sparse:()=>A.rVs,sparseToDense:()=>A.ers,spectral:()=>A.uN7,split:()=>A.Vl2,sqrt:()=>A._b3,square:()=>A.h62,squaredDifference:()=>A.$i,squeeze:()=>A.L9e,stack:()=>A.knu,step:()=>A.Nbs,stridedSlice:()=>A.NXj,string:()=>A.Z_8,sub:()=>A.luU,sum:()=>A.Smz,sumOutType:()=>A.z4k,tan:()=>A.ORZ,tanh:()=>A.AEp,tensor:()=>A.XeE,tensor1d:()=>A.RRF,tensor2d:()=>A.odF,tensor3d:()=>A.wOQ,tensor4d:()=>A.yXz,tensor5d:()=>A.Bfx,tensor6d:()=>A.xZs,tensor_util:()=>A.piX,test_util:()=>A.p3L,tidy:()=>A.lub,tile:()=>A.Gg6,time:()=>A.XVJ,topk:()=>A.hg7,train:()=>A.p_j,transpose:()=>A.p4s,truncatedNormal:()=>A.Xu6,unique:()=>A.Two,unregisterGradient:()=>A.bt3,unregisterKernel:()=>A.nEe,unsortedSegmentSum:()=>A.pUJ,unstack:()=>A.HHK,upcastType:()=>A.x8V,upperBound:()=>A.GaM,util:()=>A.D5U,valueAndGrad:()=>A.h76,valueAndGrads:()=>A.fNQ,variable:()=>A.VD$,variableGrads:()=>A.pnJ,version:()=>nA,version_converter:()=>nf,version_core:()=>A.jTM,version_layers:()=>Vo,where:()=>A.arb,whereAsync:()=>A.itS,zeros:()=>A.lls,zerosLike:()=>A.P84});var s={};n.r(s),n.d(s,{maxNorm:()=>Fi,minMaxNorm:()=>Li,nonNeg:()=>Bi,unitNorm:()=>Mi});var r={};n.r(r),n.d(r,{constant:()=>Ui,glorotNormal:()=>qi,glorotUniform:()=>Xi,heNormal:()=>Ki,heUniform:()=>Qi,identity:()=>Hi,leCunNormal:()=>Yi,leCunUniform:()=>Ji,ones:()=>Pi,orthogonal:()=>Zi,randomNormal:()=>Vi,randomUniform:()=>Wi,truncatedNormal:()=>Gi,varianceScaling:()=>ji,zeros:()=>zi});var a={};n.r(a),n.d(a,{Layer:()=>fi,RNN:()=>fu,RNNCell:()=>mu,activation:()=>Wc,add:()=>Yc,alphaDropout:()=>Uh,average:()=>Jc,averagePooling1d:()=>oh,averagePooling2d:()=>ch,averagePooling3d:()=>dh,avgPool1d:()=>lh,avgPool2d:()=>hh,avgPool3d:()=>fh,avgPooling1d:()=>uh,avgPooling2d:()=>ph,avgPooling3d:()=>mh,batchNormalization:()=>rh,bidirectional:()=>_h,categoryEncoding:()=>jh,centerCrop:()=>Gh,concatenate:()=>Zc,conv1d:()=>_c,conv2d:()=>Oc,conv2dTranspose:()=>Fc,conv3d:()=>Mc,conv3dTranspose:()=>Bc,convLstm2d:()=>$h,convLstm2dCell:()=>Ah,cropping2D:()=>zc,dense:()=>Vc,depthwiseConv2d:()=>Uc,dot:()=>sh,dropout:()=>Gc,elu:()=>Cc,embedding:()=>Qc,flatten:()=>jc,gaussianDropout:()=>Ph,gaussianNoise:()=>zh,globalAveragePooling1d:()=>gh,globalAveragePooling2d:()=>yh,globalMaxPool1d:()=>Fh,globalMaxPool2d:()=>Mh,globalMaxPooling1d:()=>bh,globalMaxPooling2d:()=>xh,gru:()=>Ih,gruCell:()=>Sh,input:()=>ml,inputLayer:()=>Tc,layerNormalization:()=>ah,leakyReLU:()=>$c,lstm:()=>Nh,lstmCell:()=>Th,masking:()=>Wh,maxPool1d:()=>Bh,maxPool2d:()=>Lh,maxPooling1d:()=>wh,maxPooling2d:()=>vh,maxPooling3d:()=>kh,maximum:()=>eh,minimum:()=>th,multiply:()=>nh,permute:()=>Kc,prelu:()=>Ac,reLU:()=>Ec,repeatVector:()=>Xc,rescaling:()=>Vh,reshape:()=>qc,resizing:()=>Hh,rnn:()=>Dh,separableConv2d:()=>Lc,simpleRNN:()=>Ch,simpleRNNCell:()=>Eh,softmax:()=>Dc,spatialDropout1d:()=>Hc,stackedRNNCells:()=>Rh,thresholdedReLU:()=>Rc,timeDistributed:()=>Oh,upSampling2d:()=>Pc,zeroPadding2d:()=>ih});var i={};n.r(i),n.d(i,{MAPE:()=>sp,MSE:()=>ip,binaryAccuracy:()=>Xh,binaryCrossentropy:()=>qh,categoricalAccuracy:()=>Qh,categoricalCrossentropy:()=>Yh,cosineProximity:()=>ep,mape:()=>rp,meanAbsoluteError:()=>tp,meanAbsolutePercentageError:()=>np,meanSquaredError:()=>ap,mse:()=>op,precision:()=>Jh,recall:()=>Zh,sparseCategoricalAccuracy:()=>Kh});var o={};n.r(o),n.d(o,{modelFromJSON:()=>cl});var l={};n.r(l),n.d(l,{l1:()=>up,l1l2:()=>lp,l2:()=>cp});var u={};n.r(u),n.d(u,{json:()=>$p});var c={};n.r(c),n.d(c,{json:()=>Ap});var h={};n.r(h),n.d(h,{json:()=>Dp});var p={};n.r(p),n.d(p,{json:()=>Rp});var d={};n.r(d),n.d(d,{json:()=>_p});var f={};n.r(f),n.d(f,{json:()=>Op});var m={};n.r(m),n.d(m,{json:()=>Fp});var g={};n.r(g),n.d(g,{json:()=>Mp});var y={};n.r(y),n.d(y,{json:()=>Bp});var b={};n.r(b),n.d(b,{json:()=>Lp});var x={};n.r(x),n.d(x,{json:()=>zp});var w={};n.r(w),n.d(w,{json:()=>Pp});var v={};n.r(v),n.d(v,{json:()=>Up});var k={};n.r(k),n.d(k,{json:()=>Wp});var I={};n.r(I),n.d(I,{json:()=>Vp});var S={};n.r(S),n.d(S,{json:()=>Gp});var N={};n.r(N),n.d(N,{json:()=>Hp});var T={};n.r(T),n.d(T,{json:()=>jp});var C={};n.r(C),n.d(C,{json:()=>Xp});var E={};n.r(E),n.d(E,{OP_SCOPE_SUFFIX:()=>cd.zvA,abs:()=>cd.WnP,acos:()=>cd.Khb,acosh:()=>cd.__u,add:()=>cd.IHx,addN:()=>cd.QBD,all:()=>cd.$6P,any:()=>cd.YjB,argMax:()=>cd.NqF,argMin:()=>cd.vHJ,asin:()=>cd.ZRM,asinh:()=>cd.VfV,atan:()=>cd.z4N,atan2:()=>cd.fvJ,atanh:()=>cd.C80,avgPool:()=>cd.wS1,avgPool3d:()=>cd.uR5,basicLSTMCell:()=>cd.zEQ,batchNorm:()=>cd.tgs,batchNorm2d:()=>cd.Dxk,batchNorm3d:()=>cd.JY5,batchNorm4d:()=>cd.p3b,batchToSpaceND:()=>cd.E4h,bincount:()=>cd.yE8,booleanMaskAsync:()=>cd.anm,broadcastArgs:()=>cd.XsQ,broadcastTo:()=>cd.UFq,buffer:()=>cd.f3b,cast:()=>cd.pju,ceil:()=>cd.mDi,clipByValue:()=>cd.iUl,clone:()=>cd.d9v,complex:()=>cd.PYB,concat:()=>cd.zoF,concat1d:()=>cd.gME,concat2d:()=>cd.Izb,concat3d:()=>cd.MNy,concat4d:()=>cd.ZaL,conv1d:()=>cd.PAt,conv2d:()=>cd.Tek,conv2dTranspose:()=>cd.bc,conv3d:()=>cd.pdZ,conv3dTranspose:()=>cd.$QV,cos:()=>cd.mCk,cosh:()=>cd.f9Y,cosineWindow:()=>cd.mew,cumprod:()=>cd.$Gn,cumsum:()=>cd.zbp,denseBincount:()=>cd.ppE,depthToSpace:()=>cd.nTT,depthwiseConv2d:()=>cd.B10,diag:()=>cd.Ka3,dilation2d:()=>cd.WmZ,div:()=>cd.hiC,divNoNan:()=>cd.NTj,dot:()=>cd.AKD,dropout:()=>cd.rvX,einsum:()=>cd.WYO,elu:()=>cd.pyx,enclosingPowerOfTwo:()=>cd.GRh,equal:()=>cd.DgJ,erf:()=>cd.qNN,euclideanNorm:()=>cd.d2q,exp:()=>cd.Qqt,expandDims:()=>cd.dt4,expm1:()=>cd.t$B,eye:()=>cd.iyy,fft:()=>cd.kp_,fill:()=>cd.hlL,floor:()=>cd.GWj,floorDiv:()=>cd.qPi,fused:()=>cd.imm,gather:()=>cd.Iqj,gatherND:()=>cd.dbB,greater:()=>cd.pjt,greaterEqual:()=>cd.brS,ifft:()=>cd.Sxn,imag:()=>cd.asL,image:()=>cd.BHj,inTopKAsync:()=>cd.V3u,irfft:()=>cd.wx0,isFinite:()=>cd.xVT,isInf:()=>cd.UWc,isNaN:()=>cd.i2d,leakyRelu:()=>cd.hi7,less:()=>cd.d9m,lessEqual:()=>cd.zN1,linalg:()=>cd.$r2,linspace:()=>cd.SX3,localResponseNormalization:()=>cd.G9k,log:()=>cd.cM7,log1p:()=>cd.Krr,logSigmoid:()=>cd.e_t,logSoftmax:()=>cd.CmS,logSumExp:()=>cd.l_t,logicalAnd:()=>cd.HvI,logicalNot:()=>cd.hJK,logicalOr:()=>cd.K5V,logicalXor:()=>cd.egP,losses:()=>cd.MB5,lowerBound:()=>cd.eab,matMul:()=>cd.OI3,max:()=>cd.Fp7,maxPool:()=>cd._sB,maxPool3d:()=>cd.YQQ,maxPoolWithArgmax:()=>cd.Ip$,maximum:()=>cd.gWQ,mean:()=>cd.J69,meshgrid:()=>cd.ry_,min:()=>cd.VV$,minimum:()=>cd.LTh,mirrorPad:()=>cd.VdP,mod:()=>cd.wQq,moments:()=>cd.Gi7,movingAverage:()=>cd.p_,mul:()=>cd.dC7,multiRNNCell:()=>cd.rq4,multinomial:()=>cd.SJ_,neg:()=>cd.W76,norm:()=>cd.KOy,notEqual:()=>cd.Quu,oneHot:()=>cd.lfX,ones:()=>cd.iUs,onesLike:()=>cd.JpU,op:()=>cd.op,outerProduct:()=>cd.N2O,pad:()=>cd.vku,pad1d:()=>cd.pNR,pad2d:()=>cd.koy,pad3d:()=>cd.t1L,pad4d:()=>cd.lGY,pool:()=>cd.d_R,pow:()=>cd.sQ3,prelu:()=>cd.AL3,print:()=>cd.S0v,prod:()=>cd.WVs,raggedGather:()=>cd.$gW,raggedRange:()=>cd.VT$,raggedTensorToTensor:()=>cd.N89,rand:()=>cd.TN_,randomGamma:()=>cd.wzB,randomNormal:()=>cd.nGf,randomStandardNormal:()=>cd.ruB,randomUniform:()=>cd.LGj,range:()=>cd.w6H,real:()=>cd.kwC,reciprocal:()=>cd.M25,relu:()=>cd.UYe,relu6:()=>cd.btT,reshape:()=>cd.XLQ,reverse:()=>cd.GYS,reverse1d:()=>cd.SDf,reverse2d:()=>cd.diP,reverse3d:()=>cd.sx7,reverse4d:()=>cd.mG2,rfft:()=>cd.QEs,round:()=>cd.NMM,rsqrt:()=>cd.bp0,scalar:()=>cd.iD$,scatterND:()=>cd.snQ,searchSorted:()=>cd.zcT,selu:()=>cd.U8D,separableConv2d:()=>cd.U_I,setdiff1dAsync:()=>cd.ODp,sigmoid:()=>cd.XD2,sign:()=>cd.Xxe,signal:()=>cd.tdS,sin:()=>cd.O$l,sinh:()=>cd.R_K,slice:()=>cd.tPi,slice1d:()=>cd.jZU,slice2d:()=>cd.SmN,slice3d:()=>cd.CnO,slice4d:()=>cd.p0P,softmax:()=>cd.XAC,softplus:()=>cd.Wvh,spaceToBatchND:()=>cd.fBT,sparse:()=>cd.rVs,sparseToDense:()=>cd.ers,spectral:()=>cd.uN7,split:()=>cd.Vl2,sqrt:()=>cd._b3,square:()=>cd.h62,squaredDifference:()=>cd.$i,squeeze:()=>cd.L9e,stack:()=>cd.knu,step:()=>cd.Nbs,stridedSlice:()=>cd.NXj,string:()=>cd.Z_8,sub:()=>cd.luU,sum:()=>cd.Smz,tan:()=>cd.ORZ,tanh:()=>cd.AEp,tensor:()=>cd.XeE,tensor1d:()=>cd.RRF,tensor2d:()=>cd.odF,tensor3d:()=>cd.wOQ,tensor4d:()=>cd.yXz,tensor5d:()=>cd.Bfx,tensor6d:()=>cd.xZs,tile:()=>cd.Gg6,topk:()=>cd.hg7,transpose:()=>cd.p4s,truncatedNormal:()=>cd.Xu6,unique:()=>cd.Two,unsortedSegmentSum:()=>cd.pUJ,unstack:()=>cd.HHK,upperBound:()=>cd.GaM,variable:()=>cd.VD$,where:()=>cd.arb,whereAsync:()=>cd.itS,zeros:()=>cd.lls,zerosLike:()=>cd.P84});var $={};n.r($),n.d($,{addImpl:()=>zf,bincountImpl:()=>Dm,bincountReduceImpl:()=>Rm,castImpl:()=>Of,ceilImpl:()=>Fm,concatImpl:()=>Um,equalImpl:()=>Sg,expImpl:()=>Fg,expm1Impl:()=>Pg,floorImpl:()=>sy,gatherNdImpl:()=>hy,gatherV2Impl:()=>dy,greaterEqualImpl:()=>by,greaterImpl:()=>my,lessEqualImpl:()=>Dy,lessImpl:()=>Ey,linSpaceImpl:()=>Oy,logImpl:()=>My,maxImpl:()=>Yy,maximumImpl:()=>eb,minimumImpl:()=>cb,multiplyImpl:()=>gg,negImpl:()=>vb,notEqualImpl:()=>$b,prodImpl:()=>Wb,raggedGatherImpl:()=>Hb,raggedRangeImpl:()=>qb,raggedTensorToTensorImpl:()=>ex,rangeImpl:()=>nx,rsqrtImpl:()=>fx,scatterImpl:()=>yx,sigmoidImpl:()=>Nf,simpleAbsImpl:()=>qf,sliceImpl:()=>Cm,sparseFillEmptyRowsImpl:()=>Bx,sparseReshapeImpl:()=>zx,sparseSegmentReductionImpl:()=>Ux,sqrtImpl:()=>jx,squaredDifferenceImpl:()=>Qx,stridedSliceImpl:()=>tw,stringNGramsImpl:()=>rw,stringSplitImpl:()=>ow,stringToHashBucketFastImpl:()=>uw,subImpl:()=>jg,tileImpl:()=>mw,topKImpl:()=>xw,transposeImpl:()=>tm,uniqueImpl:()=>Tw});var A=n(3306),D=n(9121),R=n(2271),_=n(4841),O=n(1901);const F={kernelName:D.SYM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)(e,(0,O.N)((0,R.p)(n,"float32"),-1))}}};var M=n(1274),B=n(7370),L=n(9494),z=n(3261),P=n(248),U=n(827);const W={kernelName:D.VGw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,P.h)((0,R.p)(n,"float32")),s=(0,z._)((0,U.l)((0,L.i)(1),t));return(0,B.W)((0,M.h)(e,s))}}}},V={kernelName:D.SpW,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,z._)((0,U.l)((0,P.h)((0,R.p)(n,"float32")),1));return(0,M.h)(e,t)}}}};var G=n(2200),H=n(4968),j=n(5475);const X={kernelName:D.mm_,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=G.assertAndGetBroadcastShape(n.shape,s.shape);return{a:()=>{let t=e;const s=G.getReductionAxes(n.shape,r);return s.length>0&&(t=(0,j.S)(t,s)),(0,H.X)(t,n.shape)},b:()=>{let t=e;const n=G.getReductionAxes(s.shape,r);return n.length>0&&(t=(0,j.S)(t,n)),(0,H.X)(t,s.shape)}}}},q={kernelName:D.Xze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}};var K=n(6577);const Q={kernelName:D.sJF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,K.P)(n)}}},Y={kernelName:D.aJk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,K.P)(n)}}},J={kernelName:D.M2y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,z._)((0,U.l)((0,L.i)(1),(0,P.h)((0,R.p)(n,"float32")))))}}};var Z=n(6407);const ee={kernelName:D.qw7,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,z._)((0,Z.I)((0,L.i)(1),(0,P.h)((0,R.p)(n,"float32"))));return(0,M.h)(e,t)}}}},te={kernelName:D.QCc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,G.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,Z.I)((0,P.h)(n),(0,P.h)(s));let a=(0,_.d)(e,(0,M.h)(s,t));const i=(0,G.getReductionAxes)(n.shape,r);return i.length>0&&(a=(0,j.S)(a,i)),(0,H.X)(a,n.shape)},b:()=>{const t=(0,Z.I)((0,P.h)(n),(0,P.h)(s));let a=(0,B.W)((0,_.d)(e,(0,M.h)(n,t)));const i=(0,G.getReductionAxes)(s.shape,r);return i.length>0&&(a=(0,j.S)(a,i)),(0,H.X)(a,s.shape)}}}},ne={kernelName:D.jMg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,Z.I)((0,P.h)((0,R.p)(n,"float32")),1))}}},se={kernelName:D.Oyi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,U.l)((0,L.i)(1),(0,P.h)((0,R.p)(n,"float32"))))}}};var re=n(7097),ae=n(5382),ie=n(569),oe=n(2582),le=n(2668);const ue=(0,le.op)({avgPool3dGrad_:function(e,t,n,s,r,a){const i=(0,ae._1)(e,"dy","avgPool3dGrad"),o=(0,ae._1)(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=(0,H.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,H.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ie.hu(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ie.hu(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),(0,oe.m)("avgPool3dGrad",r,a);const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},d=re.BV.runKernel(D.IMb,h,p);return c?(0,H.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ce={kernelName:D._k9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>ue(e,s,r,a,i,o)}}},he=(0,le.op)({avgPoolGrad_:function(e,t,n,s,r){const a=(0,ae._1)(e,"dy","avgPoolGrad"),i=(0,ae._1)(t,"input","avgPoolGrad");ie.hu(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=(0,H.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,H.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie.hu(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ie.hu(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=re.BV.runKernel(D.ROF,c,h);return u?(0,H.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),pe={kernelName:D.JhU,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>he(e,s,r,a,i)}}};var de=n(8687);const fe={kernelName:D.XLW,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,de.O)(e,r,!1,!1),b:()=>(0,de.O)(e,s,!0,!1)}:a&&!i?{a:()=>(0,de.O)(r,e,!1,!0),b:()=>(0,de.O)(s,e,!1,!1)}:{a:()=>(0,de.O)(r,e,!0,!0),b:()=>(0,de.O)(e,s,!0,!0)}:{a:()=>(0,de.O)(e,r,!1,!0),b:()=>(0,de.O)(s,e,!0,!1)}}};var me=n(7918);const ge={kernelName:D.zws,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>(0,me.f)(e,s,r)}}},ye={kernelName:D.Ly9,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,j.S)(e,o,!0)}}},be={kernelName:D.RFZ,gradFunc:e=>({x:()=>e.clone()})},xe={kernelName:D.gJX,gradFunc:e=>({x:()=>(0,K.P)(e)})};var we=n(7630),ve=n(624),ke=n(2856),Ie=n(5912);const Se={kernelName:D.xnO,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>(0,Ie.a)((0,ke.H)((0,we.b)(s,r),(0,ve.z)(s,a)),e,(0,K.P)(e))}}},Ne={kernelName:D.yj2,inputsToSave:["x"],gradFunc:F.gradFunc};var Te=n(8644);const Ce={kernelName:D.Eh3,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=(0,ie.EC)(r,t[0].shape)[0],i=s.map((e=>e[a]));return(0,Te.V)(e,i,a).map((e=>()=>e))}};var Ee=n(6013),$e=n(9832);const Ae={kernelName:D.mhS,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return ie.hu(oe.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,$e._)(s.shape,e,r,i,o,l),filter:()=>(0,Ee.p)(s,e,r.shape,i,o,l)}}};var De=n(4794);const Re={kernelName:D.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>(0,De.T)(e,r,a,i,o,1,l),filter:()=>(0,Ee.p)(e,s,r.shape,a,i,o,l)}}},_e=(0,le.op)({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=(0,H.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,H.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ie.hu(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),ie.hu(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ie.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ie.hu(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),ie.hu(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return re.BV.runKernel(D.o2y,o,l)}});var Oe=n(7594);const Fe={kernelName:D.x12,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;ie.hu((0,oe.I0)(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>(0,Oe._)(i.shape,e,o,r,a),filter:()=>_e(i,e,o.shape,r,a)}}};var Me=n(9331);const Be={kernelName:D.mc4,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)((0,B.W)((0,Me.O)((0,R.p)(n,"float32"))),e)}}};var Le=n(3254);const ze={kernelName:D.TR1,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)((0,Le.R)((0,R.p)(n,"float32")),e)}}};var Pe=n(3591),Ue=n(7405),We=n(9065);const Ve={kernelName:D.iHb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,Pe.Q3)([r],s.rank);let n=(0,Ue.z)(e,r,a,!i);return null!=t&&(n=(0,We.p)(n,t)),n}}}};var Ge=n(8098),He=n(4375);const je={kernelName:D.cie,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;ie.hu(oe.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return ie.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ie.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ie.hu(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ie.hu(oe.jT(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),oe.m("depthwiseConv2d",a,i),{x:()=>(0,He.v)(l.shape,e,u,r,a,o,i),filter:()=>(0,Ge.z)(l,e,u.shape,r,a,o,i)}}},Xe={kernelName:D.p4S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>re.BV.runKernel(D.ekb,a,n),filter:()=>re.BV.runKernel(D.Vn9,i,n)}}},qe={kernelName:D.SX0,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>re.BV.runKernel(D.HEU,s)}}};var Ke=n(4842);const Qe={kernelName:D.Omj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,_.d)((0,Ke.Q)((0,B.W)((0,P.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,_.d)(e,s)}}},Ye={kernelName:D.NEP,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)(e,n)}}},Je={kernelName:D.YFo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,H.X)(e,n.shape)}}},Ze={kernelName:D.Y0y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)(e,(0,Ke.Q)(n))}}},et={kernelName:D.OR,gradFunc:e=>({x:()=>(0,K.P)(e)})},tt={kernelName:D.jeX,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,G.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,M.h)(e,(0,R.p)(s,"float32")),a=(0,G.getReductionAxes)(n.shape,r);return a.length>0?(0,H.X)((0,j.S)(t,a),n.shape):t},b:()=>{let t=(0,_.d)(e,(0,R.p)(n,"float32"));const a=(0,G.getReductionAxes)(s.shape,r);a.length>0&&(t=(0,H.X)((0,j.S)(t,a),s.shape));const i=(0,P.h)(s);return(0,B.W)((0,M.h)(t,(0,R.p)(i,"float32")))}}}};var nt=n(2634),st=n(7501);const rt={kernelName:D.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?(0,L.i)(1):o,u=(0,G.getReductionAxes)(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=(0,U.l)(r,a),p=(0,_.d)(e,l),d=(0,nt.b)((0,Z.I)(i,(0,L.i)(s))),f=(0,_.d)((0,_.d)((0,_.d)(d,d),d),(0,L.i)(-.5));return{x:()=>1===a.rank?(0,H.X)((0,_.d)((0,_.d)(e,(0,st.G)((0,H.X)(d,[1,1,1,a.shape[0]]),c)),l),r.shape):(0,H.X)((0,_.d)((0,_.d)(e,d),l),r.shape),mean:()=>{let e=(0,_.d)((0,_.d)(d,(0,L.i)(-1)),p);return 1===a.rank&&(e=(0,j.S)(e,u)),(0,H.X)(e,a.shape)},variance:()=>{let e=(0,_.d)((0,_.d)(f,h),p);return 1===a.rank&&(e=(0,j.S)(e,u)),(0,H.X)(e,a.shape)},scale:()=>{const t=(0,_.d)(h,d);let n=(0,_.d)(e,t);return 1===a.rank&&(n=(0,j.S)(n,u)),(0,H.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,j.S)(t,u)),(0,H.X)(t,a.shape)}}}};var at=n(8749);const it={kernelName:D.qi_,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=(0,ie.EC)(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=ot(0,l),p=ot(l+1,l+1+c),d=lt([o,[n],u]),f=(0,H.X)(e,d),m=(0,H.X)(r,[n]),g=lt([[l],h,p]),y=(0,We.p)(f,g);let b=(0,at.p)(y,m,s.shape[i]);const x=(0,Pe.LJ)(g);return b=(0,We.p)(b,x),b},indices:()=>r}}};function ot(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function lt(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const ut={kernelName:D.Acj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,K.P)(n),b:()=>(0,K.P)(s)}}},ct={kernelName:D.iJz,gradFunc:e=>({x:()=>(0,R.p)(e,"float32")})},ht={kernelName:D.avt,gradFunc:e=>({x:()=>(0,K.P)(e)})},pt={kernelName:D.iWB,gradFunc:e=>({x:()=>(0,K.P)(e)})},dt={kernelName:D.r7n,gradFunc:e=>({x:()=>(0,K.P)(e)})};var ft=n(636);const mt={kernelName:D.J$2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=(0,ft.p)(s,0);return{x:()=>(0,Ie.a)(a,e,(0,_.d)(e,r))}}},gt={kernelName:D.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,Z.I)(n,1))}}},yt={kernelName:D.ZbH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,R.p)(n,"float32"))}}},bt={kernelName:D.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=(0,Ke.Q)(s);return(0,U.l)(e,(0,_.d)((0,j.S)(e,r,!0),t))}}}},xt=(0,le.op)({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return re.BV.runKernel(D.Hhh,o,l)}}),wt={kernelName:D.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>xt(s,r,e,a,i,o,l)}}};var vt=n(6477);function kt(e,t,n,s){return t.rank<n.rank&&(t=(0,H.X)(t,Pe.rv(t.shape,s))),e.rank<n.rank&&(e=(0,H.X)(e,Pe.rv(e.shape,s))),{x:()=>(0,_.d)(e,(0,R.p)((0,vt.D)(n,t),e.dtype))}}const It={kernelName:D.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=kt(e,t[1],a,ie.EC(r,a.shape));return{x:()=>i.x()}}};var St=n(6573);const Nt={kernelName:D.BMI,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,_.d)(e,(0,R.p)((0,we.b)(n,s),"float32")),b:()=>(0,_.d)(e,(0,R.p)((0,St.d)(n,s),"float32"))}}},Tt=(0,le.op)({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=(0,ae._1)(e,"dy","maxPool3dGrad"),l=(0,ae._1)(t,"input","maxPool3dGrad"),u=(0,ae._1)(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=(0,H.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=(0,H.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,H.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ie.hu(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ie.hu(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),ie.hu(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),(0,oe.m)("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=re.BV.runKernel(D.OU7,f,m);return d?(0,H.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Ct={kernelName:D.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Tt(e,s,r,a,i,o,l)}}},Et=(0,le.op)({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=(0,ae._1)(e,"dy","maxPoolGrad"),l=(0,ae._1)(t,"input","maxPoolGrad"),u=(0,ae._1)(n,"output","maxPoolGrad");ie.hu(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ie.hu(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ie.hu(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),oe.m("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return re.BV.runKernel(D.OV7,c,h)}}),$t={kernelName:D.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Et(e,s,r,a,i,o)}}};var At=n(4917);const Dt={kernelName:D.q2K,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=ie.EC(r,s.shape),i=(0,Pe.kz)(s.shape,a)[1],o=ie.NA(i);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,H.X)(e,t);return(0,M.h)((0,_.d)(n,(0,At.i)(s.shape,"float32")),o)}}}},Rt={kernelName:D.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=kt(e,i,a,ie.EC(r,a.shape));return{x:()=>o.x()}}},_t={kernelName:D.q8u,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,_.d)(e,(0,R.p)((0,ve.z)(n,s),"float32")),b:()=>(0,_.d)(e,(0,R.p)((0,ft.p)(n,s),"float32"))}}};var Ot=n(2676);const Ft={kernelName:D.jQs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,Ot.t)(e,a,s.shape)}}};var Mt=n(6943);const Bt={kernelName:D.Vbg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,G.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,G.getReductionAxes)(n.shape,r);return t.length>0?(0,H.X)((0,j.S)(e,t),n.shape):e},b:()=>{const t=(0,_.d)(e,(0,B.W)((0,Mt.G)((0,M.h)(n,s)))),a=(0,G.getReductionAxes)(s.shape,r);return a.length>0?(0,H.X)((0,j.S)(t,a),s.shape):t}}}},Lt={kernelName:D.wYn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,G.assertAndGetBroadcastShape)(n.shape,s.shape);return{a:()=>{const t=(0,_.d)(e,(0,R.p)(s,"float32")),a=(0,G.getReductionAxes)(n.shape,r);return a.length>0?(0,H.X)((0,j.S)(t,a),n.shape):t},b:()=>{const t=(0,_.d)(e,(0,R.p)(n,"float32")),a=(0,G.getReductionAxes)(s.shape,r);return a.length>0?(0,H.X)((0,j.S)(t,a),s.shape):t}}}},zt={kernelName:D.kuV,gradFunc:e=>({x:()=>(0,B.W)(e)})};var Pt=n(723);const Ut={kernelName:D.we_,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Pt.l)(n.shape,"float32")}}},Wt={kernelName:D.qWM,gradFunc:e=>({x:()=>(0,K.P)(e)})};var Vt=n(4136);const Gt={kernelName:D.QiL,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return(0,Vt.H)(e,s).map((e=>()=>e))}},Ht={kernelName:D.lyA,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,Ot.t)(e,a,s.shape)}}};var jt=n(2597),Xt=n(3453);const qt={kernelName:D.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=G.assertAndGetBroadcastShape(a.shape,i.shape);return{a:()=>{const t=(0,R.p)(i,"float32");let n=(0,_.d)(e,(0,_.d)(t,(0,Xt.s)(a,(0,U.l)(t,(0,L.i)(1)))));const s=G.getReductionAxes(a.shape,o);return s.length>0&&(n=(0,j.S)(n,s)),(0,H.X)(n,a.shape)},b:()=>{const t=(0,ft.p)(a,0),n=(0,Ie.a)(t,(0,jt.c)(a),(0,K.P)(a));let s=(0,_.d)(e,(0,_.d)(r,n));const l=G.getReductionAxes(i.shape,o);return l.length>0&&(s=(0,j.S)(s,l)),(0,H.X)(s,i.shape)}}}},Kt={kernelName:D.o0g,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,ft.p)(n,0);return{x:()=>(0,Ie.a)(r,e,(0,_.d)(e,s)),alpha:()=>{let t=(0,Ie.a)(r,(0,K.P)(e),(0,_.d)(e,n));const a=(0,G.getReductionAxes)(s.shape,e.shape);return a.length>0&&(t=(0,j.S)(t,a)),(0,H.X)(t,s.shape)}}}};var Qt=n(9640);const Yt={kernelName:D.DlI,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>function(e,t,n){const s=e.shape.length,r=s-n.length,a=Pe.Q3(n,s);let i=e;null!=a&&(i=(0,We.p)(e,a));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=(0,H.X)(t,s),a=(0,Qt.$)(e,n,!0,!1),i=(0,Qt.$)(e,n,!0,!0),o=(0,_.d)(a,i);return(0,_.d)(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=a){const e=Pe.LJ(a);u=(0,We.p)(u,e)}return u}(s,e,a)}}},Jt={kernelName:D.oHH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=G.assertAndGetBroadcastShape(n.shape,s.shape);return{a:()=>{const t=(0,M.h)(e,(0,R.p)(s,"float32")),a=G.getReductionAxes(n.shape,r);return a.length>0?(0,H.X)((0,j.S)(t,a),n.shape):t},b:()=>{let t=(0,_.d)(e,(0,R.p)(n,"float32"));const a=G.getReductionAxes(s.shape,r);a.length>0&&(t=(0,H.X)((0,j.S)(t,a),s.shape));const i=(0,P.h)(s);return(0,B.W)((0,M.h)(t,(0,R.p)(i,"float32")))}}}},Zt={kernelName:D.$HU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,B.W)((0,P.h)(n)))}}},en={kernelName:D.SbG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,_.d)((0,ve.z)(n,6),(0,O.N)(n));return{x:()=>(0,_.d)(e,(0,R.p)(s,"float32"))}}},tn={kernelName:D.qkr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)(e,(0,R.p)((0,O.N)(n),"float32"))}}},nn={kernelName:D.HZH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,H.X)(e,n.shape)}}},sn={kernelName:D._Yw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>re.BV.runKernel(D.zbQ,r,n)}}},rn={kernelName:D.dpD,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>re.BV.runKernel(D.Hmb,r,n)}}};var an=n(7486);const on={kernelName:D.mKl,gradFunc:(e,t,n)=>{const{dims:s}=n,r=(0,ie.EC)(s,e.shape);return{x:()=>(0,an.G)(e,r)}}},ln={kernelName:D.e07,gradFunc:e=>({x:()=>(0,K.P)(e)})},un={kernelName:D.bV0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,B.W)((0,M.h)(e,(0,_.d)((0,Xt.s)(n,1.5),2)))}}};var cn=n(8651);const hn={kernelName:D.PhF,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,R.p)((0,K.P)(n),"float32"),t:()=>(0,_.d)(e,(0,R.p)(n,e.dtype)),e:()=>(0,_.d)(e,(0,R.p)((0,cn.h)(n),e.dtype))}}};var pn=n(3179);const dn={kernelName:D.oFR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,ft.p)(n,(0,L.i)(0)),s=(0,L.i)(pn.y),r=(0,L.i)(pn.$),a=(0,_.d)(e,r),i=(0,_.d)((0,_.d)(e,s),(0,Ke.Q)((0,R.p)(n,"float32")));return(0,Ie.a)(t,a,i)}}}},fn={kernelName:D.a5O,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)(e,(0,_.d)(n,(0,U.l)((0,L.i)(1),n)))}}},mn={kernelName:D.i5y,gradFunc:e=>({x:()=>(0,K.P)(e)})};var gn=n(173);const yn={kernelName:D.RQH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)((0,gn.m)((0,R.p)(n,"float32")),e)}}};var bn=n(2699);const xn={kernelName:D.wYB,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)((0,bn.f)((0,R.p)(n,"float32")),e)}}};var wn=n(9682),vn=n(7650);const kn={kernelName:D.p2w,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=(0,vn.parseSliceParams)(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>(0,wn.v)(e,u)}}},In={kernelName:D.Gcp,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=(0,_.d)(e,s);return{logits:()=>(0,U.l)(a,(0,_.d)((0,j.S)(a,[r],!0),s))}}};var Sn=n(625);const Nn={kernelName:D.MRv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)(e,(0,Sn.X)(n))}}};var Tn=n(8441);const Cn={kernelName:D.TQc,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>(0,Tn.E)(e,s,r)}}};var En=n(6884);const $n={kernelName:D.L8s,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>(0,En.z)(e,s)}}},An={kernelName:D.FKq,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,_.d)((0,z._)((0,R.p)(n,"float32")),2))}}},Dn={kernelName:D.bK0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)(e,(0,_.d)((0,R.p)(n,"float32"),2))}}},Rn={kernelName:D._tC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,L.i)(2);return{a:()=>(0,_.d)(e,(0,_.d)(r,(0,U.l)(n,s))),b:()=>(0,_.d)(e,(0,_.d)(r,(0,U.l)(s,n)))}}},_n={kernelName:D.h8e,gradFunc:e=>({x:()=>(0,K.P)(e)})},On={kernelName:D.Tr8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=G.assertAndGetBroadcastShape(n.shape,s.shape);return{a:()=>{let t=e;const s=G.getReductionAxes(n.shape,r);return s.length>0&&(t=(0,j.S)(t,s)),(0,H.X)(t,n.shape)},b:()=>{let t=e;const n=G.getReductionAxes(s.shape,r);return n.length>0&&(t=(0,j.S)(t,n)),(0,H.X)((0,B.W)(t),s.shape)}}}},Fn={kernelName:D.GBy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;(0,ie.EC)(a,s.shape).forEach((e=>{r[e]=1}));const i=(0,H.X)(e,r),o=(0,_.d)(i,(0,At.i)(s.shape,"float32"));return{x:()=>o}}},Mn={kernelName:D.sEM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.h)(e,(0,P.h)((0,gn.m)(n)))}}},Bn={kernelName:D.MIZ,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.d)((0,U.l)((0,L.i)(1),(0,P.h)(n)),e)}}},Ln={kernelName:D.n9L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=(0,K.P)(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=(0,Z.I)(t,(0,Ot.t)(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=(0,Z.I)(t,(0,Ot.t)(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=(0,Z.I)(t,(0,Ot.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=(0,Z.I)(t,(0,Ot.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},zn={kernelName:D.G3Y,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Pe.LJ(r);return{x:()=>(0,We.p)(e,a)}}};var Pn=n(2991);const Un={kernelName:D.ToN,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>(0,Pn.k)(e,r)}}};var Wn=n(1300),Vn=n(4926),Gn=n(632);const Hn={kernelName:D.Qvg,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,Gn.g)(t,(0,K.P)(t)),s=(0,Vn.I)(e,n);let r=(0,we.b)(t,(0,L.i)(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=(0,Wn.d)(r,e+1);r=(0,ke.H)(r,(0,At.i)(s.shape,"bool"));const i=(0,K.P)(s);return(0,Ie.a)(r,s,i)}(e,n)}}},jn={kernelName:D.RuY,gradFunc:e=>({x:()=>(0,K.P)(e)})};var Xn=n(6151);const qn=[F,W,V,X,q,Q,Y,J,ee,te,ne,se,ce,pe,fe,ge,ye,be,xe,Se,Ne,Ce,Re,Ae,Fe,Be,ze,Ve,je,Xe,Jt,qe,Qe,Ye,Je,Ze,tt,et,rt,it,ut,ct,ht,pt,dt,mt,gt,yt,bt,wt,It,It,Nt,Ct,$t,Dt,Rt,_t,Ft,Bt,Lt,zt,Ut,Wt,Gt,Ht,Ht,qt,Kt,Yt,Zt,en,tn,nn,sn,rn,on,ln,un,hn,dn,fn,mn,yn,xn,kn,In,Nn,Cn,Cn,$n,$n,An,Rn,Dn,_n,On,Fn,Mn,Bn,Ln,zn,Un,Hn,jn];for(const e of qn)(0,Xn.Li)(e);var Kn=n(6235),Qn=n(4077);(0,Qn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Kn.W)(this)};var Yn=n(7839);(0,Qn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Yn.K)(this)};var Jn=n(1470);(0,Qn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Jn._)(this)},(0,Qn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,Z.I)(this,e)};var Zn=n(781);(0,Qn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Zn.$)(this,e,t)};var es=n(2998);(0,Qn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,es.Y)(this,e,t)};var ts=n(47);(0,Qn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,ts.N)(this,e)};var ns=n(7394);(0,Qn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,ns.v)(this,e)},(0,Qn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,ie.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,H.X)(this,[])},(0,Qn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,R.p)(this,e)},(0,Qn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,H.X)(this,[this.size])},(0,Qn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,H.X)(this,[e,t])},(0,Qn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,H.X)(this,[e,t,n])},(0,Qn.t3)().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),(0,H.X)(this,[e,t,n,s])},(0,Qn.t3)().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),(0,H.X)(this,[e,t,n,s,r])};var ss=n(2421);(0,Qn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,ss.Z)(this)};var rs=n(1891);(0,Qn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,rs.V)(this)};var as=n(7037);(0,Qn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,as.z)(this)};var is=n(9812);(0,Qn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,is.f)(this,e)};var os=n(369);(0,Qn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,os.C)(this)};var ls=n(5176);(0,Qn.t3)().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),(0,ls.w)(this,e,t,n,s)},(0,Qn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,Tn.E)(this,e,t)};var us=n(7505);(0,Qn.t3)().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),(0,us.t)(this,e,t,n,s,r)};var cs=n(8247);(0,Qn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,cs.U)(this,e)},(0,Qn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,R.p)(this,e)};var hs=n(6825);(0,Qn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,hs.m)(this)};var ps=n(2279);(0,Qn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,ps.i)(this,e,t)},(0,Qn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Qn.es&&(e=[e]),(0,En.z)([this,...e],t)};var ds=n(1355);(0,Qn.t3)().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,ds.P)(this,e,t,n,s,r,a)};var fs=n(1405);(0,Qn.t3)().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),(0,fs.b)(this,e,t,n,s,r)},(0,Qn.t3)().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,De.T)(this,e,t,n,s,r,a)},(0,Qn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,gn.m)(this)},(0,Qn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,bn.f)(this)},(0,Qn.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Qt.$)(this,e,t,n)},(0,Qn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,Ue.z)(this,e,t,n)};var ms=n(9112);(0,Qn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,ms.n)(this,e,t)};var gs=n(4718);(0,Qn.t3)().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,gs.B)(this,e,t,n,s,r,a)};var ys=n(557);(0,Qn.t3)().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),(0,ys.W)(this,e,t,n,s,r)};var bs=n(9322);(0,Qn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,bs.N)(this,e)},(0,Qn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,M.h)(this,e)};var xs=n(548);(0,Qn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,xs.A)(this,e)};var ws=n(3233);(0,Qn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,ws.p)(this)},(0,Qn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,vt.D)(this,e)};var vs=n(4650);(0,Qn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,vs.q)(this)};var ks=n(1954);(0,Qn.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,ks.d)(this,e,t)},(0,Qn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ke.Q)(this)},(0,Qn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Wn.d)(this,e)};var Is=n(3426);(0,Qn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Is.t)(this)};var Ss=n(7020);(0,Qn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,Ss.k)(this)},(0,Qn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,H.X)(this,[this.size])},(0,Qn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,Mt.G)(this)};var Ns=n(9165);(0,Qn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,Ns.q)(this,e)},(0,Qn.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,Vn.I)(this,e,t)},(0,Qn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,we.b)(this,e)},(0,Qn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,ft.p)(this,e)};var Ts=n(8447);(0,Qn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,Ts.S)(this)};var Cs=n(4415);(0,Qn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Cs.w)(this)};var Es=n(3963);(0,Qn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,Es.x)(this)};var $s=n(4365);(0,Qn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,$s.U)(this)};var As=n(6230);(0,Qn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,As.i)(this)};var Ds=n(9133);(0,Qn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,Ds.h)(this,e)},(0,Qn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,ve.z)(this,e)},(0,Qn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,St.d)(this,e)};var Rs=n(9648);(0,Qn.t3)().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),(0,Rs.G)(this,e,t,n,s)};var _s=n(3888);(0,Qn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,_s.e)(this)};var Os=n(1510);(0,Qn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,Os.C)(this,e)};var Fs=n(1391);(0,Qn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,Fs.l)(this,e,t)},(0,Qn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,jt.c)(this)};var Ms=n(7474);(0,Qn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Ms.K)(this)},(0,Qn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,ke.H)(this,e)},(0,Qn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,cn.h)(this)};var Bs=n(5750);(0,Qn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,Bs.K)(this,e)};var Ls=n(596);(0,Qn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,Ls.e)(this,e)},(0,Qn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,de.O)(this,e,t,n)};var zs=n(1174);(0,Qn.t3)().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),(0,zs._)(this,e,t,n,s)};var Ps=n(3307);(0,Qn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,Ps.F)(this,e,t)},(0,Qn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,Gn.g)(this,e)};var Us=n(5130);(0,Qn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,Us.J)(this,e,t)};var Ws=n(5735);(0,Qn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,Ws.V)(this,e,t)};var Vs=n(4513);(0,Qn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,Vs.L)(this,e)};var Gs=n(1483);(0,Qn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,Gs.V)(this,e,t)};var Hs=n(5228);(0,Qn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Hs.w)(this,e)},(0,Qn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,_.d)(this,e)},(0,Qn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,B.W)(this)};var js=n(3561);(0,Qn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,js.K)(this,e,t,n)};var Xs=n(6500);(0,Qn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Xs.Q)(this,e)};var qs=n(6708);(0,Qn.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,qs.l)(this,e,t,n)};var Ks=n(7846);(0,Qn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Ks.J)(this)},(0,Qn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,wn.v)(this,e,t)};var Qs=n(5860);(0,Qn.t3)().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,Qs.d)(this,e,t,n,s,r,a)},(0,Qn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,Xt.s)(this,e)};var Ys=n(8151);(0,Qn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Ys.A)(this,e)};var Js=n(9451);(0,Qn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Js.W)(this,e,t)};var Zs=n(9036);(0,Qn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Zs.M)(this)};var er=n(7409);(0,Qn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,er.U)(this)};var tr=n(3582);(0,Qn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,tr.b)(this)},(0,Qn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,H.X)(this,e.shape)},(0,Qn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,H.X)(this,e)};var nr=n(3305);(0,Qn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,nr.I)(this,e,t,n)};var sr=n(5098);(0,Qn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,sr.j)(this,e,t,n)},(0,Qn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,an.G)(this,e)};var rr=n(3710);(0,Qn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,rr.Q)(this)};var ar=n(7809);(0,Qn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,ar.N)(this)},(0,Qn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,nt.b)(this)};var ir=n(5503);(0,Qn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,ir.U)(this)};var or=n(8678);(0,Qn.t3)().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,or.U)(this,e,t,n,s,r,a)},(0,Qn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Sn.X)(this)};var lr=n(4434);(0,Qn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,lr.X)(this)},(0,Qn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,Me.O)(this)},(0,Qn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,Le.R)(this)},(0,Qn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Ot.t)(this,e,t)};var ur=n(682);(0,Qn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,ur.X)(this,e)};var cr=n(3694);(0,Qn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,cr.W)(this)},(0,Qn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,me.f)(this,e,t)},(0,Qn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,Te.V)(this,e,t)},(0,Qn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,z._)(this)},(0,Qn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,P.h)(this)};var hr=n(5265);(0,Qn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,hr.$)(this,e)};var pr=n(9590);(0,Qn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,pr.L)(this,e)},(0,Qn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Qn.es?[this,e]:[this,...e];return(0,Pn.k)(n,t)},(0,Qn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,O.N)(this,e)};var dr=n(5158);(0,Qn.t3)().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),(0,dr.N)(this,e,t,n,s,r,a,i,o)},(0,Qn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,U.l)(this,e)},(0,Qn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,j.S)(this,e,t)};var fr=n(1173);(0,Qn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,fr.O)(this)};var mr=n(1869);(0,Qn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,mr.A)(this)},(0,Qn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,st.G)(this,e)},(0,Qn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,R.p)(this,"bool")},(0,Qn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,R.p)(this,"float32")},(0,Qn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,R.p)(this,"int32")};var gr=n(3243);(0,Qn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,gr.h)(this,e,t)},(0,Qn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,We.p)(this,e)};var yr=n(9608);(0,Qn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,yr.T)(this,e)},(0,Qn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,at.p)(this,e,t)},(0,Qn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,Vt.H)(this,e)},(0,Qn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Ie.a)(e,this,t)},(0,Qn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,K.P)(this)};class br extends Error{constructor(e){super(e),Object.setPrototypeOf(this,br.prototype)}}class xr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xr.prototype)}}class wr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wr.prototype)}}class vr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vr.prototype)}}class kr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kr.prototype)}}class Ir extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ir.prototype)}}class Sr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Nr(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Tr(e,t){if(!e)throw new kr(t)}function Cr(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Er(e){return 1===e.length?e[0]:e}function $r(e){return Array.isArray(e)?e:[e]}function Ar(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Dr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Rr={};function _r(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Or(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Or(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Or(t):e[n]=t.value)}}}function Fr(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in Rr)a=Rr[r];else if(a=t[r],null==a)throw new wr(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new wr(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Rr?[o,l]=Rr.className:i in t&&([o,l]=t[i]),null==o)throw new wr(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Rr))e[t]=Rr[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Rr);for(const e of Object.keys(n))Rr[e]=n[e];Or(a.config);const s=l(o,a.config,n,r);return Rr=Object.assign({},t),s}{const e=Object.assign({},Rr);for(const e of Object.keys(n))Rr[e]=n[e];const t=new o(a.config);return Rr=Object.assign({},e),t}}}function Mr(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Br(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Lr(e){if(null==e)throw new wr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function zr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new wr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Pr(e,t,n=0,s=1/0){return Tr(n>=0),Tr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Ur(e,t){Array.isArray(e)?(A.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ur(e,`element ${n+1} of ${t}`)))):A.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Wr(e)}.`))}function Wr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Wr(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Vr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Gr=0;function Hr(){return Gr++}const jr={};function Xr(e=""){return e in jr||(jr[e]=0),jr[e]+=1,e+jr[e].toString()}const qr=["channelsFirst","channelsLast"],Kr=["nearest","bilinear"],Qr=["valid","same","causal"],Yr=["max","avg"],Jr=["sum","mul","concat","ave"],Zr=new Map;function ea(e){zr(qr,"DataFormat",e)}function ta(e){zr(Qr,"PaddingMode",e)}function na(e){zr(Yr,"PoolMode",e)}const sa=[],ra="/";function aa(e,t){sa.push(e);try{const e=t();return sa.pop(),e}catch(e){throw sa.pop(),e}}function ia(e){if(!ua(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===sa.length?"":sa.join(ra)+ra)+e}function oa(e){if(!ua(e))throw new Error("Not a valid tensor name: '"+e+"'");Zr.has(e)||Zr.set(e,0);const t=Zr.get(e);if(Zr.set(e,Zr.get(e)+1),t>0){const n=`${e}_${t}`;return Zr.set(n,1),n}return e}const la=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ua(e){return!!e.match(la)}function ca(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function ha(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function pa(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function da(e,t){if(t<e)throw new wr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let fa;function ma(){return null==fa&&(fa=(0,A.y3$)().epsilon()),fa}function ga(e,t){return A.pju(e,t)}function ya(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),A.XLQ(e,n)}function ba(e,t,n){return(0,A.lub)((()=>{switch(e.rank){case 1:return A.jZU(e,t,n);case 2:return A.SmN(e,[t,0],[n,e.shape[1]]);case 3:return A.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return A.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return A.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return A.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new wr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function xa(e,t,n){return(0,A.lub)((()=>{switch(e.rank){case 1:return A.jZU(e,t,n);case 2:return A.SmN(e,[0,t],[e.shape[0],n]);case 3:return A.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return A.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new wr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function wa(e,t,n,s){return(0,A.lub)((()=>{switch(e.rank){case 1:return A.jZU(e,t,n);case 2:switch(s){case 1:return ba(e,t,n);case 2:return xa(e,t,n);default:throw new wr(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ba(e,t,n);case 2:return A.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return xa(e,t,n);default:throw new wr(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ba(e,t,n);case 2:return A.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return A.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return xa(e,t,n);default:throw new wr(`The axis is not within the rank of the tensor ${s}`)}default:throw new wr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function va(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),A.zoF(e,t)}function ka(e,t){switch(e.rank){case 1:return A.gME([e,t]);case 2:return A.Izb([e,t],0);case 3:return A.MNy([e,t],0);case 4:return A.ZaL([e,t],0);default:throw new wr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ia(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new wr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return A.Gg6(e,t)}function Sa(e,t=0,n=1,s,r){return A.nGf(e,t,n,s,r)}function Na(e,t,n,s){if(e.rank<2||t.rank<2)throw new vr(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new vr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const r=!1,a=!1;return A.imm.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?Ea(e.rank,s,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),a=r.pop();e=A.XLQ(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=A.XLQ(A.p4s(t,c),[l,-1]);const h=[...r,...u],p=!1,d=!1;return A.XLQ(A.imm.matMul({a:e,b:t,transposeA:p,transposeB:d,bias:s?Ea(e.rank,s,"channelsLast"):null,activation:n}),h)}}function Ta(e,t,n){return(0,A.lub)((()=>(t=Array.isArray(t)?(0,A.RRF)(t,"int32"):A.pju(t,"int32"),A.Iqj(e,t,n))))}function Ca(e){return A.dC7(e,e)}function Ea(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new wr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?A.XLQ(t,[1,s[0],1,1,1]):A.XLQ(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?A.XLQ(t,[1,1,1,1,s[0]]):A.XLQ(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?A.XLQ(t,[1,s[0],1,1]):A.XLQ(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?A.XLQ(t,[1,1,1,s[0]]):A.XLQ(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?A.XLQ(t,[1,s[0],1]):A.XLQ(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?A.XLQ(t,[1,1,s[0]]):A.XLQ(t,[1].concat(s))}else if(e<3)return t;throw new wr(`Unsupported input rank by biasAdd: ${t.rank}`)}function $a(e,t,n){return(0,A.lub)((()=>(null==n&&(n="channelsLast"),ea(n),A.IHx(e,Ea(e.rank,t,n)))))}function Aa(e,t,n,s){return(0,A.lub)((()=>A.rvX(e,t,n,s)))}function Da(e,t,n=!1){return n?e():t()}const Ra=["fanIn","fanOut","fanAvg"],_a=["normal","uniform","truncatedNormal"];class Oa extends A.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Fa extends Oa{apply(e,t){return(0,A.lls)(e,t)}}Fa.className="Zeros",A.m7h.registerClass(Fa);class Ma extends Oa{apply(e,t){return(0,A.iUs)(e,t)}}Ma.className="Ones",A.m7h.registerClass(Ma);class Ba extends Oa{constructor(e){if(super(),"object"!=typeof e)throw new wr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new wr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,A.lub)((()=>(0,A.dC7)((0,A.iD$)(this.value),(0,A.iUs)(e,t))))}getConfig(){return{value:this.value}}}Ba.className="Constant",A.m7h.registerClass(Ba);class La extends Oa{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,A.LGj)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}La.className="RandomUniform",A.m7h.registerClass(La);class za extends Oa{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new vr(`randomNormal does not support dType ${t}.`);return Sa(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}za.className="RandomNormal",A.m7h.registerClass(za);class Pa extends Oa{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new vr(`truncatedNormal does not support dType ${t}.`);return(0,A.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pa.className="TruncatedNormal",A.m7h.registerClass(Pa);class Ua extends Oa{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,A.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new wr("Identity matrix initializer can only be used for 2D square matrices.");return(0,A.dC7)(this.gain,(0,A.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}Ua.className="Identity",A.m7h.registerClass(Ua);class Wa extends Oa{constructor(e){if(super(),e.scale<0)throw new wr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,zr(Ra,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){zr(_a,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(ea(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ca(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=ca(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=ca(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new vr(`${this.getClassName()} does not support dType ${t}.`);return(0,A.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return(0,A.LGj)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Wa.className="VarianceScaling",A.m7h.registerClass(Wa);class Va extends Wa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Va.className="GlorotUniform",A.m7h.registerClass(Va);class Ga extends Wa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Ga.className="GlorotNormal",A.m7h.registerClass(Ga);class Ha extends Wa{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Ha.className="HeNormal",A.m7h.registerClass(Ha);class ja extends Wa{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}ja.className="HeUniform",A.m7h.registerClass(ja);class Xa extends Wa{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}Xa.className="LeCunNormal",A.m7h.registerClass(Xa);class qa extends Wa{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Wa.className}}qa.className="LeCunUniform",A.m7h.registerClass(qa);class Ka extends Oa{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new vr("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,A.lub)((()=>{if(e.length<2)throw new vr("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Sa(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=A.$r2.gramSchmidt(t);return e[0]>e[1]&&(n=(0,A.p4s)(n)),(0,A.dC7)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ka.className="Orthogonal",A.m7h.registerClass(Ka);const Qa={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ya(e,t={}){return Fr(e,A.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function Ja(e){return _r(e)}function Za(e){if("string"==typeof e){const t=e in Qa?Qa[e]:e;if("GlorotNormal"===t)return new Ga;if("GlorotUniform"===t)return new Va;if("HeNormal"===t)return new Ha;if("HeUniform"===t)return new ja;if("LeCunNormal"===t)return new Xa;if("LeCunUniform"===t)return new qa;{const e={};return e.className=t,e.config={},Ya(e)}}return e instanceof Oa?e:Ya(e)}function ei(e){return Array.isArray(e)&&Array.isArray(e[0])}function ti(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function ni(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new wr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function si(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new wr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ri(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const ai="Variable";class ii{constructor(e,t="float32",n=ai,s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Hr(),n=null==n?ai:n,this.originalName=ia(n),this.name=oa(this.originalName),this.trainable_=s,this.constraint=r,this.val=A.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function oi(e){return e.map((e=>e.read()))}function li(e){e.forEach((e=>{e[0].write(e[1])}))}class ui{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ci{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Hr(),null!=a&&(this.originalName=ia(a),this.name=oa(this.originalName)),this.rank=t.length}}let hi=0;class pi{constructor(e,t){this.callArgs=t,this.id=hi++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let di=0;class fi extends A.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=di++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Ar(e)+"_"+Xr(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new xr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new wr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Er(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Er(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new br(`Layer ${this.name} is not connected, no input to return.`);return Er(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new br(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Er(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=$r(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=$r(this.inputSpec);if(e.length!==t.length)throw new wr(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new wr(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new wr(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new wr(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new wr(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new wr(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new wr(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=$r(e);let s=!0;for(const e of n)if(!(e instanceof ci)){s=!1;break}let r=!0;for(const e of n)if(e instanceof ci){r=!1;break}if(s===r)throw new wr("Arguments to apply() must be all SymbolicTensors or all Tensors");return aa(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of $r(e))t.push(n.shape);this.build(Er(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=$r(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=Er(a),null!=this.activityRegularizer)throw new vr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=$r(e);const t=[];for(const n of e)t.push(n.shape);return Er(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new ci(a,n,this,$r(e),t,this.name,s))):new ci(a,s,this,$r(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new vr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new br(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new br(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new xr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ri(this.weights)}build(e){this.built=!0}getWeights(e=!1){return oi(e?this.trainableWeights:this.weights)}setWeights(e){(0,A.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new wr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=oi(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!A.D5U.arraysEqual(a.shape,o.shape))throw new wr(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}li(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new wr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Za("zeros"));const l=s.apply(t,n),u=new ii(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=$r(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=$r(e);t=$r(t),n=$r(n),s=$r(s),r=ti(r),a=ti(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new pi({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function mi(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=mi(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class gi extends fi{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Xr("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new wr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new wr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new wr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new ci(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new pi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new wr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function yi(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new wr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new gi({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}gi.className="InputLayer",A.m7h.registerClass(gi);class bi{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bi)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new wr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,A.pju)(t,e.dtype)}catch(n){throw new wr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ci){if(null==this.id2Value[e.id])throw new wr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new wr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ci){if(null==this.id2Value[e.id])throw new wr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new wr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,A.B90)(this.id2Mask)}}const xi=new Sr,wi=new Sr;function vi(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=xi.get(c);if(null==p){const e=function(e,t){A.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=Ii(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Ii(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:ki(s)}}(i,t);p=e.sorted,h=e.recipientCounts,xi.put(c,p),wi.put(c,h)}h={},r||Object.assign(h,wi.get(c));const d=new bi(t);for(let e=0;e<p.length;++e){if(null!=s){const e=(0,A.sq6)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof gi)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),s=d.getMask(e);u.push(n),c.push(s),null!=s&&(m=!0),r||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=$r(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=Si(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||(0,A.B90)(f)}return d.disposeMasks(),a?l:l[0]}function ki(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ii(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Si(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Ni(e,t){return(0,A.lub)((()=>A._b3(A.Smz(A.dC7(e,e),t,!0))))}(0,A.OBj)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=xi&&xi.setMaxEntries(e),null!=wi&&wi.setMaxEntries(e)}));class Ti extends A.m7h.Serializable{getConfig(){return{}}}class Ci extends Ti{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,A.lub)((()=>{const t=Ni(e,this.axis),n=A.iUl(t,0,this.maxValue);return A.dC7(e,A.hiC(n,A.IHx(ma(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ci.className="MaxNorm",A.m7h.registerClass(Ci);class Ei extends Ti{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,A.lub)((()=>A.hiC(e,A.IHx(ma(),Ni(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ei.className="UnitNorm",A.m7h.registerClass(Ei);class $i extends Ti{apply(e){return A.UYe(e)}}$i.className="NonNeg",A.m7h.registerClass($i);class Ai extends Ti{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,A.lub)((()=>{const t=Ni(e,this.axis),n=A.IHx(A.dC7(this.rate,A.iUl(t,this.minValue,this.maxValue)),A.dC7(1-this.rate,t));return A.dC7(e,A.hiC(n,A.IHx(ma(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ai.className="MinMaxNorm",A.m7h.registerClass(Ai);const Di={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ri(e){return _r(e)}function _i(e,t={}){return Fr(e,A.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function Oi(e){return null==e?null:"string"==typeof e?_i({className:e in Di?Di[e]:e,config:{}}):e instanceof Ti?e:_i(e)}function Fi(e){return new Ci(e)}function Mi(e){return new Ei(e)}function Bi(){return new $i}function Li(e){return new Ai(e)}function zi(){return new Fa}function Pi(){return new Ma}function Ui(e){return new Ba(e)}function Wi(e){return new La(e)}function Vi(e){return new za(e)}function Gi(e){return new Pa(e)}function Hi(e){return new Ua(e)}function ji(e){return new Wa(e)}function Xi(e){return new Va(e)}function qi(e){return new Ga(e)}function Ki(e){return new Ha(e)}function Qi(e){return new ja(e)}function Yi(e){return new Xa(e)}function Ji(e){return new qa(e)}function Zi(e){return new Ka(e)}async function eo(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,A.B90)(s)}}function to(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var no;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(no||(no={}));class so{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ro{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class ao extends so{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=(0,A.lub)((()=>(0,A.IHx)(this.totals[e],(0,A.dC7)(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,A.lub)((()=>{const n=(0,A.dC7)((0,A.hiC)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,A.CnY)(t[e])})))}}class io extends so{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class oo extends so{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||A.glt,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");A.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():A.D5U.now();return(...a)=>{const i=null!=n?n():A.D5U.now();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await eo(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await eo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await eo(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await eo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await eo(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):A.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await eo(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await eo(e),await this.trainEnd(e))}}function lo(e,t){return null==e&&(e={}),e instanceof so?[e]:Array.isArray(e)&&e[0]instanceof so?e:$r(e).map((e=>new oo(e,t)))}class uo{constructor(){}static registerCallbackConstructor(e,t){A.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),uo.checkForDuplicate(t),null==uo.constructors[e]&&(uo.constructors[e]=[]),uo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in uo.constructors)uo.constructors[+t].forEach((t=>{if(t===e)throw new wr("Duplicate callback constructor.")}))}static clear(){uo.constructors={}}static createCallbacks(e){const t=[];for(const n in uo.constructors){const s=+n;e>=s&&t.push(...uo.constructors[s])}return t.map((e=>new e))}}function co(e,t,n,s,r,a,i,o,l){const u=new io,c=[new ao,...uo.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new ro(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function ho(e,t={},n=!1){return Fr(e,A.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}function po(e,t){return(0,A.lub)((()=>{"float32"!==e.dtype&&(e=A.pju(e,"float32"));const n=A.Smz(Ca(e),t,!0),s=A.hlL(n.shape,ma()),r=A._b3(A.gWQ(n,s));return A.hiC(e,r)}))}function fo(e,t){return(0,A.lub)((()=>A.J69(Ca(A.luU(t,e)),-1)))}function mo(e,t){return(0,A.lub)((()=>A.J69(A.WnP(A.luU(t,e)),-1)))}function go(e,t){return(0,A.lub)((()=>{const n=A.luU(e,t),s=A.iUl(A.WnP(e),ma(),Number.MAX_VALUE),r=A.WnP(A.hiC(n,s));return A.dC7(100,A.J69(r,-1))}))}function yo(e,t,n=!1){return(0,A.lub)((()=>{if(n)t=A.XAC(t);else{const e=A.Smz(t,t.shape.length-1,!0);t=A.hiC(t,e)}return t=A.iUl(t,ma(),1-ma()),A.W76(A.Smz(A.dC7(A.pju(e,"float32"),A.cM7(t)),t.shape.length-1))}))}function bo(e,t,n=!1){return(0,A.lub)((()=>{const s=A.pju(A.GWj(function(e){const t=[ca(e.shape)];return A.XLQ(e,t)}(e)),"int32"),r=(t=A.iUl(t,ma(),1-ma())).shape;return yo(A.XLQ(A.lfX(s,r[r.length-1]),r),t,n)}))}function xo(e,t){return(0,A.lub)((()=>{let n;return n=A.iUl(t,ma(),1-ma()),n=A.cM7(A.hiC(n,A.luU(1,n))),A.J69(function(e,t){if(!A.D5U.arraysEqual(e.shape,t.shape))throw new wr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,A.lub)((()=>{const n=A.UYe(t),s=A.W76(A.WnP(t));return A.IHx(A.luU(n,A.dC7(t,e)),A.Krr(A.Qqt(s)))}))}(e,n),-1)}))}function wo(e,t){return(0,A.lub)((()=>{const n=po(e,-1),s=po(t,-1),r=A.dC7(n,s);return A.W76(A.Smz(r,-1))}))}uo.constructors={};const vo={meanSquaredError:fo,meanAbsoluteError:mo,meanAbsolutePercentageError:go,meanSquaredLogarithmicError:function(e,t){return(0,A.lub)((()=>{const n=A.iUl(t,ma(),Number.MAX_VALUE),s=A.cM7(A.IHx(1,n)),r=A.iUl(e,ma(),Number.MAX_VALUE),a=A.cM7(A.IHx(1,r));return A.J69(Ca(A.luU(s,a)),-1)}))},squaredHinge:function(e,t){return(0,A.lub)((()=>{const n=A.gWQ(0,A.luU(1,A.dC7(e,t)));return A.J69(Ca(n),-1)}))},hinge:function(e,t){return(0,A.lub)((()=>{const n=A.gWQ(0,A.luU(1,A.dC7(e,t)));return A.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,A.lub)((()=>{const n=A.Smz(A.dC7(e,t),-1),s=A.Fp7(A.dC7(A.luU(1,e),t),-1);return A.gWQ(0,A.IHx(1,A.luU(s,n)))}))},logcosh:function(e,t){return(0,A.lub)((()=>{const n=Math.log(2),s=A.luU(t,e),r=A.luU(A.IHx(s,A.Wvh(A.dC7(-2,s))),n);return A.J69(r,-1)}))},categoricalCrossentropy:yo,sparseCategoricalCrossentropy:bo,binaryCrossentropy:xo,kullbackLeiblerDivergence:function(e,t){return(0,A.lub)((()=>{const n=A.iUl(e,ma(),1),s=A.iUl(t,ma(),1);return A.Smz(A.dC7(e,A.cM7(A.hiC(n,s))),-1)}))},poisson:function(e,t){return(0,A.lub)((()=>{const n=A.cM7(A.IHx(ma(),t));return A.J69(A.luU(t,A.dC7(e,n)),-1)}))},cosineProximity:wo};function ko(e){if("string"==typeof e){if(e in vo)return vo[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new wr(t)}return e}function Io(e,t){return(0,A.lub)((()=>{const n=A.dC7(.5,A.JpU(t)),s=ga(A.pjt(t,n),e.dtype);return A.J69(A.DgJ(e,s),-1)}))}function So(e,t){return(0,A.lub)((()=>ga(A.DgJ(A.NqF(e,-1),A.NqF(t,-1)),"float32")))}function No(e,t){return(0,A.lub)((()=>A.pju(A.Smz(A.HvI(A.DgJ(e,1),A.DgJ(t,1))),"float32")))}function To(e,t){return(0,A.lub)((()=>{const n=No(e,t),s=function(e,t){return(0,A.lub)((()=>A.pju(A.Smz(A.HvI(A.DgJ(e,0),A.DgJ(t,1))),"float32")))}(e,t),r=A.IHx(n,s);return A.pju(A.arb(A.pjt(r,0),A.hiC(n,r),0),"float32")}))}function Co(e,t){return xo(e,t)}function Eo(e,t){return e.rank===t.rank&&(e=A.L9e(e,[e.rank-1])),(t=A.NqF(t,-1)).dtype!==e.dtype&&(t=A.pju(t,e.dtype)),A.pju(A.DgJ(e,t),"float32")}const $o=yo,Ao=bo,Do={binaryAccuracy:Io,categoricalAccuracy:So,precision:To,categoricalCrossentropy:$o,sparseCategoricalCrossentropy:Ao,mse:fo,MSE:fo,mae:mo,MAE:mo,mape:go,MAPE:go,cosine:wo};function Ro(e){if("string"==typeof e&&e in Do)return Do[e];if("string"!=typeof e&&null!=e)return e;throw new wr(`Unknown metric ${e}`)}function _o(e){if(Tr(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(vo))if(vo[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Do))if(Do[n]===e){t=n;break}return void 0!==t?t:e.name}}const Oo=1048576;function Fo(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Mo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Oo&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Oo}.`)}}function Mo(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Mo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Mo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Bo(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function Lo(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}Bo([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function zo(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${s}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Bo([`${o} (${l})`,a,r,e.countParams().toString(),u],t,s);for(let e=1;e<i.length;++e)Bo(["","","","",i[e]],t,s)}function Po(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Uo(e,t){if(null===e)return null;if("string"==typeof e)return Dr(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Po(t,r,s)?n.push(s):n.push(Uo(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=Dr(n);t[e]=Uo(s,e)}}return t}}function Wo(e,t){if(null==e)return null;if("string"==typeof e)return Ar(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Po(t,r,s)?n.push(s):n.push(Wo(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[Ar(n)]="name"!==n&&"className"!==n||"string"!=typeof s?Wo(s,n):s}return t}}const Vo="4.2.0";class Go extends fi{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Xr(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Br(this.inputs).length!==this.inputs.length)throw new wr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Br(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;Tr(0===n,"input layer has >1 nodes"),Tr(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof gi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new xr(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Go.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const p={};for(const e in s){const t=s[e];t in p||(p[t]=[]),p[t].push(r[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(Mr);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof Go&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(Mr);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new xr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new xr(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new pi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new wr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new wr(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new wr(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new wr(`${e.length} of ${s} weights are not set: ${e}`)}li(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Vo}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Wo(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,A.lub)((()=>{e=$r(e);const n=new bi;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return vi(this.outputs,n,t)}))}computeMask(e,t){return(0,A.lub)((()=>{let n;return e=$r(e),n=null==t?Nr(null,e.length):$r(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=ti(e);if(t.length!==this.inputLayers.length)throw new wr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Mr);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=ti(t.computeOutputShape(Er(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];Tr(t in n),r.push(n[t])}return Er(r)}runInternalGraph(e,t){null==t&&(t=Nr(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Mr);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=$r(t.call(e,u)),l=$r(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=$r(t.call(s,u)),l=$r(t.computeMask(s,i));if(t.activityRegularizer)throw new vr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){Tr(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Go?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=Go.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new wr(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new wr("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new wr(`No such layer: ${e}`)}calculateLosses(){return(0,A.lub)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Go.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=Go.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[Go.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=Go.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=Go.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Er(n),s)}function l(e){const n=e.name,a=ho(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new wr(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Lr(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],s=e[2];Tr(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];Tr(t in r);const a=r[t].inboundNodes[n].outputTensors;p.push(a[s])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new wr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,A.lub)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Ho(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function jo(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,A.lub)((()=>{if(1===e.shape.length)return(0,A.d9v)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,A.NqF)(e,t)}if(1===e.shape[1])return(0,A.XLQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,A.B90)(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),(0,A.RRF)(r,"float32")}return null}function Xo(e,t){return(0,A.dC7)(e,t)}const qo=32;function Ko(e,t){let n,s;const r=t;n=r.xs,s=r.ys,A.D5U.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Qo("input",e.inputNames,n),i=Qo("output",e.outputNames,s),o=a[0].shape[0];A.D5U.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),A.D5U.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)A.D5U.assert(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)A.D5U.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Qo(e,t,n){if(n instanceof A.esB)return[n];if(Array.isArray(n))return A.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new wr(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Yo(e){return"function"==typeof e.iterator}function Jo(e){A.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Zo(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ba(e,t,n-t))):ba(e,t,n-t)}function el(e,t){return A.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>el(e,t))):Ta(e,"int32"===t.dtype?t:A.pju(t,"int32"))))}function tl(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function nl(e){const t=[];e instanceof A.esB&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(ya(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function sl(e,t){if(null==e)return;const n=[];if(t instanceof A.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof A.esB)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function rl(e){return Array.isArray(e)}function al(e){return!function(e){return e instanceof A.esB}(e)&&!rl(e)}function il(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(rl(e)&&e.length>0)t=!0;else if(al(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new wr(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(al(e)){a=[];for(const n of t){if(null==e[n])throw new wr(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(rl(e)){if(e.length!==t.length)throw new wr(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new wr(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=nl(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new wr(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new wr(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function ol(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new wr(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new wr(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new wr(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new wr(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class ll extends Go{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new wr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),Bo(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?Lo(o[e],n,s):zo(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?ri(e.collectedTrainableWeights):ri(e.trainableWeights),t}(e),u=ri(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>A.p_j.adagrad(.01),Adadelta:()=>A.p_j.adadelta(1,.95,ma()),Adam:()=>A.p_j.adam(.001,.9,.999,ma()),Adamax:()=>A.p_j.adamax(.002,.9,.999,ma(),0),RMSProp:()=>A.p_j.rmsprop(.001,.9,0,ma()),SGD:()=>A.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new wr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof A.gaJ))throw new wr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new wr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>ko(e)))}else{const n=ko(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new wr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(ko(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],aa("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};aa("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===xo?-1!==["accuracy","acc"].indexOf(i)?s=Io:-1!==["crossentropy","ce"].indexOf(i)&&(s=Co):this.lossFunctions[e]===bo?-1!==["accuracy","acc"].indexOf(i)?s=Eo:-1!==["crossentropy","ce"].indexOf(i)&&(s=Ao):-1!==["accuracy","acc"].indexOf(i)?s=So:-1!==["crossentropy","ce"].indexOf(i)&&(s=$o),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=Ro(i);a=e,n=""+_o(i)}let t;aa(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Jo(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return Er(this.testLoop(t,e,s,n.verbose,n.steps))}finally{sl(r[0],e),sl(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new vr("Verbose mode is not implemented yet.");A.D5U.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=A.lub((()=>{if(t.value){const{xs:n,ys:s}=Ko(e,t.value),i=n.concat(s),u=A.lub((()=>r(i)));if(A.B90(i),0===l)for(let e=0;e<u.length;++e)a.push((0,A.iD$)(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=A.lub((()=>A.IHx(a[e],A.dC7(c,t)))),l>0&&A.B90(n)}A.B90(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=A.hiC(a[e],o),A.B90(t)}return Er(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new wr(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new wr(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new wr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new bi;if(e instanceof A.esB&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new wr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new wr(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=vi(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Nr(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new wr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return A.lub((()=>{const s=this.checkNumSamples(e);if(n)throw new vr("Verbose predictLoop() is not implemented yet.");const r=tl(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)A.lub((()=>{const n=r[t][0],s=r[t][1],a=Zo(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new bi(i);return vi(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Er(a.map((e=>A.zoF(e,0))))}))}predict(e,t={}){const n=nl(e);ol(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Jo(e),this.predictLoop(n,e)}finally{sl(n,e)}}predictOnBatch(e){ol(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new xr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===bo?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=Br(e.map((e=>e.shape[0])));s.sort();const r=Br(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new wr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new wr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!A.D5U.arraysEqual(s,r))throw new wr(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=il(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=il(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[fo,xo,yo];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===yo&&1===a.shape[a.shape.length-1])throw new wr(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new wr(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new wr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=Ho(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await jo(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return A.lub((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new vr("Verbose mode is not implemented yet.");if(null!=r)throw new vr("steps mode in testLoop() is not implemented yet");{const s=tl(a,n),r=(0,A.RRF)(da(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=ba(r,a,o-a),u=el(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push((0,A.iD$)(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=A.IHx(i[e],A.dC7(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=A.hiC(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;Cr(e,s)>1&&(r+=`_${Cr(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new bi(e),o=vi(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=Xo(n,r[e]));const a=A.J69(n);t.push(a),l=0===e?n:A.IHx(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=A.J69(t(s[r],o[r]))}A.CnY(n),a.push(n)}return l=A.J69(l),this.calculateLosses().forEach((e=>{l=A.IHx(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>A.lub((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new bi(a),o=vi(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=A.J69(s(r[e],o[e]));n=0===e?a:A.IHx(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=A.J69(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,a,i,o,l,u,c,h;this.isTraining=!0;try{const p=null==n.batchSize?32:n.batchSize;Jo(p);const d=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,d,p);s=f[0],r=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new vr("validationData including sample weights is not supported yet."):new wr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,p);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];u=Zo(s,e,t),a=s,s=Zo(s,0,e),c=Zo(r,e,t),i=r,r=Zo(r,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const y=s.concat(r).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const k=lo(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,p,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,sl(s,e),sl(r,t),sl(a,e),sl(i,t),sl(u,o),sl(c,l),null!=h&&A.B90(h)}}async fitLoop(e,t,n,s,r,a,i,o,l,u,c,h,p,d){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=d&&(f=!0,null==p))throw new wr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,s,p,"steps_per_epoch");let g;null!=m&&(g=da(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=co(i,a,r,h,m,p,s,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<r;++a){await y.onEpochBegin(a);const r={};if(null!=p)throw new vr("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new vr("batch shuffling is not implemneted yet");u&&A.D5U.shuffle(g);const a=(0,A.RRF)(g),i=tl(m,s);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),A.lub((()=>{const h=i[u][0],p=i[u][1],d=ba(a,h,p-h);c.batch=u,c.size=p-h;const m=el(t,d),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],s=g[e];c[t]=s,A.CnY(s)}if(u===i.length-1&&f){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],a=e[t];A.CnY(a),r["val_"+s]=a}}})),await y.onBatchEnd(u,c),to(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(A.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),A.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),A.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),A.D5U.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),A.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Yo(n.validationData))A.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new vr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=lo(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=co(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=Ko(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Ho(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await jo(r[e],null,t[e]))}const u=s.concat(r).concat(i),d=o(u);A.B90(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,A.CnY(n)}await p.onBatchEnd(h,a),to(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Yo(n.validationData)?$r(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):$r(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?qo:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return A.B90(a),sl(n[0],e),sl(n[1],t),Er(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=A.sq6().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-A.sq6().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ar(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ar(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=Ar(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ar(_o(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ar(_o(e))));{const e={};for(const t in this.metrics)e[t]=Ar(_o(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ho(Uo(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=Dr(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Dr(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Dr(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>Dr(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=Dr(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=A.io.getSaveHandlers(e);if(0===t.length)throw new wr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new wr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new wr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await A.io.encodeWeights(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Vo}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await A.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=A.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Fo(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){Fo(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ll.className="Model",A.m7h.registerClass(ll);class ul extends ll{}async function cl(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const s=ho(Uo(n),t);if(null!=e.weightsManifest){const t=await A.io.loadWeights(e.weightsManifest,e.pathPrefix,s.weights.map((e=>e.originalName))),n={};for(const e of s.weights)n[e.originalName]=t[e.originalName];s.loadWeights(n),(0,A.B90)(t)}return s}async function hl(e,t){if(null==t&&(t={}),"string"==typeof e){const n=A.io.getLoadHandlers(e,t);if(0===n.length)n.push(A.io.browserHTTPRequest(e,t));else if(n.length>1)throw new wr(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new wr("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=ho(Uo(r),void 0,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new wr("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=A.io.decodeWeights(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),(0,A.B90)(e),(0,A.B90)(t.map((e=>e.tensor)))}return o}(e,0,t)}ul.className="Functional",A.m7h.registerClass(ul);class pl extends ll{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Xr("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new wr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof pl||e instanceof ll;let n;if(t){if(n=e,1!==n.outputs.length)throw new wr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new wr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new wr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=yi({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new wr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new wr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=mi(this.outputs[0])}this.inboundNodes=[],new pi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Nr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(si(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ll({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new xr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new xr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new xr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new xr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new wr("Legacy serialization format not supported yet.");r=t}else A.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof pl))throw new vr(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=ho(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new wr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new wr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function dl(e){return new ll(e)}function fl(e){return new pl(e)}function ml(e){return yi(e)}function gl(e,t){uo.registerCallbackConstructor(e,t)}pl.className="Sequential",A.m7h.registerClass(pl);class yl extends A.m7h.Serializable{getConfig(){return{}}}class bl extends yl{apply(e,t=1){return function(e,t=1){if(1!==t)throw new vr(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return A.pyx(e)}(e,t)}}bl.className="elu",A.m7h.registerClass(bl);class xl extends yl{apply(e){return A.U8D(e)}}xl.className="selu",A.m7h.registerClass(xl);class wl extends yl{apply(e){return A.UYe(e)}}wl.className="relu",A.m7h.registerClass(wl);class vl extends yl{apply(e){return(0,A.lub)((()=>A.LTh(6,A.UYe(e))))}}vl.className="relu6",A.m7h.registerClass(vl);class kl extends yl{apply(e){return e}}kl.className="linear",A.m7h.registerClass(kl);class Il extends yl{apply(e){return A.XD2(e)}}Il.className="sigmoid",A.m7h.registerClass(Il);class Sl extends yl{apply(e){return function(e){return(0,A.lub)((()=>{const t=A.IHx(.5,A.dC7(.2,e));return A.iUl(t,0,1)}))}(e)}}Sl.className="hardSigmoid",A.m7h.registerClass(Sl);class Nl extends yl{apply(e){return A.Wvh(e)}}Nl.className="softplus",A.m7h.registerClass(Nl);class Tl extends yl{apply(e){return function(e){return(0,A.lub)((()=>A.hiC(e,A.IHx(A.WnP(e),1))))}(e)}}Tl.className="softsign",A.m7h.registerClass(Tl);class Cl extends yl{apply(e){return A.AEp(e)}}Cl.className="tanh",A.m7h.registerClass(Cl);class El extends yl{apply(e,t=-1){return A.XAC(e,t)}}El.className="softmax",A.m7h.registerClass(El);class $l extends yl{apply(e,t=-1){return A.CmS(e,t)}}$l.className="logSoftmax",A.m7h.registerClass($l);class Al extends yl{apply(e,t=1){return(0,A.lub)((()=>A.dC7(A.XD2(A.dC7(e,t)),e)))}}Al.className="swish",A.m7h.registerClass(Al);class Dl extends yl{apply(e){return(0,A.lub)((()=>A.dC7(e,A.AEp(A.Wvh(e)))))}}function Rl(e){return e.getClassName()}function _l(e,t={}){return Fr(e,A.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function Ol(e){if(null==e){return _l({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},_l(t)}return e instanceof yl?e:_l(e)}function Fl(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Dl.className="mish",A.m7h.registerClass(Dl);class Ml extends A.m7h.Serializable{}class Bl extends Ml{constructor(e){super(),Fl(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,A.lub)((()=>{let t=(0,A.lls)([1]);return this.hasL1&&(t=(0,A.IHx)(t,(0,A.Smz)(A.dC7(this.l1,(0,A.WnP)(e))))),this.hasL2&&(t=(0,A.IHx)(t,(0,A.Smz)(A.dC7(this.l2,Ca(e))))),A.XLQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Bl.className="L1L2",A.m7h.registerClass(Bl);const Ll={l1l2:"L1L2"};function zl(e){return _r(e)}function Pl(e,t={}){return Fr(e,A.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ul(e){return null==e?null:"string"==typeof e?Pl({className:e in Ll?Ll[e]:e,config:{}}):e instanceof Ml?e:Pl(e)}class Wl extends fi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=ni(e);let n=(0,A.UYe)(e);return null!=this.maxValue&&(n=(0,A.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Wl.className="ReLU",A.m7h.registerClass(Wl);class Vl extends fi{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ni(e);return(0,A.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Vl.className="LeakyReLU",A.m7h.registerClass(Vl);class Gl extends fi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Za(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ul(e.alphaRegularizer),this.alphaConstraint=Oi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new wr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=si(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new ui({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=ni(e),(0,A.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ja(this.alphaInitializer),alphaRegularizer:zl(this.alphaRegularizer),alphaConstraint:Ri(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Gl.className="PReLU",A.m7h.registerClass(Gl);class Hl extends fi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new vr(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ni(e);return(0,A.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Hl.className="ELU",A.m7h.registerClass(Hl);class jl extends fi{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=ni(e);return(0,A.dC7)(n,(0,A.pju)((0,A.pjt)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}jl.className="ThresholdedReLU",A.m7h.registerClass(jl);class Xl extends fi{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new El).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=ni(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ql(e,t,n){if("number"==typeof e)return Nr(e,t);if(e.length!==t)throw new wr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new wr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function Kl(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Ql(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+pa([n-t,0]);else{if("same"!==s)throw new wr(`Unsupport padding mode: ${s}.`);e*=t}return e}function Yl(e,t){return(0,A.lub)((()=>(ea(t),"channelsFirst"===t?A.p4s(e,[0,2,3,1]):e)))}function Jl(e,t){return(0,A.lub)((()=>(ea(t),"channelsFirst"===t?A.p4s(e,[0,2,3,4,1]):e)))}function Zl(e,t,n,s=[1,1],r="valid",a,i,o=null){return(0,A.lub)((()=>{if(null==a&&(a="channelsLast"),ea(a),3!==e.rank&&4!==e.rank)throw new wr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new wr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Yl(e,a);if("causal"===r)throw new vr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=A.imm.conv2d({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=A.p4s(l,[0,3,1,2])),l}))}Xl.className="Softmax",A.m7h.registerClass(Xl);class eu extends fi{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",eu.verifyArgs(t),this.rank=e,Ur(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new vr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ql(t.kernelSize,e,"kernelSize"),this.strides=ql(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,ta(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ea(this.dataFormat),this.activation=Ol(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Za(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Oi(t.biasConstraint),this.biasRegularizer=Ul(t.biasRegularizer),this.activityRegularizer=Ul(t.activityRegularizer),this.dilationRate=ql(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new wr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new wr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new wr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Tr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Pr(e.kernelSize,"number",1,3))throw new wr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Rl(this.activation),useBias:this.useBias,biasInitializer:Ja(this.biasInitializer),biasRegularizer:zl(this.biasRegularizer),activityRegularizer:zl(this.activityRegularizer),biasConstraint:Ri(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class tu extends eu{constructor(e,t){super(e,t),this.kernel=null,tu.verifyArgs(t),this.filters=t.filters,Ur(this.filters,"filters"),this.kernelInitializer=Za(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Oi(t.kernelConstraint),this.kernelRegularizer=Ul(t.kernelRegularizer)}build(e){e=si(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,A.lub)((()=>{let t;e=ni(e);const n=null==this.bias?null:this.bias.read(),s=Vr(this.activation.getClassName());if(null!=s&&2===this.rank)t=Zl(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return(0,A.lub)((()=>{if(null==a&&(a="channelsLast"),ea(a),3!==e.shape.length)throw new wr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new wr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new wr(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=A.p4s(e,[0,2,1])),"causal"===r)throw new vr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=A.PAt(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=$a(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Zl(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new vr("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return(0,A.lub)((()=>{if(null==a&&(a="channelsLast"),ea(a),4!==e.rank&&5!==e.rank)throw new wr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new wr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Jl(e,a);if("causal"===r)throw new vr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=A.pdZ(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=$a(o,n)),"channelsFirst"===a&&(o=A.p4s(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=si(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=Kl(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Ja(this.kernelInitializer),kernelRegularizer:zl(this.kernelRegularizer),kernelConstraint:Ri(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new wr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class nu extends tu{constructor(e){super(2,e),nu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Pr(e.kernelSize,"number",1,2))throw new wr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}nu.className="Conv2D",A.m7h.registerClass(nu);class su extends tu{constructor(e){super(3,e),su.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new wr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}su.className="Conv3D",A.m7h.registerClass(su);class ru extends nu{constructor(e){if(super(e),this.inputSpec=[new ui({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new wr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=si(e)).length)throw new wr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ui({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return A.lub((()=>{let t=ni(e);if(4!==t.shape.length)throw new wr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,Ql(i,c,l,this.padding),Ql(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=A.p4s(t,[0,2,3,1]));let d=A.bc(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=A.p4s(d,[0,3,1,2])),null!=this.bias&&(d=$a(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=si(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Ql(t[s],o,a,this.padding),t[r]=Ql(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ru.className="Conv2DTranspose",A.m7h.registerClass(ru);class au extends su{constructor(e){if(super(e),this.inputSpec=[new ui({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new wr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=si(e)).length)throw new wr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ui({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return A.lub((()=>{let t=ni(e);if(5!==t.shape.length)throw new wr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,Ql(o,d,c,this.padding),Ql(l,f,h,this.padding),Ql(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=A.p4s(t,[0,2,3,4,1]));let y=A.$QV(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=A.p4s(y,[0,4,1,2,3])),null!==this.bias&&(y=$a(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=si(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Ql(t[s],u,i,this.padding),t[r]=Ql(t[r],c,o,this.padding),t[a]=Ql(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}au.className="Conv3DTranspose",A.m7h.registerClass(au);class iu extends tu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new wr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new wr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new wr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Za(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ul(t.depthwiseRegularizer),this.depthwiseConstraint=Oi(t.depthwiseConstraint),this.pointwiseInitializer=Za(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ul(t.pointwiseRegularizer),this.pointwiseConstraint=Oi(t.pointwiseConstraint)}build(e){if((e=si(e)).length<this.rank+2)throw new wr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new wr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new ui({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,A.lub)((()=>{let t;if(e=ni(e),1===this.rank)throw new vr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=A.p4s(e,[0,2,3,1])),t=A.U_I(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=$a(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=A.p4s(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ja(this.depthwiseInitializer),e.pointwiseInitializer=Ja(this.pointwiseInitializer),e.depthwiseRegularizer=zl(this.depthwiseRegularizer),e.pointwiseRegularizer=zl(this.pointwiseRegularizer),e.depthwiseConstraint=Ri(this.depthwiseConstraint),e.pointwiseConstraint=Ri(this.pointwiseConstraint),e}}iu.className="SeparableConv";class ou extends iu{constructor(e){super(2,e)}}ou.className="SeparableConv2D",A.m7h.registerClass(ou);class lu extends tu{constructor(e){super(1,e),lu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Pr(e.kernelSize,"number",1,1))throw new wr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}lu.className="Conv1D",A.m7h.registerClass(lu);class uu extends fi{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,A.lub)((()=>{if(e=ni(e),"channelsLast"===this.dataFormat){const t=wa(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wa(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=wa(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wa(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}uu.className="Cropping2D",A.m7h.registerClass(uu);class cu extends fi{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ea(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,zr(Kr,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return A.lub((()=>{let t=ni(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=A.p4s(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?A.BHj.resizeNearestNeighbor(t,[e,s]):A.BHj.resizeBilinear(t,[e,s]);return A.p4s(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?A.BHj.resizeNearestNeighbor(t,[e,s]):A.BHj.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}cu.className="UpSampling2D",A.m7h.registerClass(cu);class hu extends eu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Za(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Oi(e.depthwiseConstraint),this.depthwiseRegularizer=Ul(e.depthwiseRegularizer)}build(e){if((e=si(e)).length<4)throw new wr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new wr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,A.lub)((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return(0,A.lub)((()=>{null==r&&(r="channelsLast"),ea(r);let i=Yl(e,r);if(4!==e.rank)throw new wr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new wr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=A.B10(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=A.p4s(i,[0,3,1,2])),i}))}(e=ni(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=$a(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=si(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Kl(t,this.kernelSize[0],this.padding,this.strides[0]),a=Kl(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ja(this.depthwiseInitializer),e.depthwiseRegularizer=zl(this.depthwiseRegularizer),e.depthwiseConstraint=Ri(this.depthwiseRegularizer),e}}function pu(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new wr("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function du(e,t,n,s=!1,r,a,i=!1,o=!1){return A.lub((()=>{const l=t.shape.length;if(l<3)throw new wr(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(da(2,l));if(t=A.p4s(t,u),null!=a)throw new vr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=A.pju(A.pju(r,"bool"),"float32")).rank===l-1&&(r=A.dt4(r,-1)),r=A.p4s(r,u)),s&&(t=A.GYS(t,0),null!=r&&(r=A.GYS(r,0)));const c=[];let h,p=n;const d=t.shape[0],f=A.HHK(t);let m,g;null!=r&&(m=A.HHK(r));for(let t=0;t<d;++t){const n=f[t],s=A.lub((()=>e(n,p)));if(null==r)h=s[0],p=s[1];else{const e=A.lub((()=>{const e=m[t],n=A.luU(A.JpU(e),e);return{output:A.IHx(A.dC7(s[0],e),A.dC7(p[0],n)),newStates:p.map(((t,r)=>A.IHx(A.dC7(s[1][r],e),A.dC7(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}if(o){const e=1;g=A.knu(c,e)}return[h,g,p]}))}hu.className="DepthwiseConv2D",A.m7h.registerClass(hu);class fu extends fi{constructor(e){let t;if(super(e),null==e.cell)throw new wr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new ku({cells:e.cell}):e.cell,null==t.stateSize)throw new wr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ui({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?da(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){ei(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return A.lub((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new vr("Constants support is not implemented in RNN yet.");ei(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ui({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!A.D5U.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new wr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new ui({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,A.lub)((()=>{if(!this.stateful)throw new br("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new wr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>A.lls([n,e]))):this.states_=[A.lls([n,this.cell.stateSize])];else if(null==e)A.B90(this.states_),null!=this.keptStates&&(A.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>A.lls([n,e]))):this.states_[0]=A.lls([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new wr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):A.B90(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!A.D5U.arraysEqual(s.shape,a))throw new wr(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>A.CnY(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=pu(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new ui({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof ci){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,A.lub)((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=ni(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new wr(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=du(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return(0,A.lub)((()=>{let t=A.lls(e.shape);return t=A.Smz(t,[1,2]),t=ya(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ia(t,[1,e]):t)):this.cell.stateSize>1?[Ia(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===fu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=ho(t.cell,n);return new e(Object.assign(t,{cell:s}))}}fu.className="RNN",A.m7h.registerClass(fu);class mu extends fi{}class gu extends mu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ur(this.units,"units"),this.activation=Ol(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Za(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Za(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Za(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ul(e.kernelRegularizer),this.recurrentRegularizer=Ul(e.recurrentRegularizer),this.biasRegularizer=Ul(e.biasRegularizer),this.kernelConstraint=Oi(e.kernelConstraint),this.recurrentConstraint=Oi(e.recurrentConstraint),this.biasConstraint=Oi(e.biasConstraint),this.dropout=ha([1,pa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ha([1,pa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=si(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,A.lub)((()=>{if(2!==e.length)throw new wr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iu({ones:()=>A.JpU(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iu({ones:()=>A.JpU(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Na(null!=a?A.dC7(e,a):e,this.kernel.read()),null!=this.bias&&(r=$a(r,this.bias.read())),null!=i&&(n=A.dC7(n,i));let o=A.IHx(r,Na(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Rl(this.activation),useBias:this.useBias,kernelInitializer:Ja(this.kernelInitializer),recurrentInitializer:Ja(this.recurrentInitializer),biasInitializer:Ja(this.biasInitializer),kernelRegularizer:zl(this.kernelRegularizer),recurrentRegularizer:zl(this.recurrentRegularizer),biasRegularizer:zl(this.biasRegularizer),activityRegularizer:zl(this.activityRegularizer),kernelConstraint:Ri(this.kernelConstraint),recurrentConstraint:Ri(this.recurrentConstraint),biasConstraint:Ri(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}gu.className="SimpleRNNCell",A.m7h.registerClass(gu);class yu extends fu{constructor(e){e.cell=new gu(e),super(e)}call(e,t){return(0,A.lub)((()=>{null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}yu.className="SimpleRNN",A.m7h.registerClass(yu);class bu extends mu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new wr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ur(this.units,"units"),this.activation=Ol(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ol(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Za(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Za(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Za(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ul(e.kernelRegularizer),this.recurrentRegularizer=Ul(e.recurrentRegularizer),this.biasRegularizer=Ul(e.biasRegularizer),this.kernelConstraint=Oi(e.kernelConstraint),this.recurrentConstraint=Oi(e.recurrentConstraint),this.biasConstraint=Oi(e.biasConstraint),this.dropout=ha([1,pa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ha([1,pa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=si(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,A.lub)((()=>{if(2!==e.length)throw new wr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iu({ones:()=>A.JpU(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iu({ones:()=>A.JpU(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=A.dC7(e,r[0]));let u=Na(e,this.kernel.read());this.useBias&&(u=$a(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=A.dC7(s,a[0]));const c=this.recurrentKernel.read(),[h,p]=A.Vl2(c,[2*this.units,this.units],c.rank-1),d=Na(s,h),[f,m,g]=A.Vl2(u,3,u.rank-1),[y,b]=A.Vl2(d,2,d.rank-1);i=this.recurrentActivation.apply(A.IHx(f,y)),o=this.recurrentActivation.apply(A.IHx(m,b));const x=Na(A.dC7(o,s),p);l=this.activation.apply(A.IHx(g,x));const w=A.IHx(A.dC7(i,s),A.dC7(A.IHx(1,A.W76(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Rl(this.activation),recurrentActivation:Rl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ja(this.kernelInitializer),recurrentInitializer:Ja(this.recurrentInitializer),biasInitializer:Ja(this.biasInitializer),kernelRegularizer:zl(this.kernelRegularizer),recurrentRegularizer:zl(this.recurrentRegularizer),biasRegularizer:zl(this.biasRegularizer),activityRegularizer:zl(this.activityRegularizer),kernelConstraint:Ri(this.kernelConstraint),recurrentConstraint:Ri(this.recurrentConstraint),biasConstraint:Ri(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}bu.className="GRUCell",A.m7h.registerClass(bu);class xu extends fu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new bu(e),super(e)}call(e,t){return(0,A.lub)((()=>{null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}xu.className="GRU",A.m7h.registerClass(xu);class wu extends mu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ur(this.units,"units"),this.activation=Ol(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ol(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Za(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Za(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Za(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ul(e.kernelRegularizer),this.recurrentRegularizer=Ul(e.recurrentRegularizer),this.biasRegularizer=Ul(e.biasRegularizer),this.kernelConstraint=Oi(e.kernelConstraint),this.recurrentConstraint=Oi(e.recurrentConstraint),this.biasConstraint=Oi(e.biasConstraint),this.dropout=ha([1,pa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ha([1,pa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=si(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends Oa{apply(t,s){const r=e.apply([n]),a=(new Ma).apply([n]),i=e.apply([2*n]);return ka(ka(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,A.lub)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new wr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iu({ones:()=>A.JpU(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iu({ones:()=>A.JpU(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=A.dC7(e,a[0]));let h=Na(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=A.dC7(s,i[0])),h=A.IHx(h,Na(s,this.recurrentKernel.read())),this.useBias&&(h=$a(h,this.bias.read()));const[p,d,f,m]=A.Vl2(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=A.IHx(A.dC7(l,r),A.dC7(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=A.dC7(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Rl(this.activation),recurrentActivation:Rl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ja(this.kernelInitializer),recurrentInitializer:Ja(this.recurrentInitializer),biasInitializer:Ja(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:zl(this.kernelRegularizer),recurrentRegularizer:zl(this.recurrentRegularizer),biasRegularizer:zl(this.biasRegularizer),activityRegularizer:zl(this.activityRegularizer),kernelConstraint:Ri(this.kernelConstraint),recurrentConstraint:Ri(this.recurrentConstraint),biasConstraint:Ri(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}wu.className="LSTMCell",A.m7h.registerClass(wu);class vu extends fu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wu(e),super(e)}call(e,t){return(0,A.lub)((()=>{null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}vu.className="LSTM",A.m7h.registerClass(vu);class ku extends mu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,A.lub)((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;ei(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{aa(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(ho(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return oi(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}li(t)}}function Iu(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Aa(t(),n),o=()=>Da(i,t,s);return!r||r<=1?A.CnY(o().clone()):Array(r).fill(void 0).map(o).map((e=>A.CnY(e.clone())))}ku.className="StackedRNNCells",A.m7h.registerClass(ku);class Su extends fu{constructor(e){if(e.unroll)throw new vr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new vr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ui({ndim:5})]}call(e,t){return A.lub((()=>{if(null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new wr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return A.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=A.lls(r);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){A.lub((()=>{if(!this.stateful)throw new br("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new wr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>A.lls(r))):this.states_=[A.lls(r)];else if(null==e)A.B90(this.states_),null!=this.keptStates&&(A.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>A.lls(r))):this.states_[0]=A.lls(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new wr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):A.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!A.D5U.arraysEqual(n.shape,s))throw new wr(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>A.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Kl(l,s[0],r,a[0],i[0]),h=Kl(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Su.className="ConvRNN2D";class Nu extends wu{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Ur(this.filters,"filters"),this.kernelSize=ql(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ur(e,"kernelSize"))),this.strides=ql(s||1,2,"strides"),this.strides.forEach((e=>Ur(e,"strides"))),this.padding=r||"valid",ta(this.padding),this.dataFormat=a||"channelsLast",ea(this.dataFormat),this.dilationRate=ql(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ur(e,"dilationRate")))}build(e){var t;e=si(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new wr(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends Oa{apply(e,t){return va([n.apply([s]),A.iUs([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return A.lub((()=>{if(3!==e.length)throw new wr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Iu({ones:()=>A.JpU(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?A.dC7(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Iu({ones:()=>A.JpU(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,w]=A.Vl2(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?A.Vl2(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,T,C,E]=A.Vl2(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(A.IHx(l,d)),D=this.recurrentActivation.apply(A.IHx(u,f)),R=A.IHx(A.dC7(D,a),A.dC7($,this.activation.apply(A.IHx(c,m)))),_=A.dC7(this.recurrentActivation.apply(A.IHx(h,g)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=A.Tek(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?$a(r,n,this.dataFormat):r}recurrentConv(e,t){return A.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Nu.className="ConvLSTM2DCell",A.m7h.registerClass(Nu);class Tu extends Su{constructor(e){const t=new Nu(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Tu.className="ConvLSTM2D",A.m7h.registerClass(Tu);class Cu extends fi{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=ni(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return Da((()=>Aa(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Cu.className="Dropout",A.m7h.registerClass(Cu);class Eu extends Cu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Eu.className="SpatialDropout1D",A.m7h.registerClass(Eu);class $u extends fi{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ur(this.units,"units"),this.activation=Ol(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Za(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Za(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Oi(e.kernelConstraint),this.biasConstraint=Oi(e.biasConstraint),this.kernelRegularizer=Ul(e.kernelRegularizer),this.biasRegularizer=Ul(e.biasRegularizer),this.activityRegularizer=Ul(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=si(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=si(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=ni(e),s=Vr(this.activation.getClassName());let r;return null!=s?r=Na(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Na(n,this.kernel.read()),null!=this.bias&&(r=$a(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Rl(this.activation),useBias:this.useBias,kernelInitializer:Ja(this.kernelInitializer),biasInitializer:Ja(this.biasInitializer),kernelRegularizer:zl(this.kernelRegularizer),biasRegularizer:zl(this.biasRegularizer),activityRegularizer:zl(this.activityRegularizer),kernelConstraint:Ri(this.kernelConstraint),biasConstraint:Ri(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}$u.className="Dense",A.m7h.registerClass($u);class Au extends fi{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=si(e);for(const t of e.slice(1))if(null==t)throw new wr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ca(e,1)]}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);let n=ni(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,A.p4s)(n,e)}return function(e){if(e.rank<=1)throw new wr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ca(e.shape,1)];return A.XLQ(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Au.className="Flatten",A.m7h.registerClass(Au);class Du extends fi{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ol(e.activation)}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=ni(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Rl(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Du.className="Activation",A.m7h.registerClass(Du);class Ru extends fi{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,A.lub)((()=>{return e=ni(e),t=e,n=this.n,(0,A.lub)((()=>{if(2!==t.shape.length)throw new wr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ia(ya(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Ru.className="RepeatVector",A.m7h.registerClass(Ru);class _u extends fi{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new wr("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=ca(e);if(null!==a){if(0===r||i%r!=0)throw new wr(n);s[a]=i/r}else if(i!==r)throw new wr(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=ni(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return(0,A.XLQ)(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}_u.className="Reshape",A.m7h.registerClass(_u);class Ou extends fi{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=da(1,e.dims.length+1);if(!A.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ui({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=si(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return(0,A.p4s)(ni(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ou.className="Permute",A.m7h.registerClass(Ou);class Fu extends fi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=ni(e);return(0,A.YjB)((0,A.Quu)(n,this.maskValue),-1)}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=ni(e),s=(0,A.YjB)((0,A.Quu)(n,this.maskValue),-1,!0);return(0,A.dC7)(n,(0,A.pju)(s,n.dtype))}))}}Fu.className="Masking",A.m7h.registerClass(Fu);class Mu extends fi{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat($r(e.inputLength))}this.inputDim=e.inputDim,Ur(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ur(this.outputDim,"outputDim"),this.embeddingsInitializer=Za(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ul(e.embeddingsRegularizer),this.activityRegularizer=Ul(e.activityRegularizer),this.embeddingsConstraint=Oi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,A.lub)((()=>this.maskZero?(e=ni(e),(0,A.Quu)(e,(0,A.P84)(e))):null))}computeOutputShape(e){if(e=si(e),null==this.inputLength)return[...e,this.outputDim];const t=$r(this.inputLength);if(t.length!==e.length-1)throw new wr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new wr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);let n=ni(e);"int32"!==n.dtype&&(n=ga(n,"int32"));const s=Ta(this.embeddings.read(),(0,A.XLQ)(n,[n.size]));return(0,A.XLQ)(s,si(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ja(this.embeddingsInitializer),embeddingsRegularizer:zl(this.embeddingsRegularizer),activityRegularizer:zl(this.activityRegularizer),embeddingsConstraint:Ri(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Mu.className="Embedding",A.m7h.registerClass(Mu);class Bu extends fi{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new vr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new wr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[si(e)]),e.length<2)throw new wr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Br(t),t.length>1)throw new wr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Br(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,A.lub)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=pa(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=ya(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=A.XLQ(s,[r].concat(ca(e.slice(1))));i=A.p4s(i,[1,0]),i=A.XLQ(i,a),t.push(i),n=!0}else if(e>1){const r=da(1,e).concat([0]);t.push(A.p4s(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=A.XLQ(A.p4s(A.XLQ(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(da(0,r-1));s=A.p4s(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Br(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return A.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new wr("`mask` should be an Array");if(!Array.isArray(e))throw new wr("`inputs` should be an Array");if(t.length!==e.length)throw new wr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:A.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=A.HvI(n,t[e]);return n}))}}class Lu extends Bu{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=A.IHx(t,e[n]);return t}))}}Lu.className="Add",A.m7h.registerClass(Lu);class zu extends Bu{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=A.dC7(t,e[n]);return t}))}}zu.className="Multiply",A.m7h.registerClass(zu);class Pu extends Bu{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=A.IHx(t,e[n]);return A.dC7(1/e.length,t)}))}}Pu.className="Average",A.m7h.registerClass(Pu);class Uu extends Bu{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=A.gWQ(t,e[n]);return t}))}}Uu.className="Maximum",A.m7h.registerClass(Uu);class Wu extends Bu{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=A.LTh(t,e[n]);return t}))}}Wu.className="Minimum",A.m7h.registerClass(Wu);class Vu extends Bu{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new wr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(A.D5U.arraysEqual(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new wr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,A.lub)((()=>va(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new wr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new wr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new wr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new wr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return A.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(A.pju(A.JpU(e[n]),"bool")):t[n].rank<e[n].rank?s.push(A.dt4(t[n],-1)):s.push(t[n]);const r=A.zoF(s,this.axis);return A.$6P(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Gu(e,t){for(;e<0;)e+=t;return e}Vu.className="Concatenate",A.m7h.registerClass(Vu);class Hu extends Bu{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){A.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new vr("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new wr(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new wr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Gu(t,e[n].shape.length))):[Gu(this.axes,n.shape.length),Gu(this.axes,s.shape.length)],this.normalize&&(n=po(n,t[0]),s=po(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new vr("batchDot is not implemented for tensors of 4D or higher rank yet");if(A.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),A.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new vr("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return A.lub((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=A.XLQ(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=A.XLQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?A.Smz(A.dC7(e,t),a[0]):A.Smz(A.dC7(A.p4s(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=A.OI3(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=A.L9e(i,t)}return 1===i.shape.length&&(i=A.dt4(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Gu(this.axes,e.length),Gu(this.axes,t.length)],n}computeOutputShape(e){A.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new vr("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Hu.className="Dot",A.m7h.registerClass(Hu);class ju extends fi{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=ni(e);return Da((()=>(0,A.IHx)(Sa(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}ju.className="GaussianNoise",A.m7h.registerClass(ju);class Xu extends fi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=ni(e);return this.rate>0&&this.rate<1?Da((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,A.dC7)(n,Sa(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Xu.className="GaussianDropout",A.m7h.registerClass(Xu);class qu extends fi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ni(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,A.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=ni(e),s=-1.7580993408473766;let r=(0,A.brS)((0,A.LGj)(n),this.rate);r=ga(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=(0,A.IHx)((0,A.dC7)(t,r),(0,A.dC7)((0,A.IHx)(r,-1),s));return(0,A.IHx)((0,A.dC7)(o,a),i)};return Da(s,(()=>ni(e)),t.training||!1)}return e}))}}function Ku(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=A.Dxk(e,t,n,s,r,a);else if(3===e.rank)i=A.JY5(e,t,n,s,r,a);else{if(4!==e.rank)throw new vr(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=A.p3b(e,t,n,s,r,a)}return i}qu.className="AlphaDropout",A.m7h.registerClass(qu);class Qu extends fi{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Za(e.betaInitializer||"zeros"),this.gammaInitializer=Za(e.gammaInitializer||"ones"),this.movingMeanInitializer=Za(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Za(e.movingVarianceInitializer||"ones"),this.betaConstraint=Oi(e.betaConstraint),this.gammaConstraint=Oi(e.gammaConstraint),this.betaRegularizer=Ul(e.betaRegularizer),this.gammaRegularizer=Ul(e.gammaRegularizer)}build(e){e=si(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new wr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ui({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,A.lub)((()=>{const n=null!=t.training&&t.training,s=ni(e),r=s.shape,a=r.length,i=da(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Nr(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!A.D5U.arraysEqual(u,da(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=(0,A.XLQ)(this.movingMean.read(),l),t=(0,A.XLQ)(this.movingVariance.read(),l),n=this.center?(0,A.XLQ)(this.beta.read(),l):null,r=this.scale?(0,A.XLQ)(this.gamma.read(),l):null;return Ku(s,e,t,n,r,this.epsilon)}return Ku(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,s,r=.001){return A.D5U.arraysEqual(s.slice().sort(),da(0,e.rank-1))?function(e,t,n,s,r=.001){return(0,A.lub)((()=>{const a=A.Gi7(e,s),i=a.mean,o=a.variance;return[Ku(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return(0,A.lub)((()=>{const a=A.Gi7(e,s),i=a.mean,o=a.variance,l=[];for(const t of da(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=(0,A.XLQ)(i,l),c=(0,A.XLQ)(o,l),h=null==t?null:(0,A.XLQ)(t,l),p=null==n?null:(0,A.XLQ)(n,l);return[Ku(e,u,c,p,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{A.lub((()=>{const s=1-n,r=e.read(),a=A.dC7(A.luU(r,t),s);e.write(A.luU(r,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ja(this.betaInitializer),gammaInitializer:Ja(this.gammaInitializer),movingMeanInitializer:Ja(this.movingMeanInitializer),movingVarianceInitializer:Ja(this.movingVarianceInitializer),betaRegularizer:zl(this.betaRegularizer),gammaRegularizer:zl(this.gammaRegularizer),betaConstraint:Ri(this.betaConstraint),gammaConstraint:Ri(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Qu.className="BatchNormalization",A.m7h.registerClass(Qu);class Yu extends fi{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Za(e.betaInitializer||"zeros"),this.gammaInitializer=Za(e.gammaInitializer||"ones"),this.betaRegularizer=Ul(e.betaRegularizer),this.gammaRegularizer=Ul(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=si(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Br(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=ni(e),s=n.shape,r=s.length;return(0,A.lub)((()=>{let{mean:e,variance:t}=(0,A.Gi7)(n,this.axis,!0);const a=Nr(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?A.XLQ(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=A.Gg6(e,u),t=A.Gg6(t,u),null!=o&&(o=A.Gg6(o,c)),null!=l&&(l=A.Gg6(l,c)),Ku(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ja(this.betaInitializer),gammaInitializer:Ja(this.gammaInitializer),betaRegularizer:zl(this.betaRegularizer),gammaRegularizer:zl(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Yu.className="LayerNormalization",A.m7h.registerClass(Yu);class Ju extends fi{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new wr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new wr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new wr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ui({ndim:4})]}computeOutputShape(e){let t,n;return e=si(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,A.lub)((()=>{return t=ni(e),n=this.padding,s=this.dataFormat,(0,A.lub)((()=>{if(4!==t.rank)throw new wr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new wr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new wr(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],A.vku(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Zu(e,t,n,s,r,a){return(0,A.lub)((()=>{let i;ea(r),na(a),ta(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Yl(e,r);const o="same"===s?"same":"valid";return i="max"===a?A._sB(e,t,n,o):A.wS1(e,t,n,o),"channelsFirst"===r&&(i=A.p4s(i,[0,3,1,2])),i}))}function ec(e,t,n,s,r,a){return(0,A.lub)((()=>{let i;ea(r),na(a),ta(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Jl(e,r);const o="same"===s?"same":"valid";return i="max"===a?A.YQQ(e,t,n,o):A.uR5(e,t,n,o),"channelsFirst"===r&&(i=A.p4s(i,[0,4,1,2,3])),i}))}Ju.className="ZeroPadding2D",A.m7h.registerClass(Ju);class tc extends fi{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new wr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ur(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new wr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ur(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,ta(this.padding),this.inputSpec=[new ui({ndim:3})]}computeOutputShape(e){const t=Kl((e=si(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t),e=ya(ni(e),2);const n=this.poolingFunction(ni(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return A.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class nc extends tc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ea(r),ta(s),Zu(e,t,n,s,r,"max")}}nc.className="MaxPooling1D",A.m7h.registerClass(nc);class sc extends tc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ea(r),ta(s),Zu(e,t,n,s,r,"avg")}}sc.className="AveragePooling1D",A.m7h.registerClass(sc);class rc extends fi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new wr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ur(this.poolSize,"poolSize"),Ur(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ea(this.dataFormat),ta(this.padding),this.inputSpec=[new ui({ndim:4})]}computeOutputShape(e){e=si(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Kl(t,this.poolSize[0],this.padding,this.strides[0]),n=Kl(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,A.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(ni(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ac extends rc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ea(r),ta(s),Zu(e,t,n,s,r,"max")}}ac.className="MaxPooling2D",A.m7h.registerClass(ac);class ic extends rc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ea(r),ta(s),Zu(e,t,n,s,r,"avg")}}ic.className="AveragePooling2D",A.m7h.registerClass(ic);class oc extends fi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new wr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ur(this.poolSize,"poolSize"),Ur(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ea(this.dataFormat),ta(this.padding),this.inputSpec=[new ui({ndim:5})]}computeOutputShape(e){e=si(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Kl(t,this.poolSize[0],this.padding,this.strides[0]),n=Kl(n,this.poolSize[1],this.padding,this.strides[1]),s=Kl(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return(0,A.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(ni(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class lc extends oc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ea(r),ta(s),ec(e,t,n,s,r,"max")}}lc.className="MaxPooling3D",A.m7h.registerClass(lc);class uc extends oc{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return ea(r),ta(s),ec(e,t,n,s,r,"avg")}}uc.className="AveragePooling3D",A.m7h.registerClass(uc);class cc extends fi{constructor(e){super(e),this.inputSpec=[new ui({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new vr}}class hc extends cc{constructor(e){super(e||{})}call(e,t){return(0,A.lub)((()=>{const t=ni(e);return A.J69(t,1)}))}}hc.className="GlobalAveragePooling1D",A.m7h.registerClass(hc);class pc extends cc{constructor(e){super(e||{})}call(e,t){return(0,A.lub)((()=>{const t=ni(e);return A.Fp7(t,1)}))}}pc.className="GlobalMaxPooling1D",A.m7h.registerClass(pc);class dc extends fi{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ea(this.dataFormat),this.inputSpec=[new ui({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new vr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class fc extends dc{call(e,t){return(0,A.lub)((()=>{const t=ni(e);return"channelsLast"===this.dataFormat?A.J69(t,[1,2]):A.J69(t,[2,3])}))}}fc.className="GlobalAveragePooling2D",A.m7h.registerClass(fc);class mc extends dc{call(e,t){return(0,A.lub)((()=>{const t=ni(e);return"channelsLast"===this.dataFormat?A.Fp7(t,[1,2]):A.Fp7(t,[2,3])}))}}mc.className="GlobalMaxPooling2D",A.m7h.registerClass(mc);class gc extends fi{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=ho(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class yc extends gc{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=si(e)).length<3)throw new wr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=si(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return(0,A.lub)((()=>du(((e,n)=>[ni(this.layer.call(e,t)),[]]),e=ni(e),[],!1,null,null,!1,!0)[1]))}}yc.className="TimeDistributed",A.m7h.registerClass(yc);class bc extends gc{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ho(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=ho(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,zr(Jr,"BidirectionalMergeMode",r),e.weights)throw new vr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Er(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=pu(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new wr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new ui({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new vr("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof ci;for(const e of a)if(e instanceof ci!==o)throw new wr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,A.lub)((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=A.GYS(r,1)),"concat"===this.mergeMode?i=va([s,r]):"sum"===this.mergeMode?i=A.IHx(s,r):"ave"===this.mergeMode?i=A.dC7(.5,A.IHx(s,r)):"mul"===this.mergeMode?i=A.dC7(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){aa(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),aa(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ho(t.layer);if(delete t.layer,null!=t.numConstants)throw new vr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}bc.className="Bidirectional",A.m7h.registerClass(bc);class xc extends fi{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,A.lub)((()=>("float32"!==(e=ni(e)).dtype&&(e=ga(e,"float32")),(0,A.IHx)((0,A.dC7)(e,this.scale),this.offset))))}}xc.className="Rescaling",A.m7h.registerClass(xc);const{resizeBilinear:wc,cropAndResize:vc}=A.BHj;class kc extends fi{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,a,i,o){return(0,A.lub)((()=>{let l,u=!1;const c=[t/a,n/i,(s+t)/a,(r+n)/i],h=[];3===e.rank?(u=!0,l=(0,A.knu)([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const p=(0,A.XeE)(h,[h.length,4]),d=(0,A.w6H)(0,h.length,1,"int32"),f=vc(l,p,d,[s,r],"nearest");return ga(u?ni((0,A.HHK)(f)):f,o)}))}upsize(e,t,n,s){return(0,A.lub)((()=>ga(wc(e,[t,n]),s)))}call(e,t){return(0,A.lub)((()=>{const t=ni(e),n=t.dtype,s=t.shape,r=s[s.length-3],a=s[s.length-2];let i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=si(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}kc.className="CenterCrop",A.m7h.registerClass(kc);class Ic extends fi{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=si(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,A.lub)((()=>{let n;if("int32"!==(e=ni(e)).dtype&&(e=ga(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new wr(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=ni(t.countWeights)}const s=(0,A.Fp7)(e),r=(0,A.VV$)(e),a=(0,A.pjt)(this.numTokens,s).bufferSync().get(0),i=(0,A.brS)(r,0).bufferSync().get(0);if(!a||!i)throw new wr(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,s){let r=ni(e);if("int32"!==r.dtype&&(r=ga(r,"int32")),"int"===t)return r;const a=r.shape;if(0===r.rank&&(r=(0,A.dt4)(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=(0,A.dt4)(r,-1)),r.rank>2)throw new wr(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t),o=r;let l;if(l=void 0!==s&&"count"===t?(0,A.ppE)(o,s,n,i):(0,A.ppE)(o,[],n,i),"tfIdf"!==t)return l;if(s)return(0,A.dC7)(l,s);throw new wr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Ic.className="CategoryEncoding",A.m7h.registerClass(Ic);const Sc=new Set(["bilinear","nearest"]);class Nc extends fi{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Sc.has(e.interpolation))throw new wr(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=si(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,A.lub)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return A.BHj.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return A.BHj.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Sc]} are supported`)}))}}function Tc(e){return new gi(e)}function Cc(e){return new Hl(e)}function Ec(e){return new Wl(e)}function $c(e){return new Vl(e)}function Ac(e){return new Gl(e)}function Dc(e){return new Xl(e)}function Rc(e){return new jl(e)}function _c(e){return new lu(e)}function Oc(e){return new nu(e)}function Fc(e){return new ru(e)}function Mc(e){return new su(e)}function Bc(e){return new au(e)}function Lc(e){return new ou(e)}function zc(e){return new uu(e)}function Pc(e){return new cu(e)}function Uc(e){return new hu(e)}function Wc(e){return new Du(e)}function Vc(e){return new $u(e)}function Gc(e){return new Cu(e)}function Hc(e){return new Eu(e)}function jc(e){return new Au(e)}function Xc(e){return new Ru(e)}function qc(e){return new _u(e)}function Kc(e){return new Ou(e)}function Qc(e){return new Mu(e)}function Yc(e){return new Lu(e)}function Jc(e){return new Pu(e)}function Zc(e){return new Vu(e)}function eh(e){return new Uu(e)}function th(e){return new Wu(e)}function nh(e){return new zu(e)}function sh(e){return new Hu(e)}function rh(e){return new Qu(e)}function ah(e){return new Yu(e)}function ih(e){return new Ju(e)}function oh(e){return new sc(e)}function lh(e){return oh(e)}function uh(e){return oh(e)}function ch(e){return new ic(e)}function hh(e){return ch(e)}function ph(e){return ch(e)}function dh(e){return new uc(e)}function fh(e){return dh(e)}function mh(e){return dh(e)}function gh(e){return new hc(e)}function yh(e){return new fc(e)}function bh(e){return new pc(e)}function xh(e){return new mc(e)}function wh(e){return new nc(e)}function vh(e){return new ac(e)}function kh(e){return new lc(e)}function Ih(e){return new xu(e)}function Sh(e){return new bu(e)}function Nh(e){return new vu(e)}function Th(e){return new wu(e)}function Ch(e){return new yu(e)}function Eh(e){return new gu(e)}function $h(e){return new Tu(e)}function Ah(e){return new Nu(e)}function Dh(e){return new fu(e)}function Rh(e){return new ku(e)}function _h(e){return new bc(e)}function Oh(e){return new yc(e)}Nc.className="Resizing",A.m7h.registerClass(Nc);const Fh=bh,Mh=xh,Bh=wh,Lh=vh;function zh(e){return new ju(e)}function Ph(e){return new Xu(e)}function Uh(e){return new qu(e)}function Wh(e){return new Fu(e)}function Vh(e){return new xc(e)}function Gh(e){return new kc(e)}function Hh(e){return new Nc(e)}function jh(e){return new Ic(e)}function Xh(e,t){return Io(e,t)}function qh(e,t){return Co(e,t)}function Kh(e,t){return Eo(e,t)}function Qh(e,t){return So(e,t)}function Yh(e,t){return $o(e,t)}function Jh(e,t){return To(e,t)}function Zh(e,t){return function(e,t){return(0,A.lub)((()=>{const n=No(e,t),s=function(e,t){return(0,A.lub)((()=>A.pju(A.Smz(A.HvI(A.DgJ(e,1),A.DgJ(t,0))),"float32")))}(e,t),r=A.IHx(n,s);return A.pju(A.arb(A.pjt(r,0),A.hiC(n,r),0),"float32")}))}(e,t)}function ep(e,t){return wo(e,t)}function tp(e,t){return mo(e,t)}function np(e,t){return go(e,t)}function sp(e,t){return go(e,t)}function rp(e,t){return go(e,t)}function ap(e,t){return fo(e,t)}function ip(e,t){return fo(e,t)}function op(e,t){return fo(e,t)}function lp(e){return new Bl(e)}function up(e){return Fl(t=e),new Bl({l1:null!=t?t.l1:null,l2:0});var t}function cp(e){return Fl(t=e),new Bl({l2:null!=t?t.l2:null,l1:0});var t}class hp extends so{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof ll))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function pp(e,t){return e<t}function dp(e,t){return e>t}class fp extends hp{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new vr("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=pp:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=dp:this.monitorFunc=pp,this.monitorFunc===pp&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===pp?1/0:-1/0}async onEpochEnd(e,t){await eo(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const mp={earlyStopping:function(e){return new fp(e)}};var gp,yp;(0,A.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(gp||(gp={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(yp||(yp={}));const bp={};function xp(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};bp[e]=n}function wp(e){return bp[e]}function vp(e){delete bp[e]}function kp(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return Ip(t.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>Ip(e,n,s,r)));const o=Ip(t.inputNames.slice(e)[0],n,s,r),l=o.dataSync();return"number"===a.type?l[0]:A.D5U.toNestedArray(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function Ip(e,t,n,s){const[r,a]=Tp(e);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Np(r,e)]));return void 0!==i?t[Np(r,i)][a]:void 0}function Sp(e,t){const[n,s,r]=Tp(e);return[Np(n,t&&t.currentContextId),s,r]}function Np(e,t){return t?`${e}-${t}`:e}function Tp(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],s=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),s]}function Cp(e,t,n){let s=kp("pad",e,t,n);if("explicit"===s){s=kp("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function Ep(e){return e.kept?e:(0,A.d9v)(e)}const $p=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ap=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Dp=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Rp=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],_p=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Op=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Fp=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Mp=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Bp=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Lp=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],zp=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Pp=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Up=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Wp=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Vp=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Gp=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Hp=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],jp=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Xp=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class qp{constructor(){const e=[].concat(...[u,c,h,p,d,f,m,g,y,b,x,w,v,k,I,S,N,T,C].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[s,,r]=Sp(e),a=i[s];if(null!=a.outputs){const e=a.outputs.indexOf(r);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=Sp(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Sp(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=s;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=wp(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r;switch(n.type){case"string":r=Qp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Qp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=id(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=id(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=Jp(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=Jp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=ad(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ad(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=Yp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Yp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=ld(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ld(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=rd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=rd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=od(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=od(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=td(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=td(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=nd(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=nd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=ed(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ed(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Sp(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Zp(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n})),Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=Sp(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Sp(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Kp(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,A.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Qp(e,t,n,s=!1){const r=e[t];return null!=r?Kp(r.s,s):n}function Yp(e,t,n){const s=e[t];return s?s.b:n}function Jp(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function Zp(e){switch("string"==typeof e&&(e=gp[e]),e){case gp.DT_FLOAT:case gp.DT_HALF:return"float32";case gp.DT_INT32:case gp.DT_INT64:case gp.DT_INT8:case gp.DT_UINT8:return"int32";case gp.DT_BOOL:return"bool";case gp.DT_DOUBLE:return"float32";case gp.DT_STRING:return"string";default:return null}}function ed(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function td(e,t,n){const s=e[t];return s&&s.type?Zp(s.type):n}function nd(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>Zp(e))):n}function sd(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function rd(e,t,n){const s=e[t];return s&&s.shape?sd(s.shape):n}function ad(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function id(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>Kp(e,s))):n}function od(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>sd(e))):n}function ld(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class ud{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Ip(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Ip(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Jp(this.node.rawAttrs,e,t);if(null!=n.s)return Qp(this.node.rawAttrs,e,t);if(null!=n.b)return Yp(this.node.rawAttrs,e,t);if(null!=n.shape)return rd(this.node.rawAttrs,e,t);if(null!=n.type)return td(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return ad(this.node.rawAttrs,e,t);if(null!=n.list.s)return id(this.node.rawAttrs,e,t);if(null!=n.list.shape)return od(this.node.rawAttrs,e,t);if(null!=n.list.b)return ld(this.node.rawAttrs,e,t);if(null!=n.list.type)return nd(this.node.rawAttrs,e,t)}return t}}var cd=n(3412);const hd=(e,t,n,s=E)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(kp("a",e,t,n),kp("b",e,t,n))];case"AddN":return[s.addN(kp("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(kp("a",e,t,n),kp("b",e,t,n))];case"Mul":return[s.mul(kp("a",e,t,n),kp("b",e,t,n))];case"RealDiv":case"Div":return[s.div(kp("a",e,t,n),kp("b",e,t,n))];case"DivNoNan":return[s.divNoNan(kp("a",e,t,n),kp("b",e,t,n))];case"FloorDiv":return[s.floorDiv(kp("a",e,t,n),kp("b",e,t,n))];case"Sub":return[s.sub(kp("a",e,t,n),kp("b",e,t,n))];case"Minimum":return[s.minimum(kp("a",e,t,n),kp("b",e,t,n))];case"Maximum":return[s.maximum(kp("a",e,t,n),kp("b",e,t,n))];case"Pow":return[s.pow(kp("a",e,t,n),kp("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(kp("a",e,t,n),kp("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},pd=(e,t,n,s=E)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(kp("x",e,t,n))];case"Acos":return[s.acos(kp("x",e,t,n))];case"Acosh":return[s.acosh(kp("x",e,t,n))];case"Asin":return[s.asin(kp("x",e,t,n))];case"Asinh":return[s.asinh(kp("x",e,t,n))];case"Atan":return[s.atan(kp("x",e,t,n))];case"Atan2":return[s.atan2(kp("x",e,t,n),kp("y",e,t,n))];case"Atanh":return[s.atanh(kp("x",e,t,n))];case"Ceil":return[s.ceil(kp("x",e,t,n))];case"Complex":return[s.complex(kp("real",e,t,n),kp("imag",e,t,n))];case"Cos":return[s.cos(kp("x",e,t,n))];case"Cosh":return[s.cosh(kp("x",e,t,n))];case"Elu":return[s.elu(kp("x",e,t,n))];case"Erf":return[s.erf(kp("x",e,t,n))];case"Exp":return[s.exp(kp("x",e,t,n))];case"Expm1":return[s.expm1(kp("x",e,t,n))];case"Floor":return[s.floor(kp("x",e,t,n))];case"Log":return[s.log(kp("x",e,t,n))];case"Log1p":return[s.log1p(kp("x",e,t,n))];case"Imag":return[s.imag(kp("x",e,t,n))];case"Neg":return[s.neg(kp("x",e,t,n))];case"Reciprocal":return[s.reciprocal(kp("x",e,t,n))];case"Real":return[s.real(kp("x",e,t,n))];case"Relu":return[s.relu(kp("x",e,t,n))];case"Round":return[s.round(kp("x",e,t,n))];case"Selu":return[s.selu(kp("x",e,t,n))];case"Sigmoid":return[s.sigmoid(kp("x",e,t,n))];case"Sin":return[s.sin(kp("x",e,t,n))];case"Sign":return[s.sign(kp("x",e,t,n))];case"Sinh":return[s.sinh(kp("x",e,t,n))];case"Softplus":return[s.softplus(kp("x",e,t,n))];case"Sqrt":return[s.sqrt(kp("x",e,t,n))];case"Square":return[s.square(kp("x",e,t,n))];case"Tanh":return[s.tanh(kp("x",e,t,n))];case"Tan":return[s.tan(kp("x",e,t,n))];case"ClipByValue":return[s.clipByValue(kp("x",e,t,n),kp("clipValueMin",e,t,n),kp("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(kp("x",e,t,n))];case"Rsqrt":return[s.rsqrt(Ip(e.inputNames[0],t,n))];case"Prod":return[s.prod(kp("x",e,t,n),kp("axes",e,t,n))];case"LeakyRelu":return[s.leakyRelu(kp("x",e,t,n),kp("alpha",e,t,n))];case"Prelu":return[s.prelu(kp("x",e,t,n),kp("alpha",e,t,n))];case"IsNan":return[s.isNaN(Ip(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function dd(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){A.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let s=0;s<e.length;s++){const r=e[s],a=t[s];A.D5U.assert(r<0||a<0||r===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function fd(e){return"number"!=typeof e&&!e.some((e=>e<0))}function md(e,t,n){let s=gd(e,n);const r=!fd(s);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach((e=>{s=gd(e.shape,s)})),!fd(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function gd(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let s=0;s<e.length;++s){const r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}class yd{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,A.iD$)(0),(0,A.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),dd(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,A.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,A.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return dd(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,A.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,A.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return dd(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,A.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,A.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];(0,A.lub)((()=>{t=(0,A.XLQ)(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=(0,A.XLQ)((0,A.tPi)(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class bd{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);dd(t,e.shape,"TensorList shape mismatch: "),(0,A.CnY)(e)})),this.idTensor=(0,A.iD$)(0),this.maxNumElements=s,(0,A.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new bd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);dd(e,this.elementShape,"TensorList shape mismatch: ");const s=md(this.elementShape,this.tensors,e);return(0,A.lub)((()=>{const e=this.tensors.map((e=>(0,A.XLQ)(e,s)));return(0,A.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=md(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,dd(s.shape,e,"TensorList shape mismatch: "),(0,A.XLQ)(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(dd(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,A.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new bd([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);dd(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=md(this.elementShape,this.tensors,t);return(0,A.XLQ)(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);dd(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,A.CnY)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);dd(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=md(this.elementShape,this.tensors,n);return 0===e.length?(0,A.XeE)([],[0].concat(s)):(0,A.lub)((()=>{const t=e.map((e=>(0,A.XLQ)(this.tensors[e],s)));return(0,A.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);dd(this.elementShape,t,"TensorList shape mismatch: ");const n=md(this.elementShape,this.tensors,t);return 0===this.size()?(0,A.XeE)([],[0].concat(n)):(0,A.lub)((()=>{const e=this.tensors.map((e=>(0,A.XLQ)(e,n)));return(0,A.zoF)(e,0)}))}}const xd=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=kp("thenBranch",e,t,n),r=kp("elseBranch",e,t,n),a=kp("cond",e,t,n),i=kp("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=kp("body",e,t,n),r=kp("cond",e,t,n),a=kp("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[Ep(kp("pred",e,t,n))];case"Switch":{const s=kp("pred",e,t,n);let r=kp("data",e,t,n);return r.kept||(r=Ep(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==Ip(e,t,n)));return s?[Ep(Ip(s,t,n))]:void 0}case"Enter":{const s=kp("frameName",e,t,n),r=kp("tensor",e,t,n);return n.enterFrame(s),[Ep(r)]}case"Exit":{const s=kp("tensor",e,t,n);return n.exitFrame(),[Ep(s)]}case"NextIteration":{const s=kp("tensor",e,t,n);return n.nextIteration(),[Ep(s)]}case"TensorArrayV3":{const s=kp("size",e,t,n),r=kp("dtype",e,t,n),a=kp("elementShape",e,t,n),i=kp("dynamicSize",e,t,n),o=kp("clearAfterRead",e,t,n),l=kp("identicalElementShapes",e,t,n),u=kp("name",e,t,n),c=new yd(u,r,s,a,l,i,o);return n.addTensorArray(c),[c.idTensor,(0,A.iD$)(1)]}case"TensorArrayWriteV3":{const s=kp("tensorArrayId",e,t,n),r=kp("index",e,t,n),a=kp("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=kp("tensorArrayId",e,t,n),r=kp("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=kp("tensorArrayId",e,t,n),r=kp("indices",e,t,n),a=kp("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=kp("tensorArrayId",e,t,n),r=kp("indices",e,t,n),a=kp("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=kp("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=kp("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=kp("tensorArrayId",e,t,n),r=kp("tensor",e,t,n),a=kp("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=kp("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[(0,A.iD$)(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=kp("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=kp("tensorListId",e,t,n),r=kp("index",e,t,n),a=kp("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=kp("tensorListId",e,t,n),r=kp("index",e,t,n),a=kp("elementShape",e,t,n),i=kp("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=kp("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new bd([],n,e.dtype,s),i=(0,A.HHK)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(kp("tensor",e,t,n),s,kp("elementShape",e,t,n),kp("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=kp("elementShape",e,t,n),r=kp("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=kp(a,e,t,n),o=function(e,t,n,s){return new bd([],e,t,s)}(s,r,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const s=kp("tensorListId",e,t,n),r=kp("indices",e,t,n),a=kp("elementShape",e,t,n),i=kp("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=kp("tensorListId",e,t,n),r=kp("elementShape",e,t,n),a=kp("elementDType",e,t,n),i=kp("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);dd(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,A.HHK)(e);return new bd(r,t,s)}(kp("tensor",e,t,n),kp("elementShape",e,t,n),kp("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=kp("tensorListId",e,t,n),r=n.getTensorList(s.id),a=kp("dtype",e,t,n),i=kp("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=kp("tensorListId",e,t,n),r=kp("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=kp("tensorListId",e,t,n),r=kp("elementShape",e,t,n),a=kp("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=kp("tensor",e,t,n),r=kp("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const a=gd(e.shape.slice(1),n),i=0===s?0:e.size/s,o=(0,A.lub)((()=>{const n=[];e=(0,A.XLQ)(e,[1,s,i]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,t[s],i];n[s]=(0,A.XLQ)((0,A.tPi)(e,o,l),a)}return e.dispose(),n})),l=new bd([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(s,kp("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=kp("tensorListId",e,t,n),r=n.getTensorList(s.id);return[(0,A.iD$)(r.size(),"int32")]}case"TensorListResize":{const s=kp("tensorListId",e,t,n),r=kp("size",e,t,n),a=n.getTensorList(s.id).resize(r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wd(e,t,n){const[s,r]=kp("fusedOps",e,t,n),a="biasadd"===s,i=!a,o="prelu"===r,l="fusedbatchnorm"===s,u=kp("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=kp("strides",e,t,n),h=Cp(e,t,n),p=kp("dataFormat",e,t,n).toUpperCase(),d=kp("dilations",e,t,n);let[f,m]=kp("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:kp("leakyreluAlpha",e,t,n)}}const vd=(e,t,n,s=E)=>{switch(e.op){case"Conv1D":{const r=kp("stride",e,t,n),a=kp("pad",e,t,n),i=kp("dataFormat",e,t,n).toUpperCase(),o=kp("dilation",e,t,n);return[s.conv1d(kp("x",e,t,n),kp("filter",e,t,n),r,a,i,o)]}case"Conv2D":{const r=kp("strides",e,t,n),a=Cp(e,t,n),i=kp("dataFormat",e,t,n).toUpperCase(),o=kp("dilations",e,t,n);return[s.conv2d(kp("x",e,t,n),kp("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=wd(e,t,n);return[s.fused.conv2d({x:kp("x",e,t,n),filter:kp("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=wd(e,t,n);return[s.fused.depthwiseConv2d({x:kp("x",e,t,n),filter:kp("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=kp("outputShape",e,t,n),a=kp("strides",e,t,n),i=Cp(e,t,n);return[s.conv2dTranspose(kp("x",e,t,n),kp("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=kp("strides",e,t,n),a=Cp(e,t,n),i=kp("dilations",e,t,n),o=kp("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(kp("input",e,t,n),kp("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const r=kp("strides",e,t,n),a=kp("pad",e,t,n),i=kp("dataFormat",e,t,n).toUpperCase(),o=kp("dilations",e,t,n);return[s.conv3d(kp("x",e,t,n),kp("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=kp("strides",e,t,n),a=kp("pad",e,t,n),i=kp("kernelSize",e,t,n);return[s.avgPool(kp("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=kp("strides",e,t,n),a=kp("pad",e,t,n),i=kp("kernelSize",e,t,n);return[s.maxPool(kp("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=kp("strides",e,t,n),a=kp("pad",e,t,n),i=kp("kernelSize",e,t,n),o=kp("includeBatchInIndex",e,t,n),{result:l,indexes:u}=s.maxPoolWithArgmax(kp("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,o);return[l,u]}case"AvgPool3D":{const r=kp("strides",e,t,n),a=kp("pad",e,t,n),i=kp("kernelSize",e,t,n);return[s.avgPool3d(kp("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=kp("strides",e,t,n),a=kp("pad",e,t,n),i=kp("kernelSize",e,t,n);return[s.maxPool3d(kp("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=kp("strides",e,t,n),a=kp("pad",e,t,n),i=kp("dilations",e,t,n),o=r[1],l=r[2],u=i[1],c=i[2];return[s.dilation2d(kp("x",e,t,n),kp("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},kd=(e,t,n,s=E)=>{switch(e.op){case"Fill":{const r=kp("shape",e,t,n),a=kp("dtype",e,t,n),i=kp("value",e,t,n);return[s.fill(r,i,a)]}case"LinSpace":{const r=kp("start",e,t,n),a=kp("stop",e,t,n),i=kp("num",e,t,n);return[s.linspace(r,a,i)]}case"Multinomial":{const r=kp("logits",e,t,n),a=kp("numSamples",e,t,n),i=kp("seed",e,t,n);return[s.multinomial(r,a,i)]}case"OneHot":{const r=kp("indices",e,t,n),a=kp("depth",e,t,n),i=kp("onValue",e,t,n),o=kp("offValue",e,t,n),l=kp("dtype",e,t,n);return[s.oneHot(r,a,i,o,l)]}case"Ones":return[s.ones(kp("shape",e,t,n),kp("dtype",e,t,n))];case"OnesLike":return[s.onesLike(kp("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(kp("shape",e,t,n),kp("dtype",e,t,n),kp("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(kp("shape",e,t,n),kp("minval",e,t,n),kp("maxval",e,t,n),kp("dtype",e,t,n))];case"Range":{const r=kp("start",e,t,n),a=kp("stop",e,t,n),i=kp("step",e,t,n);return[s.range(r,a,i,kp("dtype",e,t,n))]}case"TruncatedNormal":{const r=kp("shape",e,t,n),a=kp("mean",e,t,n),i=kp("stdDev",e,t,n),o=kp("seed",e,t,n);return[s.truncatedNormal(r,a,i,kp("dtype",e,t,n),o)]}case"Zeros":return[s.zeros(kp("shape",e,t,n),kp("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(kp("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Id(e,t,n){return{boxes:kp("boxes",e,t,n),scores:kp("scores",e,t,n),maxOutputSize:kp("maxOutputSize",e,t,n),iouThreshold:kp("iouThreshold",e,t,n),scoreThreshold:kp("scoreThreshold",e,t,n),softNmsSigma:kp("softNmsSigma",e,t,n)}}const Sd=async(e,t,n,s,r=E)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Id(e,t,n),c=await r.image.nonMaxSuppressionWithScoreAsync(s,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Id(e,t,n),u=kp("padToMaxOutputSize",e,t,n),c=await r.image.nonMaxSuppressionPaddedAsync(s,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Id(e,t,n);return[await r.image.nonMaxSuppressionAsync(s,a,i,o,l)]}case"Where":{const s=r.cast(kp("condition",e,t,n),"bool"),a=[await r.whereAsync(s)];return s.dispose(),a}case"ListDiff":return r.setdiff1dAsync(kp("x",e,t,n),kp("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},Nd=(e,t,n,s=E)=>{switch(e.op){case"LowerBound":{const r=kp("sortedSequence",e,t,n),a=kp("values",e,t,n);return[s.lowerBound(r,a)]}case"TopKV2":{const r=kp("x",e,t,n),a=kp("k",e,t,n),i=kp("sorted",e,t,n),o=s.topk(r,a,i);return[o.values,o.indices]}case"UpperBound":{const r=kp("sortedSequence",e,t,n),a=kp("values",e,t,n);return[s.upperBound(r,a)]}case"Unique":{const r=kp("x",e,t,n),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{const r=kp("x",e,t,n),a=kp("axis",e,t,n),i=s.unique(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Td=(e,t,n,s=E)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=kp("default",e,t,n);return[Ip(e.name,t,n)||r];case"Placeholder":return[Ip(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Ep(kp("x",e,t,n))];case"IdentityN":return kp("x",e,t,n).map((e=>Ep(e)));case"Shape":return[s.tensor1d(kp("x",e,t,n).shape,"int32")];case"ShapeN":return kp("x",e,t,n).map((e=>s.tensor1d(e.shape)));case"Size":return[s.scalar(kp("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(kp("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=kp("x",e,t,n),i=kp("data",e,t,n),o=kp("message",e,t,n),l=kp("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}};class Cd{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,A.iD$)(0),this.tensorMap=new Map,(0,A.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return L.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,A.lub)((()=>{const e=(0,A.HHK)(t),s=n.length,r=e.length;A.D5U.assert(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];(0,A.CnY)(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,A.lub)((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return(0,A.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const Ed=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=kp("keyDType",e,t,n),a=kp("valueDType",e,t,n),i=new Cd(r,a);return s.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=kp("tableHandle",e,t,n,s),a=kp("keys",e,t,n),i=kp("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=kp("tableHandle",e,t,n,s),a=kp("keys",e,t,n),i=kp("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=kp("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},$d=(e,t,n,s=E)=>{switch(e.op){case"ResizeBilinear":{const r=kp("images",e,t,n),a=kp("size",e,t,n),i=kp("alignCorners",e,t,n),o=kp("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const r=kp("images",e,t,n),a=kp("size",e,t,n),i=kp("alignCorners",e,t,n),o=kp("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],i,o)]}case"CropAndResize":{const r=kp("image",e,t,n),a=kp("boxes",e,t,n),i=kp("boxInd",e,t,n),o=kp("cropSize",e,t,n),l=kp("method",e,t,n),u=kp("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const r=kp("images",e,t,n),a=kp("transforms",e,t,n),i=kp("outputShape",e,t,n),o=kp("fillValue",e,t,n),l=kp("interpolation",e,t,n),u=kp("fillMode",e,t,n);return[s.image.transform(r,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Ad=(e,t,n,s=E)=>{switch(e.op){case"Equal":return[s.equal(kp("a",e,t,n),kp("b",e,t,n))];case"NotEqual":return[s.notEqual(kp("a",e,t,n),kp("b",e,t,n))];case"Greater":return[s.greater(kp("a",e,t,n),kp("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(kp("a",e,t,n),kp("b",e,t,n))];case"Less":return[s.less(kp("a",e,t,n),kp("b",e,t,n))];case"LessEqual":return[s.lessEqual(kp("a",e,t,n),kp("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(kp("a",e,t,n),kp("b",e,t,n))];case"LogicalNot":return[s.logicalNot(kp("a",e,t,n))];case"LogicalOr":return[s.logicalOr(kp("a",e,t,n),kp("b",e,t,n))];case"Select":case"SelectV2":return[s.where(kp("condition",e,t,n),kp("a",e,t,n),kp("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Dd=(e,t,n,s=E)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(kp("a",e,t,n),kp("b",e,t,n),kp("transposeA",e,t,n),kp("transposeB",e,t,n))];case"Einsum":return[s.einsum(kp("equation",e,t,n),...kp("tensors",e,t,n))];case"Transpose":return[s.transpose(kp("x",e,t,n),kp("perm",e,t,n))];case"_FusedMatMul":const[r,a]=kp("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===a,l=kp("numArgs",e,t,n),u=kp("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=kp("args",e,t,n);return[s.fused.matMul({a:kp("a",e,t,n),b:kp("b",e,t,n),transposeA:kp("transposeA",e,t,n),transposeB:kp("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Rd=(e,t,n,s=E)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(kp("x",e,t,n),kp("axis",e,t,n),kp("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[s.batchNorm(kp("x",e,t,n),kp("mean",e,t,n),kp("variance",e,t,n),kp("offset",e,t,n),kp("scale",e,t,n),kp("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(kp("x",e,t,n),kp("radius",e,t,n),kp("bias",e,t,n),kp("alpha",e,t,n),kp("beta",e,t,n))];case"Softmax":return[s.softmax(kp("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(kp("x",e,t,n))];case"SparseToDense":return[s.sparseToDense(kp("sparseIndices",e,t,n),kp("outputShape",e,t,n),kp("sparseValues",e,t,n),kp("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_d=(e,t,n,s=E)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:a}=s.raggedGather(kp("paramsNestedSplits",e,t,n),kp("paramsDenseValues",e,t,n),kp("indices",e,t,n),kp("outputRaggedRank",e,t,n));return r.concat(a)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:a}=s.raggedRange(kp("starts",e,t,n),kp("limits",e,t,n),kp("splits",e,t,n));return[r,a]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(kp("shape",e,t,n),kp("values",e,t,n),kp("defaultValue",e,t,n),kp("rowPartitionTensors",e,t,n),kp("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Od=(e,t,n,s=E)=>{switch(e.op){case"Max":{const r=kp("axis",e,t,n),a=kp("keepDims",e,t,n);return[s.max(kp("x",e,t,n),r,a)]}case"Mean":{const r=kp("axis",e,t,n),a=kp("keepDims",e,t,n);return[s.mean(kp("x",e,t,n),r,a)]}case"Min":{const r=kp("axis",e,t,n),a=kp("keepDims",e,t,n);return[s.min(kp("x",e,t,n),r,a)]}case"Sum":{const r=kp("axis",e,t,n),a=kp("keepDims",e,t,n);return[s.sum(kp("x",e,t,n),r,a)]}case"All":{const r=kp("axis",e,t,n),a=kp("keepDims",e,t,n);return[s.all(kp("x",e,t,n),r,a)]}case"Any":{const r=kp("axis",e,t,n),a=kp("keepDims",e,t,n);return[s.any(kp("x",e,t,n),r,a)]}case"ArgMax":{const r=kp("axis",e,t,n);return[s.argMax(kp("x",e,t,n),r)]}case"ArgMin":{const r=kp("axis",e,t,n);return[s.argMin(kp("x",e,t,n),r)]}case"Prod":{const r=kp("axis",e,t,n),a=kp("keepDims",e,t,n);return[s.prod(kp("x",e,t,n),r,a)]}case"Cumprod":{const r=kp("axis",e,t,n),a=kp("exclusive",e,t,n),i=kp("reverse",e,t,n);return[s.cumprod(kp("x",e,t,n),r,a,i)]}case"Cumsum":{const r=kp("axis",e,t,n),a=kp("exclusive",e,t,n),i=kp("reverse",e,t,n);return[s.cumsum(kp("x",e,t,n),r,a,i)]}case"Bincount":const r=kp("x",e,t,n),a=kp("weights",e,t,n),i=kp("size",e,t,n);return[s.bincount(r,a,i)];case"DenseBincount":{const r=kp("x",e,t,n),a=kp("weights",e,t,n),i=kp("size",e,t,n),o=kp("binaryOutput",e,t,n);return[s.denseBincount(r,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Fd=(e,t,n,s=E)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=kp("n",e,t,n),a=kp("axis",e,t,n);let i=kp("tensors",e,t,n);return i=i.slice(0,r),[s.concat(i,a)]}case"Gather":{const r=kp("x",e,t,n),a=kp("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{const r=kp("axis",e,t,n),a=kp("batchDims",e,t,n),i=kp("x",e,t,n),o=kp("indices",e,t,n);return[s.gather(i,s.cast(o,"int32"),r,a)]}case"Reverse":{const r=kp("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const i=kp("x",e,t,n);return[s.reverse(i,a)]}case"ReverseV2":{const r=kp("axis",e,t,n),a=kp("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{const r=kp("begin",e,t,n),a=kp("size",e,t,n);return[s.slice(kp("x",e,t,n),r,a)]}case"StridedSlice":{const r=kp("begin",e,t,n),a=kp("end",e,t,n),i=kp("strides",e,t,n),o=kp("beginMask",e,t,n),l=kp("endMask",e,t,n),u=kp("ellipsisMask",e,t,n),c=kp("newAxisMask",e,t,n),h=kp("shrinkAxisMask",e,t,n),p=kp("x",e,t,n);return[s.stridedSlice(p,r,a,i,o,l,u,c,h)]}case"Pack":return(0,A.lub)((()=>{const r=kp("axis",e,t,n),a=kp("tensors",e,t,n),i=a[0].shape,o=s.squeeze(a[0]).shape,l=a.map((e=>{const t=A.D5U.arraysEqual(e.shape,i);if(!t&&!A.D5U.arraysEqual(s.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:s.reshape(e,i)}));return[s.stack(l,r)]}));case"Unpack":{const r=kp("axis",e,t,n),a=kp("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{const r=kp("reps",e,t,n);return[s.tile(kp("x",e,t,n),r)]}case"Split":case"SplitV":{const r=kp("axis",e,t,n),a=kp("numOrSizeSplits",e,t,n),i=kp("x",e,t,n);return s.split(i,a,r)}case"ScatterNd":{const r=kp("indices",e,t,n),a=kp("values",e,t,n),i=kp("shape",e,t,n);return[s.scatterND(r,a,i)]}case"GatherNd":{const r=kp("x",e,t,n),a=kp("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{const r=kp("sparseIndices",e,t,n),a=kp("outputShape",e,t,n),i=kp("sparseValues",e,t,n),o=kp("defaultValue",e,t,n);return[s.sparseToDense(r,i,a,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Md=(e,t,n,s=E)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(kp("indices",e,t,n),kp("values",e,t,n),kp("denseShape",e,t,n),kp("defaultValue",e,t,n));return[r,a,i,o]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(kp("inputIndices",e,t,n),kp("inputShape",e,t,n),kp("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(kp("data",e,t,n),kp("indices",e,t,n),kp("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(kp("data",e,t,n),kp("indices",e,t,n),kp("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Bd=(e,t,n,s=E)=>{switch(e.op){case"FFT":return[s.fft(kp("x",e,t,n))];case"IFFT":return[s.ifft(kp("x",e,t,n))];case"RFFT":return[s.rfft(kp("x",e,t,n))];case"IRFFT":return[s.irfft(kp("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Ld=(e,t,n,s=E)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(kp("data",e,t,n),kp("dataSplits",e,t,n),kp("separator",e,t,n),kp("nGramWidths",e,t,n),kp("leftPad",e,t,n),kp("rightPad",e,t,n),kp("padWidth",e,t,n),kp("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:i}=s.string.stringSplit(kp("input",e,t,n),kp("delimiter",e,t,n),kp("skipEmpty",e,t,n));return[r,a,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(kp("input",e,t,n),kp("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},zd=(e,t,n,s=E)=>{switch(e.op){case"Cast":return[s.cast(kp("x",e,t,n),kp("dtype",e,t,n))];case"ExpandDims":{const r=kp("axis",e,t,n);return[s.expandDims(kp("x",e,t,n),r)]}case"Squeeze":{const r=kp("axis",e,t,n);return[s.squeeze(kp("x",e,t,n),r)]}case"Reshape":return[s.reshape(kp("x",e,t,n),kp("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(kp("x",e,t,n),kp("padding",e,t,n),kp("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(kp("x",e,t,n),kp("padding",e,t,n),kp("constantValue",e,t,n))];case"SpaceToBatchND":{const r=kp("blockShape",e,t,n),a=kp("paddings",e,t,n);return[s.spaceToBatchND(kp("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=kp("blockShape",e,t,n),a=kp("crops",e,t,n);return[s.batchToSpaceND(kp("x",e,t,n),r,a)]}case"DepthToSpace":{const r=kp("blockSize",e,t,n),a=kp("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(kp("x",e,t,n),r,a)]}case"BroadcastTo":return[s.broadcastTo(kp("x",e,t,n),kp("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(kp("s0",e,t,n),kp("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Pd(e,t,n,s,r=A.lub){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>hd(e,t,n)));case"basic_math":return r((()=>pd(e,t,n)));case"control":return xd(e,t,n);case"convolution":return r((()=>vd(e,t,n)));case"creation":return r((()=>kd(e,t,n)));case"dynamic":return Sd(e,t,n);case"evaluation":return r((()=>Nd(e,t,n)));case"image":return r((()=>$d(e,t,n)));case"graph":return r((()=>Td(e,t,n)));case"logical":return r((()=>Ad(e,t,n)));case"matrices":return r((()=>Dd(e,t,n)));case"normalization":return r((()=>Rd(e,t,n)));case"ragged":return r((()=>_d(e,t,n)));case"reduction":return r((()=>Od(e,t,n)));case"slice_join":return r((()=>Fd(e,t,n)));case"sparse":return r((()=>Md(e,t,n)));case"spectral":return r((()=>Bd(e,t,n)));case"string":return r((()=>Ld(e,t,n)));case"transformation":return r((()=>zd(e,t,n)));case"hash_table":return Ed(e,t,n,s);case"custom":const a=wp(e.op);if(a&&a.customExecutor)return a.customExecutor(new ud(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return A.D5U.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class Ud{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Wd(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>Tp(e)[0]));let c=[];null!=s&&(c=s.map((e=>Tp(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(jd(e)||Xd(e)||qd(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const Vd=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Gd=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Hd=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function jd(e){return Vd.indexOf(e.op)>=0}function Xd(e){return Gd.indexOf(e.op)>=0}function qd(e){return Hd.indexOf(e.op)>=0}class Kd{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Kd(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const n=Wd(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(e,t,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((e=>Tp(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{s.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{s.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{s.has(e.name)&&a.push(e)}));const l=new Set,u=[];for(;a.length>0;){const e=a.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&s.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&a.push(e)}))}return u}(this.graph,this.weightMap,n)}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,A.CnY)(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[Tp(e)[0]])),r=t.map((e=>Tp(e)[0]));let a=r.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));try{this.keepIntermediateTensors=(0,A.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const l={},u={};return(0,A.lub)((()=>{const n=new Ud(this.weightMap,l,u,this.functionExecutorMap),s=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[n,r]=Tp(t),a=[];a[r]=e[t],s[n]=a,this.keepIntermediateTensors&&(this.clonedTensorsMap[n]=this.cloneTensorList(a))}));const a=this.getFrozenTensorIds(s),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!s[t.name]){const e=Pd(t,s,n,this._resourceManager);if(A.D5U.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);s[t.name]=e,this.keepIntermediateTensors&&(this.clonedTensorsMap[t.name]=this.cloneTensorList(e)),this.checkTensorForDisposal(t.name,t,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),t.map((e=>Ip(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[Np(e,n.currentContextId)]}(e.name,n,s);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!r.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,s={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,A.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new Ud(this.weightMap,s,r,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Ip(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[Tp(e)[0]])),i=n.map((e=>Tp(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=Wd(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=Tp(t),r=[];r[s]=e[t],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,l);await Promise.all(e)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!jd(e)&&!Ip(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,s,r,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&kp("isConstant",e.node,s,n)&&([c]=Sp(e.node.name,n)),null==s[e.node.name]){const h=Pd(e.node,s,n,this._resourceManager);c||([c]=Sp(e.node.name,n));const p=n.currentContext;A.D5U.isPromise(h)?u.push(h.then((u=>(s[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l),u)))):(s[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l))}else this.processChildNodes(e.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=Sp(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Ip(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Ip(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=Tp(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));A.D5U.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&A.D5U.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const s={};for(const r in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=a?s[a.name]=e[r]:s[r]=e[r]}return s}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Tp(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=s?s.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Tp(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Qd{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const Yd="?tfjs-format=file",Jd="model.json";class Zd{constructor(e,t={},n=A.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Qd}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return A.D5U.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Kd(qp.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=qp.Instance.transformGraph(e.modelInitializer);this.initializer=new Kd(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof A.esB?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof A.esB||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const s=n[t];null!=s.resourceId&&(e[t]=this.resourceIdToCapturedInput[s.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce(((t,n)=>{var r,a,i;const o=null===(i=null===(a=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[s++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let s=0;s<n.length;s++){const r=t[n[s]];this.resourceIdToCapturedInput[r.resourceId]=e[s]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,A.B90)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function ef(e,t={},n=A.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${Jd}${Yd}`}(e));const s=new Zd(e,t,n);return await s.load(),s}function tf(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,s]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(s&&s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const r=A.io.getWeightSpecs(n.weightsManifest),a=A.io.getModelArtifactsForJSONSync(n,r,s);t=A.io.fromMemorySync(a)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=A.io.fromMemorySync(e)}const n=new Zd(t);return n.load(),n}const nf="4.2.0";var sf=n(5934);function rf(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&A.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const af=A.GDt.whereImpl;class of extends A.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new A.JLz(this,(0,A.SRH)())}nextDataId(){return of.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,A.OBj)().get("IS_NODE")&&A.Wap.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&A.D5U.isString(n[0])){const r=n.map((e=>A.D5U.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return A.Wap.mergeRealAndImagArrays(e,t)}return A.D5U.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>A.D5U.decodeString(e)));return(0,A.f3b)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,A.f3b)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,A.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=A.D5U.now();return e(),{kernelMs:A.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){rf([e],"where");const t=this.readSync(e.dataId);return af(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function lf(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(rf(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=A.D5U.sizeFromShape(i.shape),c=n||i.dtype,h=A.D5U.getArrayFromDType(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,h)}}function uf(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(rf(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}of.nextDataId=0,(0,A.jqO)("cpu",(()=>new of),1);const cf=lf(A.SX0,(e=>e>=0?e:Math.exp(e)-1)),hf={kernelName:A.SX0,backendName:"cpu",kernelFunc:cf};function pf(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const df={kernelName:A.iJz,backendName:"cpu",kernelFunc:pf};function ff(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;rf([r],"leakyRelu");const i=A.D5U.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=A.D5U.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const mf={kernelName:A.J$2,backendName:"cpu",kernelFunc:ff};function gf(e){return(t,n,s,r,a)=>{const i=A.Wap.assertAndGetBroadcastShape(t,n),o=i.length,l=A.D5U.computeStrides(i),u=A.D5U.sizeFromShape(i),c=A.D5U.getTypedArrayFromDType(a,u),h=t.length,p=n.length,d=A.D5U.computeStrides(t),f=A.D5U.computeStrides(n),m=A.Wap.getBroadcastDims(t,i),g=A.Wap.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<c.length;++t){const n=A.D5U.indexToLoc(t,o,l),a=n.slice(-h);m.forEach((e=>a[e]=0));const i=A.D5U.locToIndex(a,h,d),u=n.slice(-p);g.forEach((e=>u[e]=0));const y=A.D5U.locToIndex(u,p,f);c[t]=e(s[i],r[y])}return[c,i]}}const yf=gf(((e,t)=>e<0?t*e:e));function bf(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;rf([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=yf(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const xf={kernelName:A.o0g,backendName:"cpu",kernelFunc:bf},wf=lf(A.qkr,(e=>Math.max(0,e))),vf={kernelName:A.qkr,backendName:"cpu",kernelFunc:wf},kf=lf(A.SbG,(e=>Math.min(Math.max(0,e),6))),If={kernelName:A.SbG,backendName:"cpu",kernelFunc:kf};function Sf(e){return(t,n,s)=>{const r=A.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const Nf=Sf((e=>1/(1+Math.exp(-e)))),Tf=lf(A.a5O,(e=>1/(1+Math.exp(-e)))),Cf={kernelName:A.a5O,backendName:"cpu",kernelFunc:Tf};function Ef(e,t,n,s,r){if("linear"===n)return pf({inputs:{x:t},backend:e});if("relu"===n)return wf({inputs:{x:t},backend:e});if("elu"===n)return cf({inputs:{x:t},backend:e});if("relu6"===n)return kf({inputs:{x:t},backend:e});if("prelu"===n)return bf({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return ff({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Tf({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function $f(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const Af={kernelName:A.Zz9,backendName:"cpu",kernelFunc:$f};function Df(e,t,n="float32"){if("complex64"===n)return $f({inputs:{real:Df(e,t,"float32"),imag:Df(e,t,"float32")},backend:e});const s=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Rf(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const _f={kernelName:A.xJR,backendName:"cpu",kernelFunc:Rf};function Of(e,t,n,s){if("int32"===s)return[t,"int32",Int32Array.from(e)];if("bool"===s){const s=A.D5U.toTypedArray([0],n),[r,a]=gf(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Ff(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return pf({inputs:{x:r},backend:n});const e=Df(n,r.shape,r.dtype),t=Ff({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=$f({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=Rf({inputs:{input:r},backend:n}),t=Ff({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!A.D5U.hasEncodingLoss(r.dtype,a)){const e=pf({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(r.dataId).values,[o,l,u]=Of(i,r.shape,r.dtype,a);return n.makeTensorInfo(o,l,u)}const Mf={kernelName:A.RFZ,backendName:"cpu",kernelFunc:Ff};function Bf(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;rf([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?A.Wap.fromUint8ToStringArray(l):l,h="string"===a.dtype?A.Wap.fromUint8ToStringArray(u):u,p=s||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=Ff({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=Ff({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=$f({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function Lf(e){return(t,n,s,r,a,i)=>{const o=A.Wap.assertAndGetBroadcastShape(t,n),l=A.D5U.sizeFromShape(o),u=o.length,c=A.D5U.computeStrides(o),h=A.D5U.getTypedArrayFromDType("float32",l),p=A.D5U.getTypedArrayFromDType("float32",l),d=A.Wap.getBroadcastDims(t,o),f=A.Wap.getBroadcastDims(n,o),m=A.Wap.mergeRealAndImagArrays(s,r),g=A.Wap.mergeRealAndImagArrays(a,i),y=t.length,b=A.D5U.computeStrides(t),x=n.length,w=A.D5U.computeStrides(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,p[t]=r.imag}else for(let t=0;t<h.length;t++){const n=A.D5U.indexToLoc(t,u,c),s=n.slice(-y);d.forEach((e=>s[e]=0));const r=A.D5U.locToIndex(s,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=A.D5U.locToIndex(a,x,w),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const zf=gf(((e,t)=>e+t)),Pf=Lf(((e,t,n,s)=>({real:e+n,imag:t+s}))),Uf=Bf(A.mm_,zf,Pf),Wf={kernelName:A.mm_,backendName:"cpu",kernelFunc:Uf};function Vf(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=A.D5U.sizeFromShape(r.shape),o=A.D5U.inferFromImplicitShape(a,i),l=A.D5U.sizeFromShape(o);A.D5U.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const Gf={kernelName:A.HZH,backendName:"cpu",kernelFunc:Vf};function Hf(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;rf([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=A.D5U.sizeFromShape(f),y=A.D5U.sizeFromShape(m),b=A.Jyw.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);A.D5U.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=Vf({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=Vf({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,E=A.D5U.computeStrides(w.shape),$=A.D5U.computeStrides(v.shape),[D,R,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[O,F,M]=o?[1,$[1],$[0]]:[$[1],1,$[0]],B=I*S,L=(0,A.f3b)([N,I,S],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++){const t=e%g,n=e%y;for(let s=0;s<I;s+=P){const r=Math.min(s+P,I);for(let a=0;a<S;a+=P){const i=Math.min(a+P,S);for(let o=0;o<k;o+=P){const l=Math.min(o+P,k);for(let u=s;u<r;u++)for(let s=a;s<i;s++){let r=0;for(let e=o;e<l;e++)r+=T[t*D+u*R+e*_]*C[e*O+s*F+n*M];z[e*B+(u*S+s)]+=r}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const jf={kernelName:A.XLW,backendName:"cpu",kernelFunc:Hf},Xf={kernelName:A.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=Hf({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=Uf({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=Ef(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function qf(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Kf={kernelName:A.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;rf(t,"abs");let s=new Float32Array(A.D5U.sizeFromShape(t.shape));return s=qf(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},Qf=lf(A.VGw,(e=>Math.acos(e))),Yf={kernelName:A.VGw,backendName:"cpu",kernelFunc:Qf},Jf=lf(A.SpW,(e=>Math.acosh(e))),Zf={kernelName:A.SpW,backendName:"cpu",kernelFunc:Jf},em={kernelName:A.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;rf(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=(0,A.f3b)(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function tm(e,t,n,s,r){const a=t.length,i=A.D5U.sizeFromShape(t),o=A.D5U.computeStrides(t),l=A.D5U.computeStrides(r),u=A.D5U.getTypedArrayFromDType(n,A.D5U.sizeFromShape(r));for(let t=0;t<i;++t){const n=A.D5U.indexToLoc(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[A.D5U.locToIndex(r,a,l)]=e[t]}return u}function nm(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;rf(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=tm(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const sm={kernelName:A.G3Y,backendName:"cpu",kernelFunc:nm},rm={kernelName:A.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;rf(r,"all");const o=A.D5U.parseAxisParam(a,r.shape);let l=o;const u=A.Wap.getAxesPermutation(l,r.shape.length);let c=r;null!=u&&(c=nm({inputs:{x:r},backend:n,attrs:{perm:u}}),l=A.Wap.getInnerMostAxes(l.length,r.shape.length)),A.Wap.assertAxesAreInnerMostDims("all",l,c.shape.length);const[h,p]=A.Wap.computeOutAndReduceShapes(c.shape,l),d=A.D5U.sizeFromShape(p),f=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Vf({inputs:{x:g},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},am={kernelName:A.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;rf(r,"any");const o=A.D5U.parseAxisParam(a,r.shape);let l=o;const u=A.Wap.getAxesPermutation(l,r.shape.length);let c=r;null!=u&&(c=nm({inputs:{x:r},backend:n,attrs:{perm:u}}),l=A.Wap.getInnerMostAxes(l.length,r.shape.length)),A.Wap.assertAxesAreInnerMostDims("any",l,c.shape.length);const[h,p]=A.Wap.computeOutAndReduceShapes(c.shape,l),d=A.D5U.sizeFromShape(p),f=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Vf({inputs:{x:g},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},im={kernelName:A.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;rf(r,"argMax");let i=A.D5U.parseAxisParam(a,r.shape);const o=A.Wap.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=nm({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=A.Wap.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],A.Wap.assertAxesAreInnerMostDims("argMax",i,l.shape.length);const[c,h]=A.Wap.computeOutAndReduceShapes(l.shape,i),p=A.D5U.sizeFromShape(c),d=A.D5U.makeZerosTypedArray(p,"int32"),f=A.D5U.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],s=0;for(let e=0;e<f;++e){const r=m[t+e];r>n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},om={kernelName:A.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;rf(r,"argMin");let i=A.D5U.parseAxisParam(a,r.shape);const o=A.Wap.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=nm({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=A.Wap.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],A.Wap.assertAxesAreInnerMostDims("argMin",i,l.shape.length);const[c,h]=A.Wap.computeOutAndReduceShapes(l.shape,i),p=A.D5U.sizeFromShape(c),d=A.D5U.makeZerosTypedArray(p,"int32"),f=A.D5U.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],s=0;for(let e=0;e<f;++e){const r=m[t+e];r<n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},lm=lf(A.M2y,(e=>Math.asin(e))),um={kernelName:A.M2y,backendName:"cpu",kernelFunc:lm},cm=lf(A.qw7,(e=>Math.asinh(e))),hm={kernelName:A.qw7,backendName:"cpu",kernelFunc:cm},pm=lf(A.jMg,(e=>Math.atan(e))),dm={kernelName:A.jMg,backendName:"cpu",kernelFunc:pm},fm=gf(((e,t)=>Math.atan2(e,t))),mm=Bf(A.QCc,fm),gm={kernelName:A.QCc,backendName:"cpu",kernelFunc:mm},ym=lf(A.Oyi,(e=>Math.atanh(e))),bm={kernelName:A.Oyi,backendName:"cpu",kernelFunc:ym};function xm(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,A.f3b)(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*y,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(r.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=l){const r=m+n*s[1];for(let n=c;n<p;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/w:y}}}return m}function wm(e,t,n,s,r=!1,a=!1){const i=(0,A.f3b)(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=(0,A.f3b)(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>w&&(w=u,v=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*p+l)}}i.set(v,e,n,o,t)}}return i}function vm(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,A.f3b)(r.outShape,n),w=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*v,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){const N=v*i-m;let T=N;for(;T<0;)T+=u;const C=Math.min(r.inDepth,p+N),E=n+v*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+i),v=E+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+i),g=v+n*S;let k=b,I=0,N=0;for(let n=T;n<C;n+=u){const r=x+n*s[1];for(let n=p;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<d;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?I/Math.max(N,1):k}}}}return x}const km={kernelName:A.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;rf(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=A.Wap.computePool2DInfo(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&A.D5U.arraysEqual(u.inShape,u.outShape))c=pf({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=A.D5U.computeStrides(r.shape),s=xm(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},Im={kernelName:A._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;rf(r,"avgPool3d");const c=A.Wap.computePool3DInfo(r.shape,a,i,1,o,l,u),h=vm(n.data.get(r.dataId).values,r.shape,r.dtype,A.D5U.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Sm={kernelName:A.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;rf([r,a],"avgPool3DGrad");const c=A.Wap.computePool3DInfo(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=(0,A.f3b)(a.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-N,o=r-S;let l=0;for(let n=0;n<w;n+=y){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=b){const r=(i+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=E.get(e,s,r,a,t))}}}T.set(l*C,e,n,s,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},Nm={kernelName:A.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;rf([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=A.Wap.computePool2DInfo(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=(0,A.f3b)(i.shape,"float32"),k=1/(d*f),I=n.data.get(r.dataId).values,S=(0,A.f3b)(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-w,a=s-x;let i=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(a+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=S.get(e,s,r,t))}}v.set(i*k,e,n,s,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Tm={kernelName:A.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;A.D5U.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A.D5U.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A.D5U.assert(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),rf([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*d[k++]/Math.sqrt(p[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function Cm(e,t,n,s,r){const a=A.kuN.isSliceContinous(s,t,n),i=A.D5U.sizeFromShape(n),o=A.D5U.computeStrides(s);if(a){const n=A.kuN.computeFlatOffset(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===r?A.Wap.fromUint8ToStringArray(e):e,u=(0,A.f3b)(s,r,l),c=(0,A.f3b)(n,r);for(let e=0;e<c.size;++e){const n=c.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));c.set(u.get(...s),...n)}return"string"===r?A.Wap.fromStringArrayToUint8(c.values):c.values}function Em(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;rf(r,"slice");const[o,l]=A.kuN.parseSliceParams(r,a,i);A.kuN.assertParamsValid(r,o,l);const u=Cm(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const $m={kernelName:A.p2w,backendName:"cpu",kernelFunc:Em},Am={kernelName:A.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;rf([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=A.Wap.getReshaped(r.shape,a,o),u=A.Wap.getPermuted(l.length,a.length),c=A.Wap.getReshapedPermuted(r.shape,a,o),h=A.Wap.getSliceBeginCoords(i,a.length),p=A.Wap.getSliceSize(c,i,a.length),d=Vf({inputs:{x:r},backend:n,attrs:{shape:l}}),f=nm({inputs:{x:d},backend:n,attrs:{perm:u}}),m=Vf({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Em({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Dm(e,t,n,s,r){const a=A.D5U.sizeFromShape(s),i=A.D5U.makeZerosTypedArray(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function Rm(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=(0,A.f3b)([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const _m={kernelName:A.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=Dm(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},Om={kernelName:A.eEB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=A.Wap.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Fm=Sf((e=>Math.ceil(e))),Mm=uf(A.gJX,Fm),Bm={kernelName:A.gJX,backendName:"cpu",kernelFunc:Mm},Lm=lf(A.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),zm={kernelName:A.xnO,backendName:"cpu",kernelFunc:Lm},Pm={kernelName:A.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(A.D5U.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function Um(e,t,n,s){const r=A.D5U.getArrayFromDType(n,A.D5U.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=A.D5U.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?A.Wap.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function Wm(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const Vm={kernelName:A.J_u,backendName:"cpu",kernelFunc:Wm};function Gm(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=A.D5U.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));A.Wap.assertParamsConsistent(i,a);let o=A.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===A.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>A.D5U.sizeFromShape(e.shape)>0));if(1===l.length)return pf({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>Rf({inputs:{input:e},backend:n}))),t=l.map((e=>Wm({inputs:{input:e},backend:n}))),s=Gm({inputs:e,backend:n,attrs:{axis:a}}),r=Gm({inputs:t,backend:n,attrs:{axis:a}}),i=$f({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const u=l.map((e=>{const t=A.D5U.sizeFromShape(e.shape.slice(a));return Vf({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=A.Wap.computeOutShape(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],p=Um(c,o,t[0].dtype,h),d=A.Wap.computeOutShape(l.map((e=>e.shape)),a),f=n.makeTensorInfo(d,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Hm={kernelName:A.Eh3,backendName:"cpu",kernelFunc:Gm};function jm(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;rf([r,a],"conv2d");const h=A.Wap.convertConv2DDataFormat(l),p=A.Wap.computeConv2DInfo(r.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new A.YDk(p.outShape,r.dtype),v=A.D5U.computeStrides(r.shape),k=A.D5U.computeStrides(a.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],E=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,D=x?1:w.strides[1],R=n.data.get(r.dataId).values,_=n.data.get(a.dataId).values,O=w.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<p.outHeight;++e){const s=n+e*E,r=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=r+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<p.outWidth;++e){const t=s+e*$,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=p.inWidth)continue;const r=i+s*N;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=R[r+e*T];for(let e=0;e<p.outChannels;++e)O[t+e*D]+=n*_[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const Xm={kernelName:A.mhS,backendName:"cpu",kernelFunc:jm},qm={kernelName:A.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;rf([r,a],"conv2dBackpropFilter");const h=A.Wap.convertConv2DDataFormat(l),p=A.Wap.computeConv2DInfo(r.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new A.YDk(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new A.YDk(r.shape,r.dtype,v),S=new A.YDk(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(p.outHeight,(p.inHeight+w-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(p.outWidth,(p.inWidth+x-s)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=r;e<a;++e){const n=s+e*f-x;l+=y?I.get(u,t,n,i)*S.get(u,c,e,o):I.get(u,i,t,n)*S.get(u,o,c,e)}}b.set(l,e,s,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Km={kernelName:A.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;rf([r,a],"conv2dBackpropInput");const h=A.D5U.computeStrides(a.shape),p=A.D5U.computeStrides(r.shape);let d=A.Wap.convertConv2DDataFormat(u);const f=A.Wap.computeConv2DInfo(i,a.shape,o,1,l,c,!1,d),m=new A.YDk(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:E,outHeight:$,outWidth:D,strideHeight:R,strideWidth:_}=f;d=f.dataFormat;const O=I-1-f.padInfo.top,F=S-1-f.padInfo.left,M="channelsLast"===d,B=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],U=p[0],W=M?p[1]:p[2],V=M?p[2]:1,G=M?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const s=n-O,r=Math.max(0,Math.ceil(s/R)),a=Math.min($,(I+s)/R);for(let i=0;i<C;++i){const o=i-F,l=Math.max(0,Math.ceil(o/_)),u=Math.min(D,(S+o)/_);let c=0;for(let n=r;n<a;++n){const r=n*R-s;for(let s=l;s<u;++s){const a=U*e+W*n+V*s,i=x*(I-1-r)+w*(S-1-(s*_-o))+v*t;for(let e=0;e<E;++e)c+=y[a+G*e]*b[i+e]}}g[B*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Qm={kernelName:A.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;rf([r,a],"conv3d");const u=A.Wap.computeConv3DInfo(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new A.YDk(u.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=w.values,S=A.D5U.computeStrides(r.shape),N=A.D5U.computeStrides(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*w.strides[1],r=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=r+e*d;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){const t=s+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*N[1],o=i+s*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Ym={kernelName:A.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;rf([r,a],"conv3dBackpropFilterV2");const u=A.D5U.computeStrides(r.shape),c=A.D5U.computeStrides(a.shape),h=A.Wap.computeConv3DInfo(r.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new A.YDk(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(a.dataId).values,[N,T,C,E]=c,$=n.data.get(r.dataId).values,[D,R,_,O]=u,F=h.padInfo.front,M=h.padInfo.left,B=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/p)),n=Math.min(h.outDepth,(h.inDepth+F-e)/p),s=e*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((B-r)/d)),i=Math.min(h.outHeight,(h.inHeight+B-r)/d),o=r*v+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((M-s)/f)),u=Math.min(h.outWidth,(h.inWidth+M-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*D,y=m*N;for(let m=t;m<n;++m){const t=(e+m*p-F)*R+h,n=m*T+y;for(let e=a;e<i;++e){const a=(r+e*d-B)*_+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*E+i;g+=$[(s+e*f-M)*O+a+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Jm={kernelName:A.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;rf([r],"conv3dBackpropInputV2");const u=A.D5U.computeStrides(r.shape),c=A.D5U.computeStrides(a.shape),h=A.Wap.computeConv3DInfo(l,a.shape,o,1,i),p=new A.YDk(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,w,v,k]=u,I=n.data.get(a.dataId).values,[S,N,T,C]=c,{batchSize:E,filterDepth:$,filterHeight:D,filterWidth:R,inChannels:_,inDepth:O,inHeight:F,inWidth:M,outChannels:B,outDepth:L,outHeight:z,outWidth:P,strideDepth:U,strideHeight:W,strideWidth:V}=h,G=$-1-h.padInfo.front,H=D-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<O;++n){const s=n-G,r=Math.max(0,Math.ceil(s/U)),a=Math.min(L,($+s)/U);for(let i=0;i<F;++i){const o=i-H,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(D+o)/W);for(let c=0;c<M;++c){const h=c-j,p=Math.max(0,Math.ceil(h/V)),E=Math.min(P,(R+h)/V);let A=0;for(let n=r;n<a;++n){const r=n*U-s;for(let s=l;s<u;++s){const a=s*W-o;for(let i=p;i<E;++i){const o=x*e+w*n+v*s+k*i,l=S*($-1-r)+N*(D-1-a)+T*(R-1-(i*V-h))+C*t;for(let e=0;e<B;++e)A+=b[o+e]*I[l+e]}}}d[f*e+m*n+g*i+y*c+t]=A}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Zm=lf(A.mc4,(e=>Math.cos(e))),eg={kernelName:A.mc4,backendName:"cpu",kernelFunc:Zm},tg=lf(A.TR1,(e=>Math.cosh(e))),ng={kernelName:A.TR1,backendName:"cpu",kernelFunc:tg},sg={kernelName:A.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,p,d]=r.shape,f=a.shape[0],[m,g]=o,y=(0,A.f3b)([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,v=A.D5U.computeStrides(r.shape),k=A.D5U.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],s=b[t+1],r=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<d;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(p-1)+l*f:.5*(s+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const s=n+l*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<d;s++){let a=s+h*v[2]+n*v[1]+i*v[0];const u=w[a];a=s+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=s+h*v[2]+r*v[1]+i*v[0];const p=w[a];a=s+m*v[2]+r*v[1]+i*v[0];const d=u+(c-u)*b,f=p+(w[a]-p)*b;a=s+l*k[2]+t*k[1]+e*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(p-1)+n*f:.5*(s+a)*(p-1);if(r<0||r>p-1){for(let s=0;s<d;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<d;s++){const r=s+o*v[2]+l*v[1]+i*v[0],a=s+n*k[2]+t*k[1]+e*k[0];y.values[a]=w[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},rg={kernelName:A.Byc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;rf(r,"cumprod");const l=A.Wap.getAxesPermutation([a],r.shape.length);let u=r;null!=l&&(u=nm({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=A.Wap.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=(0,A.x8V)(u.dtype,"int32"),p=A.D5U.makeOnesTypedArray(A.D5U.sizeFromShape(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?1:d[n];else{const s=m(e,t-1);p[n]=i?d[s]*p[s]:d[n]*p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=nm({inputs:{x:g},backend:n,attrs:{perm:A.Wap.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},ag={kernelName:A.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;rf(r,"cumsum");const l=A.Wap.getAxesPermutation([a],r.shape.length);let u=r;null!=l&&(u=nm({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=A.Wap.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=(0,A.x8V)(u.dtype,"int32"),p=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const s=m(e,t-1);p[n]=i?d[s]+p[s]:d[n]+p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=nm({inputs:{x:g},backend:n,attrs:{perm:A.Wap.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},ig={kernelName:A.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=Dm(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=Rm(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},og={kernelName:A.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;A.D5U.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<p;++t){const r=Math.floor(t/a),i=(s*a+t%a)*d;for(let t=0;t<d;++t){const s=t+i+c*(r+u*(n+l*e));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function lg(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;rf([r,a],"depthwiseConv2DNative");const c=A.D5U.computeStrides(r.shape),h=A.D5U.computeStrides(a.shape);let p=l;null==p&&(p=[1,1]),A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=A.Wap.computeConv2DInfo(r.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new A.YDk(d.outShape,r.dtype),I=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const s=n+e*k.strides[1],r=e*d.strideHeight-w;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=s+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=d.inWidth)continue;const r=a+e*h[1],o=i+s*d.inChannels;let l=t,u=r;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const ug={kernelName:A.cie,backendName:"cpu",kernelFunc:lg},cg={kernelName:A.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;rf([r,a],"depthwiseConv2dNativeBackpropFilter");const h=A.Wap.computeConv2DInfo(r.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new A.YDk(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,v=new A.YDk(r.shape,r.dtype,w),k=n.data.get(a.dataId).values,I=new A.YDk(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/d)),a=Math.min(h.outWidth,(h.inWidth+y-s)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=r;e<a;++e){const n=s+e*d-y;u+=v.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},hg={kernelName:A.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;rf([r,a],"depthwiseConv2DNativeBackpropInput");const h=A.D5U.computeStrides(r.shape),p=A.D5U.computeStrides(a.shape),d=A.Wap.computeConv2DInfo(c,a.shape,i,o,l,u,!0),f=new A.YDk(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[S,N,T]=p,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:D,inHeight:R,inWidth:_,outChannels:O,outHeight:F,outWidth:M,strideHeight:B,strideWidth:L}=d,z=E-1-d.padInfo.top,P=$-1-d.padInfo.left,U=O/D;for(let e=0;e<C;++e)for(let t=0;t<D;++t)for(let n=0;n<R;++n){const s=n-z,r=Math.max(0,Math.ceil(s/B)),a=Math.min(F,(E+s)/B);for(let i=0;i<_;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,($+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*B-s;for(let s=l;s<u;++s){const a=w*e+v*n+k*s,i=S*(E-1-r)+N*($-1-(s*L-o))+T*t;for(let e=0;e<U;++e)c+=x[a+(t*U+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},pg={kernelName:A.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=A.D5U.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=(0,A.f3b)([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},dg={kernelName:A.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=A.Wap.computeDilation2DInfo(s.shape,r.shape,a,i,"NHWC",o),C=A.D5U.sizeFromShape(T),E=T.length,$=A.D5U.getArrayFromDType(s.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*S;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=i+n*N;if(d>=0&&d<m){const i=A.D5U.locToIndex([e,a,d,o],c,A.D5U.computeStrides(s.shape)),f=A.D5U.locToIndex([t,n,o],p,A.D5U.computeStrides(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}$[A.D5U.locToIndex([e,t,a,o],E,A.D5U.computeStrides(T))]=l}}}return{dataId:l.write(A.D5U.toTypedArray($,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},fg={kernelName:A.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=A.D5U.toNestedArray(s.shape,u.data.get(s.dataId).values),h=A.D5U.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=A.Wap.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",l);A.D5U.assert(a.rank===N.length,(()=>`Error in ${A.Vn9}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=A.D5U.toNestedArray(N,u.data.get(a.dataId).values),C=A.D5U.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*S;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}C[o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write(A.D5U.toTypedArray(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},mg={kernelName:A.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=A.D5U.toNestedArray(s.shape,u.data.get(s.dataId).values),h=A.D5U.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=A.Wap.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",l);A.D5U.assert(a.rank===N.length,(()=>`Error in ${A.ekb}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=A.D5U.toNestedArray(N,u.data.get(a.dataId).values),C=A.D5U.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*S;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}C[e][o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write(A.D5U.toTypedArray(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},gg=gf(((e,t)=>e*t)),yg=Lf(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),bg=Bf(A.wYn,gg,yg),xg={kernelName:A.wYn,backendName:"cpu",kernelFunc:bg};function wg(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;rf(r,"sum"),o="bool"===r.dtype?Ff({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):pf({inputs:{x:r},backend:n});const l=o.shape.length,u=A.D5U.parseAxisParam(a,o.shape),c=A.Wap.getAxesPermutation(u,l);let h=u,p=o;null!=c&&(p=nm({inputs:{x:o},backend:n,attrs:{perm:c}}),h=A.Wap.getInnerMostAxes(h.length,l)),A.Wap.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[d,f]=A.Wap.computeOutAndReduceShapes(p.shape,h);let m=Df(n,d,A.Wap.upcastType(p.dtype,"int32"));const g=A.D5U.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=Vf({inputs:{x:m},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const vg={kernelName:A.GBy,backendName:"cpu",kernelFunc:wg},kg={kernelName:A.$g6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=A.Wap.decodeEinsumEquation(r,a.length);A.Wap.checkEinsumDimSizes(i.length,l,a);const{path:u,steps:c}=A.Wap.getEinsumComputePath(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=A.Wap.getEinsumPermutation(d,l[t]);let r;A.Wap.isIdentityPermutation(e)?r=a[t]:(r=nm({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);A.D5U.arraysEqual(r.shape,i)||(r=Vf({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=bg({inputs:{a:r,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=wg({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},Ig={kernelName:A.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;rf([s,r],"eluGrad");const a=new Float32Array(A.D5U.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},Sg=gf(((e,t)=>e===t?1:0)),Ng=Bf(A.hdR,Sg,null,"bool"),Tg={kernelName:A.hdR,backendName:"cpu",kernelFunc:Ng},Cg=A.Wap.ERF_P,Eg=A.Wap.ERF_A1,$g=A.Wap.ERF_A2,Ag=A.Wap.ERF_A3,Dg=A.Wap.ERF_A4,Rg=A.Wap.ERF_A5,_g=lf(A.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+Cg*n);return t*(1-((((Rg*s+Dg)*s+Ag)*s+$g)*s+Eg)*s*Math.exp(-n*n))})),Og={kernelName:A.Omj,backendName:"cpu",kernelFunc:_g},Fg=Sf((e=>Math.exp(e))),Mg=uf(A.NEP,Fg,"float32"),Bg={kernelName:A.NEP,backendName:"cpu",kernelFunc:Mg};function Lg(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(A.D5U.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),Vf({inputs:{x:r},backend:n,attrs:{shape:o}})}const zg={kernelName:A.YFo,backendName:"cpu",kernelFunc:Lg},Pg=Sf((e=>Math.expm1(e))),Ug=uf(A.Y0y,Pg),Wg={kernelName:A.Y0y,backendName:"cpu",kernelFunc:Ug},Vg=gf(((e,t)=>e/t)),Gg=Bf(A.oHH,Vg),Hg={kernelName:A.oHH,backendName:"cpu",kernelFunc:Gg},jg=gf(((e,t)=>e-t)),Xg=Lf(((e,t,n,s)=>({real:e-n,imag:t-s}))),qg=Bf(A.Tr8,jg,Xg),Kg={kernelName:A.Tr8,backendName:"cpu",kernelFunc:qg};function Qg(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=A.D5U.sizeFromShape(u),h=A.D5U.getTypedArrayFromDType("float32",c),p=A.D5U.getTypedArrayFromDType("float32",c);for(let e=0;e<r;e++){const s=Em({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=Em({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=$f({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=Yg(i,t,n),d=A.Wap.mergeRealAndImagArrays(u,c);for(let t=0;t<a;t++){const n=A.Wap.getComplexWithIndex(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=$f({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function Yg(e,t,n){const s=A.D5U.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=Jg(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",A.D5U.createScalarValue(s,"float32")),i=pf({inputs:{x:a},backend:n}),l=Hg.kernelFunc({inputs:{a:e,b:a},backend:n}),u=Hg.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=A.Wap.exponent(r*s,t,n),l=A.Wap.getComplexWithIndex(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),A.Wap.assignToTypedArray(s,a,i,r)}return s}(A.Wap.mergeRealAndImagArrays(a,i),s,t);return A.Wap.splitRealAndImagArrays(e)}var o}function Jg(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=A.Wap.mergeRealAndImagArrays(e,t),i=n/2,o=A.Wap.complexWithEvenIndex(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),d=$f({inputs:{real:h,imag:p},backend:r}),f=A.Wap.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=$f({inputs:{real:b,imag:x},backend:r}),v=Jg(l,u,i,s,r),k=v.real,I=v.imag,S=[k.length],N=r.makeTensorInfo(S,"float32",k),T=r.makeTensorInfo(S,"float32",I),C=$f({inputs:{real:N,imag:T},backend:r}),E=Jg(m,g,i,s,r),$=E.real,D=E.imag,R=[$.length],_=r.makeTensorInfo(R,"float32",$),O=r.makeTensorInfo(R,"float32",D),F=$f({inputs:{real:_,imag:O},backend:r}),M=A.Wap.exponents(n,s),B=[M.real.length],L=r.makeTensorInfo(B,"float32",M.real),z=r.makeTensorInfo(B,"float32",M.imag),P=$f({inputs:{real:L,imag:z},backend:r}),U=bg({inputs:{a:P,b:F},backend:r}),W=Uf({inputs:{a:C,b:U},backend:r}),V=qg({inputs:{a:C,b:U},backend:r}),G=Rf({inputs:{input:W},backend:r}),H=Rf({inputs:{input:V},backend:r}),j=Wm({inputs:{input:W},backend:r}),X=Wm({inputs:{input:V},backend:r}),q=Gm({inputs:[G,H],backend:r,attrs:{axis:0}}),K=Gm({inputs:[j,X],backend:r,attrs:{axis:0}}),Q=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:Q,imag:Y}}const Zg={kernelName:A.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=A.D5U.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=Vf({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Qg(i,!1,n),l=Vf({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function ey(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||A.D5U.inferDtype(r),o=A.D5U.getArrayFromDType(i,A.D5U.sizeFromShape(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const ty={kernelName:A.deh,backendName:"cpu",kernelFunc:ey},ny={kernelName:A.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=A.D5U.getTypedArrayFromDType(s.dtype,A.D5U.sizeFromShape(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const i=Math.round(l-e-1),o=t+n+s+r;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+r]),a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sy=Sf((e=>Math.floor(e))),ry=uf(A.OR,sy),ay={kernelName:A.OR,backendName:"cpu",kernelFunc:ry},iy=gf(((e,t)=>Math.floor(e/t))),oy=Bf(A.jeX,iy,null,"int32"),ly={kernelName:A.jeX,backendName:"cpu",kernelFunc:oy},uy={kernelName:A._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=jm({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=Vf({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Uf({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Uf({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const e=Vf({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Ef(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=Ef(n,m,d,o,f);n.disposeIntermediateTensorInfo(e)}return m}},cy={kernelName:A.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=lg({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=Uf({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=Ef(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function hy(e,t,n,s,r,a,i,o,l){const u=(0,A.f3b)([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const py={kernelName:A.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=A.D5U.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=A.Wap.prepareAndValidate(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=hy(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,p.values)}};function dy(e,t,n){const s=(0,A.f3b)(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}const fy={kernelName:A.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;rf([r,a],"gatherV2");const l=A.D5U.parseAxisParam(i,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let e=0;e<u.length;++e){const t=u[e];A.D5U.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=A.D5U.sizeFromShape(a.shape),d=A.Wap.segment_util.collectGatherOpShapeInfo(r,a,l,h),f=Vf({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=Vf({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=dy(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},my=gf(((e,t)=>e>t?1:0)),gy=Bf(A.iZT,my,null,"bool"),yy={kernelName:A.iZT,backendName:"cpu",kernelFunc:gy},by=gf(((e,t)=>e>=t?1:0)),xy=Bf(A.Acj,by,null,"bool"),wy={kernelName:A.Acj,backendName:"cpu",kernelFunc:xy},vy={kernelName:A.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=A.D5U.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=Vf({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Qg(i,!0,n),l=Vf({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},ky=lf(A.avt,(e=>Number.isFinite(e)?1:0),"bool"),Iy={kernelName:A.avt,backendName:"cpu",kernelFunc:ky},Sy=lf(A.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),Ny={kernelName:A.iWB,backendName:"cpu",kernelFunc:Sy},Ty=lf(A.r7n,(e=>Number.isNaN(e)?1:0),"bool"),Cy={kernelName:A.r7n,backendName:"cpu",kernelFunc:Ty},Ey=gf(((e,t)=>e<t?1:0)),$y=Bf(A.vtC,Ey,null,"bool"),Ay={kernelName:A.vtC,backendName:"cpu",kernelFunc:$y},Dy=gf(((e,t)=>e<=t?1:0)),Ry=Bf(A.CAk,Dy,null,"bool"),_y={kernelName:A.CAk,backendName:"cpu",kernelFunc:Ry};function Oy(e,t,n){const s=(t-e)/(n-1),r=A.D5U.makeZerosTypedArray(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const Fy={kernelName:A.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=Oy(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},My=Sf((e=>Math.log(e))),By=uf(A.ZbH,My),Ly={kernelName:A.ZbH,backendName:"cpu",kernelFunc:By},zy=lf(A.kU,(e=>Math.log1p(e))),Py={kernelName:A.kU,backendName:"cpu",kernelFunc:zy},Uy=gf(((e,t)=>e&&t)),Wy=Bf(A.PYm,Uy,null,"bool"),Vy={kernelName:A.PYm,backendName:"cpu",kernelFunc:Wy},Gy=lf(A.VfG,(e=>e?0:1),"bool"),Hy={kernelName:A.VfG,backendName:"cpu",kernelFunc:Gy},jy=gf(((e,t)=>e||t)),Xy=Bf(A.MZg,jy,null,"bool"),qy={kernelName:A.MZg,backendName:"cpu",kernelFunc:Xy},Ky={kernelName:A.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;rf(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,p=A.D5U.sizeFromShape(r.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(r.shape,r.dtype,d)}},Qy={kernelName:A.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;rf(i,"LRNGrad");const h=A.D5U.sizeFromShape(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),s=e-t+Math.min(p,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function Yy(e,t,n,s){const r=A.D5U.getTypedArrayFromDType(s,A.D5U.sizeFromShape(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}function Jy(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=A.D5U.parseAxisParam(a,l);let h=c;const p=A.Wap.getAxesPermutation(h,u);let d=o.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=tm(d,l,r.dtype,p,e),h=A.Wap.getInnerMostAxes(h.length,u),l=e}rf(r,"max"),A.Wap.assertAxesAreInnerMostDims("max",h,u);const[f,m]=A.Wap.computeOutAndReduceShapes(l,h),g=Yy(d,A.D5U.sizeFromShape(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=A.Wap.expandShapeToKeepDim(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const Zy={kernelName:A.YoZ,backendName:"cpu",kernelFunc:Jy},eb=gf(((e,t)=>Math.max(e,t))),tb=Bf(A.BMI,eb),nb={kernelName:A.BMI,backendName:"cpu",kernelFunc:tb},sb={kernelName:A.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;rf(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=A.Wap.computePool2DInfo(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&A.D5U.arraysEqual(u.inShape,u.outShape))c=pf({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=A.D5U.computeStrides(r.shape),s=xm(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},rb={kernelName:A.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;rf(r,"maxPool3d");const c=A.Wap.computePool3DInfo(r.shape,a,i,1,o,l,u),h=vm(n.data.get(r.dataId).values,r.shape,r.dtype,A.D5U.computeStrides(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},ab={kernelName:A.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;rf([r,a],"maxPool3DGrad");const c=A.Wap.computePool3DInfo(a.shape,i,o,1,l,u),h=function(e,t){const n=(0,A.f3b)(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+b);for(let s=0;s<t.outHeight;++s){const u=s*r-d;let p=u;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const d=r*a-f;let k=d;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let s=p;s<v;s+=o){const r=s-u;for(let a=k;a<I;a+=l){const i=a-d,o=e.get(m,t,s,a,g);o>=S&&(S=o,N=n*c*h+r*c+i)}}}n.set(N,m,y,s,r,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=(0,A.f3b)(a.shape,"float32"),N=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-v,i=s-I,o=r-k;let l=0;for(let n=0;n<b;n+=m){const s=(a+n)/p;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*w-1-h.get(e,s,a,u,t)===n*x*w+r*w+i?1:0;0!==p&&(l+=N.get(e,s,a,u,t)*p)}}}S.set(l,e,n,s,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},ib={kernelName:A.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;rf([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=A.Wap.computePool2DInfo(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=(0,A.f3b)(p.outShape,o.dtype,wm(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=(0,A.f3b)(o.shape,"float32"),S=n.data.get(r.dataId).values,N=(0,A.f3b)(r.shape,"float32",S);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-k,a=s-v;let i=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=b){const o=(a+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(e,s,o,t)===n*w+r?1:0;0!==l&&(i+=N.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},ob={kernelName:A.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;rf(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=A.Wap.computePool2DInfo(s.shape,r,a,[1,1],i),[h,p]=function(e,t,n,s,r){const a=xm(e,0,n,A.D5U.computeStrides(t),r,"max"),i=wm(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),d=l.write(h,c.outShape,s.dtype),f=l.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},lb={kernelName:A.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=A.D5U.parseAxisParam(a,r.shape),l=A.Wap.computeOutAndReduceShapes(r.shape,o)[1],u=A.D5U.sizeFromShape(l),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(h);const p=Ff({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(p);const d=Gg({inputs:{a:p,b:h},backend:n});c.push(d);const f=wg({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},ub={kernelName:A.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;rf(r,"min");const o=A.D5U.parseAxisParam(a,r.shape);let l=o;const u=A.Wap.getAxesPermutation(l,r.shape.length);let c=r;null!=u&&(c=nm({inputs:{x:r},backend:n,attrs:{perm:u}}),l=A.Wap.getInnerMostAxes(l.length,r.shape.length)),A.Wap.assertAxesAreInnerMostDims("min",l,c.shape.length);const[h,p]=A.Wap.computeOutAndReduceShapes(c.shape,l),d=A.D5U.sizeFromShape(p),f=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Vf({inputs:{x:g},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},cb=gf(((e,t)=>Math.min(e,t))),hb=Bf(A.q8u,cb),pb={kernelName:A.q8u,backendName:"cpu",kernelFunc:hb},db={kernelName:A.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;rf(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=A.D5U.computeStrides(r.shape),f=A.D5U.sizeFromShape(o),m=o.length,g=A.D5U.computeStrides(o),y=A.D5U.getTypedArrayFromDType(r.dtype,f);for(let e=0;e<f;e++){let t=A.D5U.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=A.D5U.locToIndex(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},fb=gf(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),mb=Bf(A.Vbg,fb),gb={kernelName:A.Vbg,backendName:"cpu",kernelFunc:mb};var yb=n(6377);function bb(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=A.D5U.parseAxisParam([o],r.shape),u=Jy({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=A.Wap.expandShapeToKeepDim(u.shape,l),h=Vf({inputs:{x:u},backend:n,attrs:{shape:c}}),p=qg({inputs:{a:r,b:h},backend:n}),d=Mg({inputs:{x:p},backend:n}),f=wg({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=Vf({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Gg({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const xb={kernelName:A.Gcp,backendName:"cpu",kernelFunc:bb},wb={kernelName:A.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;rf(r,"multinomial");const l=o?r:bb({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=yb.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();d[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){d[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function vb(e,t,n){const s=A.D5U.createScalarValue(-1,n);return gg([],t,s,e,n)}const kb={kernelName:A.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;rf(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=vb(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},Ib=A.GDt.nonMaxSuppressionV3Impl,Sb={kernelName:A.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;rf(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Ib(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Nb=A.GDt.nonMaxSuppressionV4Impl,Tb={kernelName:A.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;rf(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=Nb(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Cb=A.GDt.nonMaxSuppressionV5Impl,Eb={kernelName:A.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;rf(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Cb(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},$b=gf(((e,t)=>e!==t?1:0)),Ab=Bf(A.yQU,$b,null,"bool"),Db={kernelName:A.yQU,backendName:"cpu",kernelFunc:Ab},Rb={kernelName:A.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s;rf(r,"oneHot");const u=A.D5U.sizeFromShape(r.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(r.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...r.shape,i],a,c)}};function _b(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=Rf({inputs:{input:s},backend:n}),t=_b({inputs:{x:e},backend:n}),r=Wm({inputs:{input:s},backend:n}),a=_b({inputs:{x:r},backend:n}),i=$f({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return ey({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Ob={kernelName:A.RuY,backendName:"cpu",kernelFunc:_b},Fb={kernelName:A.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Rf({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=Wm({inputs:{input:r},backend:s}),i=_b({inputs:{x:a},backend:s}),o=$f({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return ey({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function Mb(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return Lg({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{A.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),A.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Gm({inputs:t.map((e=>{const t=Lg({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const Bb={kernelName:A.QiL,backendName:"cpu",kernelFunc:Mb},Lb={kernelName:A.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;rf(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=A.D5U.sizeFromShape(r.shape),h=r.shape.length,p=A.D5U.computeStrides(r.shape),d=A.D5U.sizeFromShape(o),f=o.length,m=A.D5U.computeStrides(o),g=A.D5U.getTypedArrayFromDType(r.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=A.D5U.indexToLoc(e,h,p).map(((e,t)=>e+l[t]));g[A.D5U.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},zb=gf(((e,t)=>Math.pow(e,t))),Pb=Bf(A.pe_,zb),Ub={kernelName:A.pe_,backendName:"cpu",kernelFunc:Pb};function Wb(e,t,n,s){const[r,a]=A.Wap.computeOutAndReduceShapes(e,s),i=(0,A.x8V)(t,"int32"),o=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(r),i),l=A.D5U.sizeFromShape(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const Vb={kernelName:A.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;rf(r,"prod");const o=r.shape.length,l=A.D5U.parseAxisParam(a,r.shape),u=A.Wap.getAxesPermutation(l,o);let c=l,h=r;const p=[];null!=u&&(h=nm({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),c=A.Wap.getInnerMostAxes(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Wb(h.shape,h.dtype,d,c);let y=m;return i&&(y=A.Wap.expandShapeToKeepDim(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function Gb(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function Hb(e,t,n,s,r,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=A.D5U.indexToLoc(s,t.length,A.D5U.computeStrides(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,s){const r=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let s=0;s<e.length;++s){let i=e[s],l=e[s]+1;for(let e=0;e<n.length;++e){const s=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-s[i];for(let e=i;e<l;++e)o[r].push(s[e+1]+t)}i=s[i],l=s[l]}l!==i&&(r.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:r,numValues:a}}(a,i,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,r=A.D5U.getArrayFromDType("int32",s);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),d=function(e,t,n,s,r){const a=t.slice();a[0]=r;const i=A.D5U.getArrayFromDType(n,A.D5U.sizeFromShape(a)),o=e.length;return function(e,t,n,s,r,a){const i=Gb(t,2)[1],o=Gb(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<s;++t)r[l*o+t]=e[n*i+t];++l}}(e,t,s,0===o?0:o/t[0],i,a),[i,a]}(n,s,r,c,h);return[p,d[0],d[1]]}const jb={kernelName:A.dDz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[p,d,f]=Hb(l,u,c,a.shape,a.dtype,h,i.shape),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},Xb=2147483647;function qb(e,t,n,s,r,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],p=A.D5U.getArrayFromDType("int32",h+1);p[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],r=l?s[0]:s[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&r<n||i<0&&r>n)c=0;else if(c=Math.ceil(Math.abs((r-n)/i)),c>Xb)throw new Error(`Requires ((limit - start) / delta) <= ${Xb}`);p[t+1]=p[t]+c}const d=p[h],f=A.D5U.getArrayFromDType(n,d);let m=0;for(let t=0;t<h;++t){const n=p[t+1]-p[t];let s=o?e[0]:e[t];const r=u?a[0]:a[t];for(let e=0;e<n;++e)f[m++]=s,s+=r}return[p,f]}const Kb={kernelName:A.CQl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=qb(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}};var Qb=A.Wap.RowPartitionType;class Yb{constructor(e,t,n,s,r,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=A.Wap.getRowPartitionTypesHelper(u),this.raggedRank=A.Wap.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Qb.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Qb.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Qb.VALUE_ROWIDS:return Yb.getMaxWidthValueRowID(t);case Qb.ROW_SPLITS:return Yb.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Qb[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){const t=e[a];t!==s&&(s=t,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Zb(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;A.Wap.validateDefaultValueShape(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=A.Wap.combineRaggedTensorToTensorShapes(this.raggedRank,s,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let a=0;for(let e=0;e<s;++e,a+=t)r.push(a);for(let t=s;t<e;++t)r.push(-1);return A.D5U.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,a=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(s,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<r-o;++e)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,a=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++i,i<s?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Qb.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case Qb.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${Qb[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Qb.FIRST_DIM_SIZE:return e[0];case Qb.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Qb.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Qb[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const s=Zb(t,!1),r=A.D5U.getArrayFromDType(this.valuesDType,A.D5U.sizeFromShape(s));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,a=n;let i=s.slice();i=i.slice(e+1);const o=A.D5U.sizeFromShape(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;(0,A.lub)((()=>{const t=(0,A.XLQ)(u,e),n=(0,A.UFq)(t,i);u=n.dataSync()}))}let c=0,h=0,p=0;for(let e=0;e<=l;++e){let s=e<l?t[e]:-1;if(s!==p){if(h<p){const e=r.subarray(c*o);Jb(a.subarray(h*o),e,(p-h)*o)}if(e>=l){const e=n.length;s=Math.floor(e/o)}if(s>p)if(1===this.defaultValue.length)a.subarray(p*o,s*o).fill(this.defaultValue[0]),p=s;else for(;s>p;)Jb(a.slice(p*o),u,o),++p;s<0?(c=e+1,h=p):(c=e,h=p,p=h+1)}else++p}}}function Jb(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function Zb(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function ex(e,t,n,s,r,a,i,o,l,u){return new Yb(e,t,n,s,r,a,i,o,l,u).compute()}const tx={kernelName:A.BiW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,p=o.map((e=>n.data.get(e.dataId).values)),d=o.map((e=>e.shape)),[f,m]=ex(u,r.shape,c,a.shape,a.dtype,h,i.shape,p,d,l);return n.makeTensorInfo(f,a.dtype,m)}};function nx(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return A.D5U.makeZerosTypedArray(0,s);const r=Math.abs(Math.ceil((t-e)/n)),a=A.D5U.makeZerosTypedArray(r,s);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const sx={kernelName:A.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=nx(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},rx=lf(A.$HU,(e=>1/e)),ax={kernelName:A.$HU,backendName:"cpu",kernelFunc:rx},ix={kernelName:A._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;rf(r,"resizeBilinear");const l=A.D5U.computeStrides(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(A.D5U.sizeFromShape([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(p-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*s,i=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},ox={kernelName:A.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;rf([a,r],"resizeBilinearGrad");const o=A.D5U.computeStrides(r.shape),[l,u,c,h]=r.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,d=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],v=p*u,k=p*r,I=l*u,S=l*r;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},lx={kernelName:A.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;rf(r,"resizeNearestNeighbor");const l=A.D5U.computeStrides(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let s=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},ux={kernelName:A.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;rf([a,r],"resizeNearestNeighborGrad");const o=A.D5U.computeStrides(r.shape),l=A.D5U.computeStrides(a.shape),[u,c,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*v),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-S/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const r=p+t*l[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},cx={kernelName:A.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;rf(r,"reverse");const i=r.shape.length,o=A.D5U.parseAxisParam(a,r.shape);if(0===i)return pf({inputs:{x:r},backend:n});const l=new A.YDk(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},hx={kernelName:A.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=A.D5U.getTypedArrayFromDType(s.dtype,A.D5U.sizeFromShape(s.shape)),[u,c,h,p]=s.shape,[d,f]=A.Wap.getImageCenter(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let i=0;i<p;i++){const o=[u,e,s,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*p)+w*p+i]),l[t+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},px=lf(A.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),dx={kernelName:A.e07,backendName:"cpu",kernelFunc:px},fx=Sf((e=>1/Math.sqrt(e))),mx=uf(A.bV0,fx),gx={kernelName:A.bV0,backendName:"cpu",kernelFunc:mx};function yx(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,p=t.values;if(0===s)return(0,A.f3b)(n,t.dtype);const d=(0,A.f3b)(c,t.dtype);"string"==typeof l||"number"==typeof l?d.values.fill(l):"boolean"==typeof l&&d.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?d.values[l*r+n]+=p[e*r+n]:d.values[l*r+n]=0===t.rank?p[0]:p[e*r+n]}return d}const bx={kernelName:A.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=A.Wap.calculateShapes(a,r,i),p=yx(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function xx(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function wx(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const vx={kernelName:A.nr8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=function(e,t,n,s,r,a){const i=A.D5U.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===a?xx(n,t[e+l]):wx(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},kx={kernelName:A.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;rf([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=(0,A.x8V)(r.dtype,a.dtype),h=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(r.shape),c);let p=0;const d=0===i||i>1||1===r.shape.length?1:A.D5U.sizeFromShape(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},Ix=A.Wap.SELU_SCALEALPHA,Sx=A.Wap.SELU_SCALE,Nx=lf(A.oFR,(e=>e>=0?Sx*e:Ix*(Math.exp(e)-1))),Tx={kernelName:A.oFR,backendName:"cpu",kernelFunc:Nx},Cx=lf(A.i5y,(e=>e<0?-1:e>0?1:0)),Ex={kernelName:A.i5y,backendName:"cpu",kernelFunc:Cx},$x=lf(A.RQH,(e=>Math.sin(e))),Ax={kernelName:A.RQH,backendName:"cpu",kernelFunc:$x},Dx=lf(A.wYB,(e=>Math.sinh(e))),Rx={kernelName:A.wYB,backendName:"cpu",kernelFunc:Dx},_x=Math.log(1.1920928955078125e-7)+2,Ox=lf(A.MRv,(e=>{const t=e>-_x,n=e<_x,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),Fx={kernelName:A.MRv,backendName:"cpu",kernelFunc:Ox},Mx={kernelName:A.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;rf([r],"spaceToBatchND");const o=A.D5U.sizeFromShape(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=Lb.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=A.Wap.getReshaped(u.shape,a,o,!1),h=A.Wap.getPermuted(c.length,a.length,!1),p=A.Wap.getReshapedPermuted(u.shape,a,o,!1),d=Vf({inputs:{x:u},backend:n,attrs:{shape:c}}),f=nm({inputs:{x:d},backend:n,attrs:{perm:h}}),m=Vf({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function Bx(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(A.Wap.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[A.D5U.getArrayFromDType(n,0),[0,h],A.D5U.getArrayFromDType(r,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(A.Wap.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(A.Wap.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=A.D5U.getArrayFromDType(n,t*h),p=A.D5U.getArrayFromDType(r,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=d[n],i=(0===n?0:f[n-1])+r;d[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];p[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}return[a,[t,h],p,u,c]}}const Lx={kernelName:A.O3z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=Bx(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};function zx(e,t,n,s,r){const a=A.D5U.sizeFromShape(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(A.Wap.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(A.Wap.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error(A.Wap.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/u);if(u*e!==a)throw new Error(A.Wap.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[c]=e}if(A.D5U.sizeFromShape(l)!==a)throw new Error(A.Wap.getSparseReshapeInputOutputMismatchErrorMessage(s,l));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=A.D5U.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*p[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],l]}const Px={kernelName:A.nhH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=zx(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function Ux(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error(A.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=c;const p=h.reduce(((e,t)=>e*t),1),d=A.D5U.getArrayFromDType(n,p);if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error(A.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=r[f];for(;;){let t=0;if(m<o){if(t=r[m],y===t){++m;continue}if(y>=t)throw new Error(A.Wap.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(A.Wap.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&d.fill(i,g*u,y*u);for(let t=f;t<m;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(A.Wap.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,s[t],l[0]));for(let t=0;t<u;t++)d[y*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&d.fill(i,g*u,c*u),[d,h]}const Wx={kernelName:A.w3H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=Ux(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},Vx={kernelName:A.ZjV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=Ux(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},Gx={kernelName:A.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=A.Wap.calculateShapes(a,r,o),d=!1,f=n.bufferSync(r);let m;switch(a.dtype){case"bool":m=yx(f,n.bufferSync(a),o,p,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),d);break;case"float32":case"int32":m=yx(f,n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],d);break;case"string":m=yx(f,n.bufferSync(a),o,p,c,u,l,h,A.D5U.decodeString(n.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},Hx={kernelName:A.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=A.D5U.parseAxisParam(i,r.shape)[0],l=A.Wap.prepareSplitSize(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=Em({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},jx=Sf((e=>Math.sqrt(e))),Xx=lf(A.FKq,(e=>Math.sqrt(e))),qx={kernelName:A.FKq,backendName:"cpu",kernelFunc:Xx},Kx={kernelName:A.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;rf(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Qx=gf(((e,t)=>{const n=e-t;return n*n})),Yx=Bf(A._tC,Qx),Jx={kernelName:A._tC,backendName:"cpu",kernelFunc:Yx},Zx=lf(A.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),ew={kernelName:A.h8e,backendName:"cpu",kernelFunc:Zx};function tw(e,t,n,s){const r=(0,A.f3b)(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const nw={kernelName:A.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;rf(r,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=A.kuN.sliceInfo(r.shape,a,i,o,l,u,c,h,p);let v;if(m)v=Vf({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){A.D5U.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=A.kuN.computeOutShape(b,x,w),t=Em({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=Vf({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=tw(d,n.bufferSync(r),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class sw{constructor(e,t,n,s,r,a){this.separator=A.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=A.D5U.encodeString(n),this.rightPad=A.D5U.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(p);const d=n[s+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=A.D5U.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function rw(e,t,n,s,r,a,i,o){return new sw(n,s,r,a,i,o).compute(e,t)}const aw={kernelName:A._JP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=rw(p,d,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function iw(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function ow(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;iw(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=A.D5U.getArrayFromDType("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}const lw={kernelName:A.s1s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=ow(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function uw(e,t){const n=A.D5U.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=A.D5U.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}const cw={kernelName:A.XkS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=uw(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},hw=lf(A.sEM,(e=>Math.tan(e))),pw={kernelName:A.sEM,backendName:"cpu",kernelFunc:hw},dw=lf(A.MIZ,(e=>Math.tanh(e))),fw={kernelName:A.MIZ,backendName:"cpu",kernelFunc:dw};function mw(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=(0,A.f3b)(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const gw={kernelName:A.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;rf(r,"tile");const i=mw(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},yw=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function bw(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);bw(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,i=s;for(A.D5U.swap(e,n,t),yw(e[s],r)>0&&A.D5U.swap(e,n,s);a<i;){for(A.D5U.swap(e,a,i),a++,i--;yw(e[a],r)<0;)a+=1;for(;yw(e[i],r)>0;)i-=1}0===yw(e[n],r)?A.D5U.swap(e,n,i):(i+=1,A.D5U.swap(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function xw(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=A.D5U.getTypedArrayFromDType(n,i*s),u=A.D5U.getTypedArrayFromDType("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(bw(i,s),i=i.slice(0,s)),r&&i.sort(yw);const c=t*s,h=l.subarray(c,c+s),p=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[(0,A.f3b)(c,n,l),(0,A.f3b)(c,"int32",u)]}const ww={kernelName:A.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;rf(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=xw(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},vw={kernelName:A.wx7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=A.D5U.computeStrides(r.shape),b=y[0],x=y[1],w=y[2],v=A.D5U.computeStrides(g),k=v[0],I=v[1],S=v[2],N=A.D5U.getTypedArrayFromDType(r.dtype,A.D5U.sizeFromShape(g));N.fill(l);const T=s.data.get(r.dataId).values,C=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<d;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,d=(t[3]*s+t[4]*n+t[5])/u,f=kw(c,p,o),m=kw(d,h,o);switch(i){case"nearest":a=Sw(T,h,p,b,x,w,e,m,f,r,l);break;case"bilinear":a=Nw(T,h,p,b,x,w,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*I+s*S+r]=a}return s.makeTensorInfo(g,r.dtype,N)}return{dataId:s.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function kw(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return A.D5U.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return A.D5U.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return A.D5U.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Iw(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function Sw(e,t,n,s,r,a,i,o,l,u,c){return Iw(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function Nw(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*Iw(e,t,n,s,r,a,i,h,p,u,c)+(l-p)*Iw(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*Iw(e,t,n,s,r,a,i,d,p,u,c)+(l-p)*Iw(e,t,n,s,r,a,i,d,f,u,c))}function Tw(e,t,n,s){const r=A.D5U.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new A.YDk(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new A.YDk(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)p.set(l.get(n,e,s),n,t,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const Cw={kernelName:A.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;rf(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=Tw(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},Ew={kernelName:A.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=Em({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[e]=Vf({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},$w={kernelName:A.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;rf(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=Lg({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=A.D5U.createScalarValue(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=Ng({inputs:{a:s,b:c},backend:n}),i=Ff({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=bg({inputs:{a:i,b:r},backend:n}),h=wg({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=Mb({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Aw=[Xf,Kf,Yf,Zf,Wf,em,rm,am,im,om,um,hm,dm,gm,bm,km,Im,Sm,Nm,jf,Tm,Am,_m,Om,Mf,Bm,zm,Af,Pm,Hm,Xm,qm,Km,Qm,Ym,Jm,eg,ng,sg,rg,ag,ig,og,ug,cg,hg,pg,dg,fg,mg,kg,hf,Ig,Tg,Og,Bg,zg,Wg,Zg,ty,ny,ay,ly,uy,cy,py,fy,yy,wy,df,vy,Vm,Iy,Ny,Cy,mf,Ay,_y,Fy,Ly,Py,Vy,Hy,qy,Ky,Qy,Zy,nb,sb,rb,ab,ib,ob,lb,ub,pb,db,gb,wb,xg,kb,Sb,Tb,Eb,Db,Rb,Fb,Bb,Lb,Ub,xf,Vb,jb,Kb,tx,sx,_f,Hg,ax,vf,If,Gf,ix,ox,lx,ux,cx,hx,dx,gx,bx,vx,kx,Tx,Cf,Ex,Ax,Rx,$m,xb,Fx,Mx,Lx,Px,Wx,Vx,Gx,Hx,qx,Kx,Jx,ew,nw,aw,lw,cw,Kg,vg,pw,fw,gw,ww,vw,sm,Cw,Ew,$w,Ob];for(const e of Aw)(0,A.wCN)(e);const Dw={},Rw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function _w(e,t){if(!(e in Dw)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Dw[e]}),!1),(0,A.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(Rw.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",Rw)||n.getContext("experimental-webgl",Rw):n.getContext("webgl2",Rw)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Dw[e]=n}const n=Dw[e];return null==n||n.isContextLost()?(delete Dw[e],_w(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Dw[e])}var Ow,Fw,Mw;function Bw(e,t){return[t,e]}function Lw(e){const t=A.D5U.sizeFromShape(e),n=Math.ceil(t/4);return A.D5U.sizeToSquarishShape(n)}function zw(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Pw(e,t){const n=e;let s,r,a,i,o,l,u,c,h,p;return 2===(0,A.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function Uw(e,t){const n=t();return(0,A.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Ow||(Ow={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Fw||(Fw={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Mw||(Mw={}));const Ww=5.96e-8,Vw=65504;function Gw(e){return!!((0,A.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||Ww<Math.abs(e)&&Math.abs(e)<Vw)}function Hw(e,t){return ev(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const jw=/ERROR: [0-9]+:([0-9]+):/g;function Xw(e,t){const n=jw.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>A.D5U.rightPad((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${A.D5U.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function qw(e,t){if(Uw(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Kw(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(Uw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),Uw(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),Uw(e,(()=>e.enableVertexAttribArray(o))),!0)}function Qw(e,t,n,s){Uw(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),Uw(e,(()=>e.activeTexture(e.TEXTURE0+n))),Uw(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),Uw(e,(()=>e.uniform1i(n,s)))}function Yw(e,t,n){Uw(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Uw(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Jw(e,t){Uw(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Uw(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Zw(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function ev(e,t,n){const s=Uw(e,(()=>t()));if(null==s)throw new Error(n);return s}function tv(e,t=2){return A.D5U.sizeFromShape(e.slice(0,e.length-t))}function nv(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function sv(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[tv(e),...nv(e)]),t}function rv(e){return e%2==0}function av(e,t){if(e=e.slice(-2),t=t.slice(-2),A.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(rv(n)&&rv(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&rv(e[0])&&rv(t[0])}let iv,ov;function lv(e,t){return null!=e.getExtension(t)}function uv(e){try{if(null!=_w(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function cv(e){const t=Pw(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function hv(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&A.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const pv=(0,A.OBj)();function dv(){let e,t,n,s,r,a,i,o,l,u;return 2===(0,A.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=(0,A.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function fv(e,t,n="index"){const s=A.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function mv(e,t,n="index"){const s=A.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function gv(e){const t=A.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}pv.registerFlag("HAS_WEBGL",(()=>pv.getNumber("WEBGL_VERSION")>0)),pv.registerFlag("WEBGL_VERSION",(()=>uv(2)?2:uv(1)?1:0)),pv.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),pv.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===pv.get("WEBGL_VERSION"))),pv.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),pv.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),pv.registerFlag("WEBGL_PACK",(()=>pv.getBool("HAS_WEBGL"))),pv.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_PACK_CLIP",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_PACK_REDUCE",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_LAZILY_UNPACK",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_CONV_IM2COL",(()=>pv.getBool("WEBGL_PACK"))),pv.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==iv){const t=_w(e);iv=t.getParameter(t.MAX_TEXTURE_SIZE)}return iv}(pv.getNumber("WEBGL_VERSION")))),pv.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==ov){const t=_w(e);ov=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ov)}(pv.getNumber("WEBGL_VERSION")))),pv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=pv.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=_w(e);return t=lv(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:lv(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),pv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>pv.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!A.C2$.isMobile())),pv.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=_w(e);if(1===e){if(!lv(t,"OES_texture_float"))return!1}else if(!lv(t,"EXT_color_buffer_float"))return!1;return cv(t)}(pv.getNumber("WEBGL_VERSION")))),pv.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!pv.getBool("WEBGL_FORCE_F16_TEXTURES")&&pv.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),pv.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=_w(e);if(1!==e){if(lv(t,"EXT_color_buffer_float"))return cv(t);const e="EXT_color_buffer_half_float";if(lv(t,e)){const n=t.getExtension(e);return function(e,t){const n=Pw(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!lv(t,"OES_texture_float")&&!!lv(t,"WEBGL_color_buffer_float")&&cv(t)}(pv.getNumber("WEBGL_VERSION")))),pv.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=pv.getNumber("WEBGL_VERSION"))&&null!=_w(e).fenceSync;var e})),pv.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>pv.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),pv.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),pv.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>A.C2$.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),pv.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),pv.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),pv.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),pv.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),pv.registerFlag("WEBGL_EXP_CONV",(()=>!1)),pv.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>pv.getBool("IS_TEST"))),pv.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),pv.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),pv.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),pv.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const yv="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:bv}=A.Wap;function xv(e,t,n){const s=[];if(e.forEach((e=>{const t=A.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=$v(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?vv(e,s):wv(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=bv(e.shapeInfo.logicalShape,t.logicalShape),l=Ev(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===A.D5U.sizeFromShape(e.shapeInfo.logicalShape),m=1===A.D5U.sizeFromShape(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&A.D5U.arraysEqual(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=Ev(l),c=bv(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${s}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=dv(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${kv}\n    ${Iv}\n    ${Sv}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(A.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return A.D5U.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${mv(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=fv(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${mv(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=fv(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=fv(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=fv(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=Nv),[h,l,c,r,u,a,n.userCode].join("\n")}function wv(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Tv(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${Cv(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Tv(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&A.D5U.arraysEqual(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=A.D5U.squeezeShape(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${wv(Av(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${Dv(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Cv(e)}\n      }\n    `;const u=a[0],c=a[1],h=Tv(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=A.D5U.squeezeShape(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${wv(Av(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Dv(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${Cv(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=Tv(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=A.D5U.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${wv(Av(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Dv(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${Cv(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=Tv(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=A.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${wv(Av(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Dv(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${Cv(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${Tv(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=A.D5U.squeezeShape(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${wv(Av(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Dv(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Cv(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${Tv(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function vv(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${dv().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=dv();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=dv();if(null!=a&&A.D5U.arraysEqual(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${vv(Av(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Dv(a,s)});\n        }\n      `}const o=dv();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=dv();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${s}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const kv="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Iv="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Sv="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Nv="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Tv(e){return`offset${e}`}function Cv(e){const t=e.name,n=A.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Ev(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function $v(e,t,n){const{newShape:s,keptDims:r}=A.D5U.squeezeShape(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!A.D5U.arraysEqual(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function Av(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Dv(e,t){return t.map((t=>e[t])).join(", ")}function Rv(e,t,n){const s={},r={},a={},i=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===(0,A.OBj)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];s[o]=e.getUniformLocation(n,o,p),s[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(r[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",p),u=e.getUniformLocation(n,"outShapeStrides",p),l=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,s)=>{i[s]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function _v(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!A.D5U.arraysEqual(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!A.D5U.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function Ov(e){return(0,A.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Fv{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ow.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=dv();this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?mv(["r","c","d"],e):fv(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Mv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ow.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=dv();this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?mv(["r","c","d"],e):fv(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Bv{constructor(e){this.variableNames=["A"],this.outTexUsage=Fw.DOWNLOAD;const t=dv();this.outputShape=e,this.userCode=`\n      ${yv}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Lv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Fw.DOWNLOAD;const t=dv();this.outputShape=e,this.userCode=`\n      ${yv}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const zv={R:0,G:1,B:2,A:3};class Pv{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=dv();this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${zv[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":gv(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${a}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class Uv{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=dv();this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":gv(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function Wv(e,t,n,s,r,a){!function(e,t){const n=(0,A.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return ev(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return Uw(e,(()=>e.bindTexture(o,i))),Uw(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Uw(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Uw(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),Uw(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,A.OBj)().getNumber("WEBGL_VERSION")?Uw(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):Uw(e,(()=>e.texStorage2D(o,1,s,t,n))),Uw(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function Vv(e){return e.internalFormatFloat}function Gv(e){return e.internalFormatHalfFloat}function Hv(e){return e.downloadTextureFormat}function jv(e){return e.internalFormatPackedFloat}function Xv(e){return e.internalFormatPackedHalfFloat}class qv{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,A.OBj)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){Dw[e]=t}(t,e)):this.gl=_w(t),e=this.gl,2===(0,A.OBj)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>Uw(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>Uw(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>Uw(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>Uw(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Uw(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>Uw(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>Uw(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>Uw(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,A.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Hw(this.gl,e),lv(this.gl,t))this.textureHalfFloatExtension=Hw(this.gl,t);else if((0,A.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),lv(this.gl,s))this.colorBufferHalfFloatExtension=Hw(this.gl,s);else if((0,A.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",lv(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!lv(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=ev(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Uw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Uw(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=ev(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Uw(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),Uw(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return ev(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Pw(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,A.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Uw(e,(()=>e.finish())),Uw(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Uw(e,(()=>e.deleteFramebuffer(this.framebuffer))),Uw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Uw(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Uw(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Bw(t,n);return Wv(e,r,a,Vv(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Bw(t,n);return Wv(e,r,a,Gv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=Bw(t,n);return Wv(e,r,a,Hv(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Uw(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,A.OBj)().getNumber("WEBGL_VERSION")?Uw(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Uw(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,A.OBj)().getNumber("WEBGL_VERSION")?Uw(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Uw(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Uw(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;Uw(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===(0,A.OBj)().getNumber("WEBGL_VERSION")?Uw(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):Uw(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),Uw(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=zw(t,n);return Wv(e,r,a,Xv(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=zw(t,n);return Wv(e,r,a,jv(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Jw(this.gl,this.framebuffer),this.outputTexture=null),Uw(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=Bw(t,n),i=new Uint8Array(t*n*4);return Uw(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=zw(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();Uw(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return Uw(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),Uw(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Uw(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,A.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return Uw(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=dv();return function(e,t){const n=ev(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Uw(e,(()=>e.shaderSource(n,t))),Uw(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return ev(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);let s;return Uw(t,(()=>t.attachShader(n,this.vertexShader))),Uw(t,(()=>t.attachShader(n,e))),function(e,t){if(Uw(e,(()=>e.linkProgram(t))),!(0,A.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),s=Object.assign(n,{vao:this.createVertexArray()}),this.bindVertexArray(s.vao),Uw(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),console.assert(function(e,t,n){return Uw(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Kw(e,t,"clipSpacePos",n,3,20,0)&&Kw(e,t,"uv",n,2,20,12)}(t,s,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&qw(t,s),this.setProgram(s),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(Uw(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&qw(this.gl,this.program)),Uw(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return ev(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Uw(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Qw(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=zw(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&qw(this.gl,this.program),Zw(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Uw(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Uw(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Hw(this.gl,2===(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await A.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,A.OBj)().platform&&(n=(0,A.OBj)().platform.setTimeoutCustom.bind((0,A.OBj)().platform)),A.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Yw(this.gl,e,this.framebuffer),this.debug&&Zw(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Yw(this.gl,this.outputTexture,this.framebuffer),this.debug&&Zw(this.gl)):Jw(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;Yw(s,e,this.framebuffer),this.debug&&Zw(s),this.outputTexture=e,Uw(s,(()=>s.viewport(0,0,t,n))),Uw(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),Uw(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Kv,bincountImpl:Qv,bincountReduceImpl:Yv,castImpl:Jv,ceilImpl:Zv,concatImpl:ek,equalImpl:tk,expImpl:nk,expm1Impl:sk,floorImpl:rk,gatherNdImpl:ak,gatherV2Impl:ik,greaterImpl:ok,greaterEqualImpl:lk,lessImpl:uk,lessEqualImpl:ck,linSpaceImpl:hk,logImpl:pk,maxImpl:dk,maximumImpl:fk,minimumImpl:mk,multiplyImpl:gk,negImpl:yk,notEqualImpl:bk,prodImpl:xk,raggedGatherImpl:wk,raggedRangeImpl:vk,raggedTensorToTensorImpl:kk,rangeImpl:Ik,rsqrtImpl:Sk,scatterImpl:Nk,sigmoidImpl:Tk,simpleAbsImpl:Ck,sliceImpl:Ek,sparseFillEmptyRowsImpl:$k,sparseReshapeImpl:Ak,sparseSegmentReductionImpl:Dk,sqrtImpl:Rk,stridedSliceImpl:_k,stringNGramsImpl:Ok,stringSplitImpl:Fk,stringToHashBucketFastImpl:Mk,subImpl:Bk,tileImpl:Lk,topKImpl:zk,transposeImpl:Pk,uniqueImpl:Uk}=$;function Wk(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Vk(e,t){return 1===t?[e]:Wk(e,t)}class Gk{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Ov(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Vk("rc",this.rank),t=Ev(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Hk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):fv(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":gv(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class jk{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=qk(t,n),r=Kk(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=Xk(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===Mw.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Mw.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Mw.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Mw.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Mw.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=qk(n,s),a=Kk(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Xk(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=(0,A.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Xk(e,t,n,s,r){const a=function(e,t){switch(e){case Mw.PACKED_2X2_FLOAT32:return jv(t);case Mw.PACKED_2X2_FLOAT16:return Xv(t);case Mw.UNPACKED_FLOAT32:return Vv(t);case Mw.UNPACKED_FLOAT16:return Gv(t);case Mw.PACKED_4X1_UNSIGNED_BYTE:return Hv(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=zw(e[0],e[1]);i=t*n}else{const[t,n]=Bw(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function qk(e,t){if(e===Fw.UPLOAD)return Mw.PACKED_2X2_FLOAT32;if(e===Fw.RENDER||null==e)return function(e){return(0,A.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Mw.PACKED_2X2_FLOAT32:Mw.UNPACKED_FLOAT32:e?Mw.PACKED_2X2_FLOAT16:Mw.UNPACKED_FLOAT16}(t);if(e===Fw.DOWNLOAD||e===Fw.PIXELS)return Mw.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Kk(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Qk{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Yk="if (isnan(x)) return x;",Jk="return x;",Zk="return abs(x);",eI="return (x >= 0.0) ? x : (exp(x) - 1.0);",tI=Yk+"\n  return (x < 0.0) ? 0.0 : x;\n",nI=Yk+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",sI="return x;",rI="return 1.0 / (1.0 + exp(-1.0 * x));",aI="return x;",iI="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",oI="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",lI="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",uI="return 1.0 / (1.0 + exp(-1.0 * x));";class cI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class hI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length);const t=e.length,n=Vk("rc",t),s=Ev(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const pI=A.GDt.whereImpl,dI={},fI=(0,A.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class mI extends A.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,A.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof qv)t=e;else{const n=_w((0,A.OBj)().getNumber("WEBGL_VERSION"),e);t=new qv(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=_w((0,A.OBj)().getNumber("WEBGL_VERSION"));t=new qv(e),this.binaryCache=((n=(0,A.OBj)().getNumber("WEBGL_VERSION"))in dI||(dI[n]={}),dI[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new jk(this.gpgpu),this.numMBBeforeWarning=null==(0,A.OBj)().global.screen?1024:(0,A.OBj)().global.screen.height*(0,A.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new A.JLz(this,(0,A.SRH)())}nextDataId(){return mI.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const l=sv(t),u=new Pv(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if(((0,A.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,A.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:Fw.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if((0,A.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:Fw.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new cI(i,sI):new Qk(i,sI);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=A.D5U.now()),"complex64"===s){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);c=A.Wap.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=A.D5U.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new cI(s,sI):new Qk(s,sI);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,A.OBj)().getBool("DEBUG")&&!(0,A.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,A.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&(0,A.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...Lw(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=A.Wap.mergeRealAndImagArrays(t,n)}else if(null==c)u=this.getValuesFromTexture(e);else{const e=A.D5U.sizeFromShape(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;Uw(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,A.SRH)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new cI(r,sI):new Qk(r,sI);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=(0,A.SRH)().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>A.D5U.decodeString(e)));return(0,A.f3b)(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,A.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Gw(n)){if((0,A.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=A.D5U.sizeFromShape(t);if((0,A.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...Lw(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=(0,A.OBj)().getBool("WEBGL_PACK")&&!0===s,i=a?sv(t):t,o=a?new Lv(i):new Bv(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=A.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=A.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=A.D5U.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:A.D5U.now(),endMs:null}}endTimer(e){return(0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=A.D5U.now(),e)}async getQueryTime(e){if((0,A.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=fI){return(0,A.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&A.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){A.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return pI(e.shape,t)}packedUnaryOp(e,t,n){const s=new cI(e.shape,t),r=this.compileAndRun(s,[e],n);return(0,A.SRH)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Ck(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,A.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Zk,e.dtype);const t=new Qk(e.shape,Zk),n=this.compileAndRun(t,[e]);return(0,A.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&A.D5U.isString(n[0])){const r=n.map((e=>A.D5U.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return(0,A.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new hI(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Gk(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[tv(e.shape),...nv(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[tv(t),...nv(t)],a=new Hk(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(null!=t){const e=A.D5U.sizeFromShape(r),n=t[0]*t[1]*4;A.D5U.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=sv(r);let o;o=s?new Mv(i):new Fv(i);const l=[null!=t?t:Lw(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Ow.DENSE){const t=null!=a?a:Lw(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===A.D5U.sizeFromShape(i.shape))return o.values=A.D5U.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&A.D5U.sizeFromShape(t.shape)<=(0,A.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!av(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=$v(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=A.D5U.computeStrides(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&A.D5U.arraysEqual(t.shape,a),f=1===A.D5U.sizeFromShape(t.shape),m=A.Wap.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&A.D5U.arraysEqual(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${(0,A.OBj)().getNumber("WEBGL_VERSION")}`,a}(e,u,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=xv(r,i,t),l=function(e,t){const n=ev(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Uw(e,(()=>e.shaderSource(n,t))),Uw(e,(()=>e.compileShader(n))),(0,A.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Xw(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return(0,A.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},Rv(e,t,u))}(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),(0,A.OBj)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(_v(t.inShapeInfos,n),_v([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===(0,A.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=$v(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(A.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,s)}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=A.D5U.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const a=t.customUniformLocations[s],i=r[s];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,p,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=(0,A.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=A.D5U.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,A.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,A.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,A.lub)((()=>{if(!(0,A.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,A.OBj)().getBool("DEBUG");(0,A.OBj)().set("DEBUG",!1);const t=this.abs((0,A.iD$)(1e-8)).dataSync()[0];if((0,A.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=A.D5U.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=(0,A.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=(0,A.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&(0,A.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?A.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=A.D5U.squeezeShape(e);e=t.newShape}let r=A.D5U.sizeFromShape(e),a=null;e.length<=1&&r<=n?a=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>s&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=tv(e);let n=2,s=2;e.length&&([n,s]=nv(e)),r=t*(n/2)*(s/2),a=A.D5U.sizeToSquarishShape(r).map((e=>2*e))}else a=A.D5U.sizeToSquarishShape(r);return a}(n,o),t.texShape=c),null!=r){const e=sv(n);let a,i=c[1],h=c[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&p||([i,h]=zw(c[0],c[1])),a=o?new Uv(e,p):new Pv(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,s),m=this.texData.get(f.dataId);m.usage=p?Fw.PIXELS:Fw.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],s,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,(0,A.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=A.D5U.now()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*A.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,A.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Xw(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=Rv(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:r,width:a,channels:i}=e,o=(0,A.SRH)().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,r,a,i);return(0,A.SRH)().makeTensorFromDataId(l,t,n,o)}}mI.nextDataId=0,A.C2$.isBrowser()&&(0,A.jqO)("webgl",(()=>new mI),2);const gI="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class yI{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=A.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Ov(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const bI="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class xI{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=A.Wap.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=Ov(r);let a="";if(s)if(0===r||1===A.D5U.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${Ev(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Vk("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function wI(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const vI={kernelName:A.iJz,backendName:"webgl",kernelFunc:wI};function kI(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=wI({inputs:{x:s},backend:n}),l=wI({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const II={kernelName:A.Zz9,backendName:"webgl",kernelFunc:kI},SI="return (a < 0.) ? b * a : a;",NI="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",TI={kernelName:A.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",A.D5U.createScalarValue(a,"float32")),o=(0,A.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xI(NI,r.shape,i.shape):new yI(SI,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},CI="return (a < 0.) ? b * a : a;",EI="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",$I={kernelName:A.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=(0,A.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xI(EI,s.shape,r.shape):new yI(CI,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}},AI="if (isnan(x)) return x;";function DI({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=(0,A.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new cI(i.shape,t):new Qk(i.shape,e),o.runWebGLProgram(u,[i],l)}}function RI({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new yI(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],(0,A.x8V)(n.dtype,s.dtype))})),a=kI({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||(0,A.x8V)(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?A.Wap.fromUint8ToStringArray(e):e,s="string"===l.dtype?A.Wap.fromUint8ToStringArray(t):t,[a,i]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=(0,A.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new xI(t,l.shape,u.shape,n):new yI(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function _I(e,t=!1){if("linear"===e)return t?aI:Jk;if("relu"===e)return t?oI:tI;if("elu"===e)return t?iI:eI;if("relu6"===e)return t?lI:nI;if("prelu"===e)return t?EI:CI;if("leakyrelu"===e)return t?NI:SI;if("sigmoid"===e)return t?uI:rI;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class OI{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Ov(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const FI={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class MI{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=A.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const BI="return a * b;";function LI(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=A.Wap.upcastType(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new MI(FI.REAL,s.shape,r.shape),i=new MI(FI.IMAG,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=kI({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=gk(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=(0,A.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xI(BI,s.shape,r.shape):new yI(BI,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const zI={kernelName:A.wYn,backendName:"webgl",kernelFunc:LI};function PI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=A.D5U.sizeFromShape(r.shape),l=A.D5U.inferFromImplicitShape(a,o),u=A.D5U.sizeFromShape(l);A.D5U.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||av(r.shape,l)||null!==c.texture&&av(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[tv(e.shape),...nv(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[tv(t),...nv(t)],i=new Hk(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const UI={kernelName:A.HZH,backendName:"webgl",kernelFunc:PI};class WI{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${A.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class VI{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function GI(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=A.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new WI({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new WI({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new VI({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class HI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=Ev(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class jI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Ev(this.rank),r=Wk("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function XI(e,t,n){const s=(0,A.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jI(e.shape,t):new HI(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function qI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=A.D5U.parseAxisParam(r,e.shape);let o=i;const l=A.Wap.getAxesPermutation(o,a),u=null!=l;let c=e;u&&(c=XI(e,l,s),o=A.Wap.getInnerMostAxes(o.length,a)),A.Wap.assertAxesAreInnerMostDims("sum",o,a);const[h,p]=A.Wap.computeOutAndReduceShapes(c.shape,o);let d=h;n&&(d=A.Wap.expandShapeToKeepDim(h,i));const f=A.D5U.sizeFromShape(p),m=PI({inputs:{x:c},attrs:{shape:[A.D5U.sizeFromShape(e.shape)/f,f]},backend:s}),g=GI(m,(0,A.z4k)(e.dtype),"sum",s),y=PI({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const KI={kernelName:A.GBy,backendName:"webgl",kernelFunc:qI};function QI(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=Pk(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=XI(r,a,i);return u}const YI={kernelName:A.G3Y,backendName:"webgl",kernelFunc:QI},JI=1e3;function ZI({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=s?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=A.D5U.sizeFromShape(m),b=A.D5U.sizeFromShape(g),x=A.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);A.D5U.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=n?[y,h,d]:[y,d,h],v=s?[b,f,p]:[b,p,f],k=PI({inputs:{x:e},backend:r,attrs:{shape:w}}),I=PI({inputs:{x:t},backend:r,attrs:{shape:v}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,E=null!=i,$="leakyrelu"===l,D=null!=l?_I(l,!0):null;let R;if((1===d||1===f)&&T>JI&&!1===(C||E||$||null!=D)){let e=k,t=I;n&&(e=QI({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),S.push(e)),s&&(t=QI({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let i=e;1!==f&&(i=PI({inputs:{x:e},backend:r,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let l=t;a&&(l=PI({inputs:{x:t},backend:r,attrs:{shape:[N,1,T]}}),S.push(l));const u=LI({inputs:{a:i,b:l},backend:r});R=qI({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{const l=(0,A.x8V)(e.dtype,t.dtype),u=new OI(w,v,[N,d,f],n,s,C,D,E,$),c=[k,I];if(null!=a&&c.push(a),E&&c.push(i),$){const e=r.makeTensorInfo([],"float32",A.D5U.createScalarValue(o,"float32"));c.push(e),S.push(e)}R=r.runWebGLProgram(u,c,l)}const _=PI({inputs:{x:R},backend:r,attrs:{shape:x}});S.push(R);for(const e of S)r.disposeIntermediateTensorInfo(e);return _}const eS={kernelName:A.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return ZI({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},tS="return abs(x);",nS={kernelName:A.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=Ck(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=(0,A.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new cI(s.shape,tS):new Qk(s.shape,tS),n.runWebGLProgram(r,[s],s.dtype)}},sS=DI({opSnippet:Yk+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),rS={kernelName:A.VGw,backendName:"webgl",kernelFunc:sS},aS=DI({opSnippet:Yk+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),iS={kernelName:A.SpW,backendName:"webgl",kernelFunc:aS},oS="return a + b;",lS=RI({opSnippet:oS,packedOpSnippet:oS,supportsComplex:!0,cpuKernelImpl:Kv}),uS={kernelName:A.mm_,backendName:"webgl",kernelFunc:lS};class cS{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class hS{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const pS={kernelName:A.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return wI({inputs:{x:r[0]},backend:s});if(r.length>(0,A.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>(0,A.x8V)(e,t))),i=r.map((e=>e.shape)),o=(0,A.OBj)().getBool("WEBGL_PACK")?new hS(r[0].shape,i):new cS(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},dS={kernelName:A.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=A.D5U.parseAxisParam(a,r.shape);let u=l;const c=A.Wap.getAxesPermutation(u,o);let h=r;null!=c&&(h=QI({inputs:{x:r},backend:n,attrs:{perm:c}}),u=A.Wap.getInnerMostAxes(u.length,o)),A.Wap.assertAxesAreInnerMostDims("all",u,o);const[p,d]=A.Wap.computeOutAndReduceShapes(h.shape,u),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,A.D5U.sizeFromShape(d)]}}),m=GI(f,f.dtype,"all",n);let g;return g=PI(i?{inputs:{x:m},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},fS={kernelName:A.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=A.D5U.parseAxisParam(a,r.shape);let u=l;const c=A.Wap.getAxesPermutation(u,o);let h=r;null!=c&&(h=QI({inputs:{x:r},backend:n,attrs:{perm:c}}),u=A.Wap.getInnerMostAxes(u.length,o)),A.Wap.assertAxesAreInnerMostDims("any",u,o);const[p,d]=A.Wap.computeOutAndReduceShapes(h.shape,u),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,A.D5U.sizeFromShape(d)]}}),m=GI(f,f.dtype,"any",n);let g;return g=PI(i?{inputs:{x:m},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class mS{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class gS{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=Ev(o),u=Vk("coords",o);let c,h;if(1===a){h=o+1;const e=Ev(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=Vk("sourceLocR",h-1).concat("inIdx.r"),g=Vk("sourceLocG",h-1).concat("inIdx.g"),y=Vk("sourceLocB",h-1).concat("inIdx.b"),b=Vk("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function yS(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=A.Wap.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new mS(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=yS(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function bS(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=r[r.length-1],i=A.Wap.computeOptimalWindowSize(a),o=new gS(r,i,n,null==s),l=null==s?[t]:[t,s],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){const s=bS(e,t,n,u);return e.disposeIntermediateTensorInfo(u),s}return u}function xS(e,t,n,s){const r=[n];if(A.Wap.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!(0,A.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=A.Wap.computeOutAndReduceShapes(i.shape,r),u=A.D5U.sizeFromShape(l),c=PI({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=yS(e,c,s);n.push(h);const p=PI({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return bS(e,t,s)}const wS={kernelName:A.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=A.D5U.parseAxisParam(a,r.shape);const o=A.Wap.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=QI({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=A.Wap.getInnerMostAxes(i.length,l.shape.length)),A.Wap.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const c=xS(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},vS={kernelName:A.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=A.D5U.parseAxisParam(a,r.shape);const o=A.Wap.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=QI({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=A.Wap.getInnerMostAxes(i.length,l.shape.length)),A.Wap.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const c=xS(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},kS=DI({opSnippet:Yk+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),IS={kernelName:A.M2y,backendName:"webgl",kernelFunc:kS},SS=DI({opSnippet:Yk+"return log(x + sqrt(x * x + 1.0));"}),NS={kernelName:A.qw7,backendName:"webgl",kernelFunc:SS},TS=DI({opSnippet:Yk+"\n  return atan(x);\n"}),CS={kernelName:A.jMg,backendName:"webgl",kernelFunc:TS},ES=RI({opSnippet:gI+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+bI+"\n  return result;\n"}),$S={kernelName:A.QCc,backendName:"webgl",kernelFunc:ES},AS=DI({opSnippet:Yk+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),DS={kernelName:A.Oyi,backendName:"webgl",kernelFunc:AS};class RS{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class _S{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const OS={kernelName:A.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;hv(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=A.Wap.computePool2DInfo(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&A.D5U.arraysEqual(u.inShape,u.outShape))return wI({inputs:{x:r},backend:n});const c=new RS(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},FS={kernelName:A._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=A.Wap.computePool3DInfo(r.shape,a,i,[1,1,1],o,l,u),h=new _S(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class MS{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BS{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const LS={kernelName:A.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=A.Wap.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new BS(h);return n.runWebGLProgram(p,[r],i.dtype)}},zS={kernelName:A.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;hv([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=A.Wap.computePool2DInfo(i.shape,o,l,1,u),h=new MS(c);return n.runWebGLProgram(h,[r],i.dtype)}},PS={kernelName:A.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return ZI({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class US{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],A.Wap.assertAndGetBroadcastShape(e,t),A.Wap.assertAndGetBroadcastShape(e,n);let i="0.0";null!=s&&(A.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(A.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class WS{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],A.Wap.assertAndGetBroadcastShape(e,t),A.Wap.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=s&&(A.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(A.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const VS={kernelName:A.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;A.D5U.assert(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A.D5U.assert(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A.D5U.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=(0,A.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new WS(s.shape,r.shape,a.shape,c,h,l):new US(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class GS{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ev(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return HS.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${HS[t]} = start[${t}] + coords.${HS[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const HS=["x","y","z","w","u","v"];class jS{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ev(this.rank),n=Vk("coords",this.rank),s=Vk("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function XS(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=A.kuN.parseSliceParams(r,a,i);if(A.kuN.assertParamsValid(r,o,l),0===A.D5U.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=Ek(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=A.kuN.isSliceContinous(r.shape,o,l);if(u||!c){const e=(0,A.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jS(l):new GS(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=A.kuN.computeFlatOffset(t,A.D5U.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const qS={kernelName:A.p2w,backendName:"webgl",kernelFunc:XS},KS={kernelName:A.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;A.D5U.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=A.Wap.getReshaped(r.shape,a,o),u=A.Wap.getPermuted(l.length,a.length),c=A.Wap.getReshapedPermuted(r.shape,a,o),h=A.Wap.getSliceBeginCoords(i,a.length),p=A.Wap.getSliceSize(c,i,a.length),d=[],f=PI({inputs:{x:r},backend:n,attrs:{shape:l}}),m=QI({inputs:{x:f},backend:n,attrs:{perm:u}}),g=PI({inputs:{x:m},backend:n,attrs:{shape:c}}),y=XS({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},QS={kernelName:A.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=Qv(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},YS={kernelName:A.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=A.Wap.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},JS=RI({opSnippet:"return float(a != b);",cpuKernelImpl:bk,dtype:"bool"}),ZS={kernelName:A.yQU,backendName:"webgl",kernelFunc:JS};function eN(e){const{inputs:t,backend:n}=e,{input:s}=t;return wI({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const tN={kernelName:A.xJR,backendName:"webgl",kernelFunc:eN},nN={kernelName:A.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return wI({inputs:{x:a},backend:s});const t=A.lls(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=kI({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=eN({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!A.D5U.hasEncodingLoss(a.dtype,i)){const e=wI({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,[t,n,r]=Jv(e,a.shape,a.dtype,i);return s.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new Qk(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",A.D5U.getTypedArrayFromDType("bool",1)),t=JS({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},sN="return ceil(x);",rN=DI({opSnippet:sN,packedOpSnippet:sN,cpuKernelImpl:Zv}),aN={kernelName:A.gJX,backendName:"webgl",kernelFunc:rN};class iN{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class oN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const lN={kernelName:A.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=(0,A.OBj)().getBool("WEBGL_PACK_CLIP")?new oN(r.shape):new iN(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class uN{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function cN(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const hN={kernelName:A.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new uN(s.shape),i=[cN(s,r.complexTensorInfos.real),cN(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class pN{constructor(e){this.outputShape=[],this.outputShape=A.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class dN{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=A.Wap.computeOutShape(e,t);const n=this.outputShape,s=n.length,r=Ev(s),a=Vk("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${fN(i,l,t)}),\n            vec2(${fN(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${fN(i,l,d)}),\n          vec2(${fN(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function fN(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function mN(e){const{inputs:t,backend:n}=e,{input:s}=t;return wI({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const gN={kernelName:A.J_u,backendName:"webgl",kernelFunc:mN};function yN(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>eN({inputs:{input:e},backend:n}))),r=e.map((e=>mN({inputs:{input:e},backend:n}))),a=yN(s,t,n),i=yN(r,t,n),o=kI({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=A.D5U.sizeFromShape(e.shape.slice(t));return PI({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=A.Wap.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=ek(a,i,s,o),u=A.Wap.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>A.D5U.sizeFromShape(e.shape)>0)),i=(0,A.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new Qk(e[0].shape,sI):new cI(e[0].shape,sI);return n.runWebGLProgram(t,e,s)}const o=(0,A.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let s=0;s<a.length;s+=o){const r=a.slice(s,s+o);e.push(yN(r,t,n))}const s=yN(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(i){const e=new dN(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,s)}const{tensors2D:l,outShape:u}=function(e,t,n){const s=A.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>PI({inputs:{x:e},attrs:{shape:[-1,A.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}(a,t,n),c=new pN(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=PI({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function bN(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=A.D5U.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));A.Wap.assertParamsConsistent(i,a);const o=A.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===A.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>A.D5U.sizeFromShape(e.shape)>0));return 1===l.length?wI({inputs:{x:l[0]},backend:n}):yN(l,a,n)}const xN={kernelName:A.Eh3,backendName:"webgl",kernelFunc:bN};class wN{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class vN{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kN{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ov(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?A.D5U.nearestLargerEven(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}class IN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ov(this.outputShape.length);const{dataFormat:n}=t,s=dv(),r="channelsLast"===n,a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function SN(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function NN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=SN(a.shape,d);null!=e&&(a=PI({inputs:{x:a},backend:s,attrs:{shape:e}}),m.push(a))}if(null!=r){const e=SN(r.shape,d);null!=e&&(r=PI({inputs:{x:r},backend:s,attrs:{shape:e}}),m.push(r))}if((1!==h&&1!==p||!(c>JI))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&A.D5U.arraysEqual(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,A.D5U.assert(av(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=PI({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=ZI({a:h,b:d,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=s.texData.get(g.dataId);A.D5U.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=wI({inputs:{x:g},backend:s}),f.shape=n.outShape,m.push(g)}else{const l=n.outHeight*n.outWidth,u=PI({inputs:{x:e},backend:s,attrs:{shape:d?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=PI({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=ZI({a:d?u:c,b:d?c:u,transposeA:!d,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=PI({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)s.disposeIntermediateTensorInfo(e);return f}function TN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=SN(a.shape,f);null!=e&&(a=PI({inputs:{x:a},backend:s,attrs:{shape:e}}),b.push(a))}if(null!=r){const e=SN(r.shape,f);null!=e&&(r=PI({inputs:{x:r},backend:s,attrs:{shape:e}}),b.push(r))}const x=PI({inputs:{x:t},backend:s,attrs:{shape:[1,m,A.D5U.sizeFromShape(t.shape)/m]}});b.push(x);const w=new IN(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=s.runWebGLProgram(w,[e],"float32",v),I=PI({inputs:{x:k},backend:s,attrs:{shape:y}});b.push(k),b.push(I);const S=null!=r,N=null!=a,T="leakyrelu"===o,C=o?_I(o,!0):null,E=new OI(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,T),$=f?[I,x]:[x,I];if(r&&$.push(r),N&&$.push(a),T){const e=s.makeTensorInfo([],"float32",A.D5U.createScalarValue(i,"float32"));$.push(e),b.push(e)}const D=s.runWebGLProgram(E,$,"float32"),R=PI({inputs:{x:D},backend:s,attrs:{shape:n.outShape}});b.push(D);for(const e of b)s.disposeIntermediateTensorInfo(e);return R}const CN={kernelName:A.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=A.Wap.convertConv2DDataFormat(l),p=A.Wap.computeConv2DInfo(r.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,A.OBj)().getBool("WEBGL_EXP_CONV")){const e=new kN(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(e,[r,a],"float32",t)}else if((0,A.OBj)().getBool("WEBGL_CONV_IM2COL"))d=TN({x:r,filter:a,convInfo:p,backend:n});else{const e=new wN(p);d=n.runWebGLProgram(e,[r,a],"float32")}else d=NN({x:r,filter:a,convInfo:p,backend:n});const f=PI({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class EN{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $N{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AN{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DN{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const RN={kernelName:A.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=A.Wap.convertConv2DDataFormat(l),p=A.Wap.computeConv2DInfo(r.shape,c,i,1,o,u,!1,h),d=new EN(p);return n.runWebGLProgram(d,[r,a],"float32")}},_N={kernelName:A.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=A.Wap.convertConv2DDataFormat(u),p=A.Wap.computeConv2DInfo(i,a.shape,o,1,l,c,!1,h),d=new $N(p);return n.runWebGLProgram(d,[r,a],"float32")}},ON={kernelName:A.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=A.Wap.computeConv3DInfo(r.shape,a.shape,i,l,o),c=new vN(u);return n.runWebGLProgram(c,[r,a],"float32")}},FN={kernelName:A.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=A.Wap.computeConv3DInfo(r.shape,l,i,1,o),c=new AN(u);return n.runWebGLProgram(c,[r,a],"float32")}},MN={kernelName:A.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=A.Wap.computeConv3DInfo(l,a.shape,o,1,i),c=new DN(u);return n.runWebGLProgram(c,[r,a],"float32")}},BN=DI({opSnippet:AI+"\n  return cos(x);\n"}),LN={kernelName:A.mc4,backendName:"webgl",kernelFunc:BN},zN=DI({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),PN={kernelName:A.TR1,backendName:"webgl",kernelFunc:zN};class UN{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const WN={kernelName:A.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new UN(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};var VN;!function(e){e.Prod="*",e.Sum="+"}(VN||(VN={}));class GN{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===VN.Prod?"1.0":"0.0",i=n?a:`getX(${HN(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Ev(r)} coords = getOutputCoords();\n        int end = ${jN(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${jN(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${HN(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function HN(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function jN(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function XN(e,t,n,s,r,a){const i=t.shape.length,o=A.Wap.getAxesPermutation([s],i);let l=t;null!=o&&(l=QI({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=A.Wap.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=wI({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const s=new GN(e,l.shape,!1,a),r=[[t]],i=h;h=n.runWebGLProgram(s,[h],h.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){const t=new GN(e,l.shape,r,a),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=QI({inputs:{x:h},backend:n,attrs:{perm:A.Wap.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const qN={kernelName:A.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return XN(VN.Prod,r,n,a,i,o)}},KN={kernelName:A.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return XN(VN.Sum,r,n,a,i,o)}},QN={kernelName:A.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=Qv(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=Yv(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class YN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const JN={kernelName:A.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new YN("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class ZN{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ov(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class eT{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ov(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?A.D5U.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const tT={kernelName:A.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=A.Wap.computeConv2DInfo(r.shape,a.shape,i,c,o,u,!0);let p;p=(0,A.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new eT(h):new ZN(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",d)}};class nT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const rT={kernelName:A.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=A.Wap.computeConv2DInfo(r.shape,c,i,o,l,u,!0),p=new nT(h);return n.runWebGLProgram(p,[r,a],"float32")}},aT={kernelName:A.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=A.Wap.computeConv2DInfo(c,a.shape,i,o,l,u,!0),p=new sT(h);return n.runWebGLProgram(p,[r,a],"float32")}};class iT{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const oT={kernelName:A.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=A.D5U.sizeFromShape(s.shape),i=PI({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new iT(a),l=n.runWebGLProgram(o,[i],i.dtype),u=PI({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class lT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const uT={kernelName:A.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=A.Wap.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new lT(u);c=n.runWebGLProgram(h,[r,a],"float32");const p=PI({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},cT={kernelName:A.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=A.Wap.decodeEinsumEquation(r,a.length);A.Wap.checkEinsumDimSizes(i.length,l,a);const{path:u,steps:c}=A.Wap.getEinsumComputePath(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=A.Wap.getEinsumPermutation(d,l[t]);let r;A.Wap.isIdentityPermutation(e)?r=a[t]:(r=QI({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);A.D5U.arraysEqual(r.shape,i)||(r=PI({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=LI({inputs:{a:r,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=qI({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},hT=DI({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),pT={kernelName:A.SX0,backendName:"webgl",kernelFunc:hT},dT={kernelName:A.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=(0,A.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xI("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new yI("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},fT=RI({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:tk}),mT={kernelName:A.hdR,backendName:"webgl",kernelFunc:fT},gT=DI({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${A.Wap.ERF_P};\n  float a1 = ${A.Wap.ERF_A1};\n  float a2 = ${A.Wap.ERF_A2};\n  float a3 = ${A.Wap.ERF_A3};\n  float a4 = ${A.Wap.ERF_A4};\n  float a5 = ${A.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),yT={kernelName:A.Omj,backendName:"webgl",kernelFunc:gT},bT=DI({opSnippet:AI+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:nk,dtype:"float32"}),xT={kernelName:A.NEP,backendName:"webgl",kernelFunc:bT};function wT(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(A.D5U.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),PI({inputs:{x:a},backend:s,attrs:{shape:o}})}const vT={kernelName:A.YFo,backendName:"webgl",kernelFunc:wT},kT="return exp(x) - 1.0;",IT=DI({opSnippet:kT,packedOpSnippet:kT,cpuKernelImpl:sk}),ST={kernelName:A.Y0y,backendName:"webgl",kernelFunc:IT};class NT{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function TT(e,t,n){const s=n.texData.get(e.dataId),r=A.D5U.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=PI({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new NT("real",o,t),u=new NT("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=kI({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=PI({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const CT={kernelName:A.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return TT(s,!1,n)}};class ET{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function $T(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||A.D5U.inferDtype(r),"string"===a){const e=A.D5U.getArrayFromDType(a,A.D5U.sizeFromShape(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new ET(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const AT={kernelName:A.deh,backendName:"webgl",kernelFunc:$T};class DT{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const RT={kernelName:A.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new DT(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},_T="return floor(x);",OT=DI({opSnippet:_T,packedOpSnippet:_T,cpuKernelImpl:rk}),FT={kernelName:A.OR,backendName:"webgl",kernelFunc:OT},MT=RI({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),BT={kernelName:A.jeX,backendName:"webgl",kernelFunc:MT};class LT{constructor(e){this.variableNames=["A"];const t=dv(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class zT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=dv(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const PT={kernelName:A.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(o||i){const e=(0,A.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=UT&&e===WT||(WT=e,UT=document.createElement("canvas").getContext("2d",{willReadFrequently:WT})),UT.canvas.width=l,UT.canvas.height=u,UT.drawImage(r,0,0,l,u),r=UT.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=Fw.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const d=(0,A.OBj)().getBool("WEBGL_PACK")?new zT(h):new LT(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let UT,WT=(0,A.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const VT={kernelName:A._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=A.Wap.convertConv2DDataFormat(c),g=A.Wap.computeConv2DInfo(r.shape,a.shape,l,h,u,p,!1,m);let y;const b=[],x=null!=i,w=null!=o,v="leakyrelu"===d,k=()=>{const e=[r,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=PI({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",A.D5U.createScalarValue(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&(0,A.OBj)().getBool("WEBGL_EXP_CONV")){const e=d?_I(d,!0):null,t=new kN(g,x,e,w,v),s=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",s)}else if((0,A.OBj)().getBool("WEBGL_CONV_IM2COL"))y=TN({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=d?_I(d,!1):null,t=new wN(g,x,e,w,v),s=k();y=n.runWebGLProgram(t,s,"float32")}else y=NN({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const I=PI({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},GT={kernelName:A.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=A.Wap.computeConv2DInfo(r.shape,a.shape,l,m,u,h,!0),y=(0,A.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?_I(p,y):null,x=[r,a],w=null!=i,v=null!=o,k="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",A.D5U.createScalarValue(d,"float32"));x.push(e),f.push(e)}let I;I=y?new eT(g,w,b,v,k):new ZN(g,w,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class HT{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=Ev(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const jT={kernelName:A.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=A.D5U.sizeFromShape(s.shape),[l,u,c,h]=A.Wap.prepareAndValidate(s,r),p=PI({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),d=PI({inputs:{x:s},backend:n,attrs:{shape:[A.D5U.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=ak(e,t,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const f=new HT(i,h,[u,c],s.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=PI({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class XT{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Ev(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("index"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function qT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=A.D5U.parseAxisParam(i,r.shape)[0];if((0,A.OBj)().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];A.D5U.assert(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=A.Wap.segment_util.collectGatherOpShapeInfo(r,a,l,o),c=A.D5U.sizeFromShape(a.shape),h=[],p=PI({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=PI({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),s=ik(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const m=new XT(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=PI({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const KT={kernelName:A.qi_,backendName:"webgl",kernelFunc:qT},QT=RI({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ok,dtype:"bool"}),YT={kernelName:A.iZT,backendName:"webgl",kernelFunc:QT},JT=RI({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:lk}),ZT={kernelName:A.Acj,backendName:"webgl",kernelFunc:JT},eC={kernelName:A.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return TT(s,!0,n)}},tC=DI({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),nC={kernelName:A.avt,backendName:"webgl",kernelFunc:tC},sC=DI({opSnippet:"return float(isinf(x));",dtype:"bool"}),rC={kernelName:A.iWB,backendName:"webgl",kernelFunc:sC},aC=DI({opSnippet:"return float(isnan(x));",dtype:"bool"}),iC={kernelName:A.r7n,backendName:"webgl",kernelFunc:aC},oC=RI({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:uk,dtype:"bool"}),lC={kernelName:A.vtC,backendName:"webgl",kernelFunc:oC},uC=RI({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:ck,dtype:"bool"}),cC={kernelName:A.CAk,backendName:"webgl",kernelFunc:uC},hC={kernelName:A.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=hk(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},pC=DI({opSnippet:AI+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:pk}),dC={kernelName:A.ZbH,backendName:"webgl",kernelFunc:pC},fC=DI({opSnippet:AI+"\n  return log(1.0 + x);\n"}),mC={kernelName:A.kU,backendName:"webgl",kernelFunc:fC},gC=RI({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),yC={kernelName:A.PYm,backendName:"webgl",kernelFunc:gC},bC=DI({opSnippet:"return float(!(x >= 1.0));"}),xC={kernelName:A.VfG,backendName:"webgl",kernelFunc:bC},wC=RI({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),vC={kernelName:A.MZg,backendName:"webgl",kernelFunc:wC};class kC{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class IC{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const SC={kernelName:A.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=(0,A.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new IC(r.shape,a,i,o,l):new kC(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class NC{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const TC={kernelName:A.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new NC(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function CC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=A.D5U.parseAxisParam(a,r.shape);let u=l;const c=A.Wap.getAxesPermutation(u,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=Pk(e,r.shape,r.dtype,c,t);d=n.makeTensorInfo(t,r.dtype),n.texData.get(d.dataId).values=s}else d=XI(r,c,n);u=A.Wap.getInnerMostAxes(u.length,o)}A.Wap.assertAxesAreInnerMostDims("max",u,o);const[f,m]=A.Wap.computeOutAndReduceShapes(d.shape,u);let g,y=f;if(i&&(y=A.Wap.expandShapeToKeepDim(f,l)),p){const e=n.texData.get(d.dataId).values,t=dk(e,A.D5U.sizeFromShape(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=A.D5U.sizeFromShape(t),a=PI({inputs:{x:e},attrs:{shape:[A.D5U.sizeFromShape(e.shape)/r,r]},backend:s}),i=GI(a,e.dtype,"max",s),o=PI({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const EC={kernelName:A.YoZ,backendName:"webgl",kernelFunc:CC},$C=RI({opSnippet:gI+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+bI+"\n  return result;\n",cpuKernelImpl:fk}),AC={kernelName:A.BMI,backendName:"webgl",kernelFunc:$C},DC={kernelName:A.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;hv(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=A.Wap.computePool2DInfo(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&A.D5U.arraysEqual(u.inShape,u.outShape))return wI({inputs:{x:r},backend:n});const c=new RS(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},RC={kernelName:A.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=A.Wap.computePool3DInfo(r.shape,a,i,[1,1,1],o,u,l),h=new _S(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class _C{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OC{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const FC={kernelName:A.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=A.Wap.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new _S(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new OC(h),m=n.runWebGLProgram(f,[r,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},MC={kernelName:A.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;hv([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=A.Wap.computePool2DInfo(o.shape,l,u,1,c,h),d=new RS(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new _C(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},BC={kernelName:A.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;A.D5U.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=A.Wap.computePool2DInfo(s.shape,r,a,u,i),[h,p]=function(e,t,n,s){let r=new RS(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new RS(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,p]}},LC={kernelName:A.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=A.D5U.parseAxisParam(a,s.shape);let u=l;const c=A.Wap.getAxesPermutation(u,o),h=null!=c,p=i.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=Pk(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=XI(s,c,i);d.push(f),u=A.Wap.getInnerMostAxes(u.length,o)}A.Wap.assertAxesAreInnerMostDims("sum",u,o);const[m,g]=A.Wap.computeOutAndReduceShapes(f.shape,u);let y=m;r&&(y=A.Wap.expandShapeToKeepDim(m,l));const b=function(e,t,n,s){const r=A.D5U.sizeFromShape(t),a=PI({inputs:{x:e},attrs:{shape:[A.D5U.sizeFromShape(e.shape)/r,r]},backend:s}),i=GI(a,"float32","mean",s),o=PI({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},zC={kernelName:A.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=A.D5U.parseAxisParam(a,r.shape);let u=l;const c=A.Wap.getAxesPermutation(u,o);let h=r;null!=c&&(h=QI({inputs:{x:r},backend:n,attrs:{perm:c}}),u=A.Wap.getInnerMostAxes(u.length,r.shape.length)),A.Wap.assertAxesAreInnerMostDims("min",u,o);const[p,d]=A.Wap.computeOutAndReduceShapes(h.shape,u),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,A.D5U.sizeFromShape(d)]}}),m=GI(f,f.dtype,"min",n);let g;return g=PI(i?{inputs:{x:m},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},PC=RI({opSnippet:gI+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+bI+"\n  return result;\n",cpuKernelImpl:mk}),UC={kernelName:A.q8u,backendName:"webgl",kernelFunc:PC};class WC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Ev(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class VC{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Ev(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Vk("rc",s),l=Vk("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const GC={kernelName:A.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=(0,A.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VC(s.shape,r,a):new WC(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},HC=RI({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+bI+"\n  return result;\n"}),jC={kernelName:A.Vbg,backendName:"webgl",kernelFunc:HC};class XC{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const qC=RI({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),KC={kernelName:A.oHH,backendName:"webgl",kernelFunc:qC},QC="return a - b;",YC=RI({opSnippet:QC,packedOpSnippet:QC,supportsComplex:!0,cpuKernelImpl:Bk}),JC={kernelName:A.Tr8,backendName:"webgl",kernelFunc:YC};function ZC(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=A.D5U.parseAxisParam([a],r.shape),o=CC({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=A.Wap.expandShapeToKeepDim(o.shape,i),u=PI({inputs:{x:o},backend:n,attrs:{shape:l}}),c=YC({inputs:{a:r,b:u},backend:n}),h=bT({inputs:{x:c},backend:n}),p=qI({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=PI({inputs:{x:p},backend:n,attrs:{shape:l}}),f=qC({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const eE={kernelName:A.Gcp,backendName:"webgl",kernelFunc:ZC},tE={kernelName:A.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:ZC({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new XC(u,c,a),p=[[i]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},nE=Yk+"\n  return -x;\n",sE={kernelName:A.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=yk(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=(0,A.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new cI(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Qk(s.shape,nE),n.runWebGLProgram(r,[s],s.dtype)}},rE=A.GDt.nonMaxSuppressionV3Impl,aE={kernelName:A.uv1,backendName:"webgl",kernelFunc:function(e){A.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=rE(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},iE=A.GDt.nonMaxSuppressionV4Impl,oE={kernelName:A.cye,backendName:"webgl",kernelFunc:function(e){A.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=iE(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},lE=A.GDt.nonMaxSuppressionV5Impl,uE={kernelName:A.W0H,backendName:"webgl",kernelFunc:function(e){A.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=lE(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class cE{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const hE={kernelName:A.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:i,onValue:o,offValue:l}=s,u=A.D5U.sizeFromShape(r.shape),c=new cE(u,i,o,l),h=PI({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const d=PI({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function pE(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=eN({inputs:{input:s},backend:n}),t=pE({inputs:{x:e},backend:n}),r=mN({inputs:{input:s},backend:n}),a=pE({inputs:{x:r},backend:n}),i=kI({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return $T({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const dE={kernelName:A.RuY,backendName:"webgl",kernelFunc:pE},fE={kernelName:A.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=eN({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=mN({inputs:{input:r},backend:s}),i=pE({inputs:{x:a},backend:s}),o=kI({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return $T({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},mE={kernelName:A.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return wT({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{A.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),A.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=bN({inputs:t.map((e=>{const t=wT({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class gE{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Ev(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class yE{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=Ev(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Vk("rc",s),l=Vk("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===s?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const bE=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===A.D5U.sizeFromShape(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return $T({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=(0,A.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yE(r.shape,a,i):new gE(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},xE={kernelName:A.lyA,backendName:"webgl",kernelFunc:bE},wE=RI({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+bI+"\n  return result;\n"}),vE={kernelName:A.pe_,backendName:"webgl",kernelFunc:wE},kE={kernelName:A.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=A.D5U.parseAxisParam(a,r.shape);let c=u;const h=A.Wap.getAxesPermutation(c,o);let p,d=r;if(null!=h&&(d=QI({inputs:{x:r},backend:n,attrs:{perm:h}}),c=A.Wap.getInnerMostAxes(c.length,o),l.push(d)),A.Wap.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:s,outDtype:r}=xk(d.shape,d.dtype,e,c);p=n.makeTensorInfo(s,r,t)}else{const[e,t]=A.Wap.computeOutAndReduceShapes(d.shape,c),s=A.D5U.sizeFromShape(t),a=PI({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),i=GI(a,(0,A.z4k)(r.dtype),"prod",n);p=PI({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=A.Wap.expandShapeToKeepDim(p.shape,u);p=PI({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},IE={kernelName:A.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[p,d,f]=wk(l,u,c,a.shape,a.dtype,h,i.shape,o),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},SE={kernelName:A.CQl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:a}=t,i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=vk(i,s.shape,s.dtype,o,r.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}},NE={kernelName:A.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),p=o.map((e=>n.readSync(e.dataId))),d=o.map((e=>e.shape)),[f,m]=kk(u,r.shape,c,a.shape,a.dtype,h,i.shape,p,d,l);return n.makeTensorInfo(f,a.dtype,m)}},TE=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=Ik(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},CE={kernelName:A.e6w,backendName:"webgl",kernelFunc:TE},EE=DI({opSnippet:"return 1.0 / x;"}),$E={kernelName:A.$HU,backendName:"webgl",kernelFunc:EE},AE=DI({opSnippet:Yk+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),DE={kernelName:A.qkr,backendName:"webgl",kernelFunc:AE},RE=DI({opSnippet:Yk+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_E={kernelName:A.SbG,backendName:"webgl",kernelFunc:RE};class OE{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class FE{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const ME={kernelName:A._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=(0,A.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new FE(r.shape,l,u,a,i):new OE(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class BE{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const LE={kernelName:A.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new BE(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class zE{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class PE{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const UE={kernelName:A.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=(0,A.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new PE(r.shape,l,u,a,i):new zE(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class WE{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const VE={kernelName:A.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new WE(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class GE{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=Ev(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class HE{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=Vk("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ev(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const jE={kernelName:A.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=A.D5U.parseAxisParam(a,r.shape);if(0===i)return wI({inputs:{x:r},backend:n});const l=(0,A.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HE(r.shape,o):new GE(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class XE{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qE={kernelName:A.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new XE(s.shape,a),[u,c]=A.Wap.getImageCenter(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},KE=DI({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),QE={kernelName:A.e07,backendName:"webgl",kernelFunc:KE},YE=DI({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Sk}),JE={kernelName:A.bV0,backendName:"webgl",kernelFunc:YE};class ZE{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=Ev(r.length),l=Ev(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const e$={kernelName:A.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=A.Wap.calculateShapes(a,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const d=PI({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=PI({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new ZE(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=PI({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class t${constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===(0,A.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const n$={kernelName:A.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new t$(r.shape[0],r.shape[1],a.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",l)}};class s${constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=Ev(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const r$={kernelName:A.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new s$(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],(0,A.x8V)(r.dtype,a.dtype))}},a$=DI({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${A.Wap.SELU_SCALEALPHA};\n  float scale = ${A.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),i$={kernelName:A.oFR,backendName:"webgl",kernelFunc:a$},o$=DI({opSnippet:AI+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Tk}),l$={kernelName:A.a5O,backendName:"webgl",kernelFunc:o$},u$=DI({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),c$={kernelName:A.i5y,backendName:"webgl",kernelFunc:u$},h$=DI({opSnippet:AI+"\n  return sin(x);\n"}),p$={kernelName:A.RQH,backendName:"webgl",kernelFunc:h$},d$=DI({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),f$={kernelName:A.wYB,backendName:"webgl",kernelFunc:d$},m$=DI({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),g$={kernelName:A.MRv,backendName:"webgl",kernelFunc:m$},y$={kernelName:A.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;A.D5U.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=bE({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=A.Wap.getReshaped(c.shape,a,o,!1),p=A.Wap.getPermuted(h.length,a.length,!1),d=A.Wap.getReshapedPermuted(c.shape,a,o,!1),f=PI({inputs:{x:c},backend:n,attrs:{shape:h}}),m=QI({inputs:{x:f},backend:n,attrs:{perm:p}}),g=PI({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},b$={kernelName:A.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=$k(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},x$={kernelName:A.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=Ak(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},w$={kernelName:A.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=Dk(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},v$={kernelName:A.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=Dk(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},k$={kernelName:A.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=A.Wap.calculateShapes(a,r,o);if("string"===a.dtype){const e=n.bufferSync(r),t=n.bufferSync(a),s=A.D5U.decodeString(n.readSync(i.dataId)[0]),d=Nk(e,t,o,p,c,u,l,h,s,!1);return n.makeTensorInfo(o,d.dtype,d.values)}const d=new ZE(u,l,r.shape.length,a.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[a,r,i],a.dtype),m=PI({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},I$={kernelName:A.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=A.D5U.parseAxisParam(i,r.shape)[0],l=A.Wap.prepareSplitSize(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=XS({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},S$="return sqrt(x);",N$=DI({opSnippet:S$,packedOpSnippet:S$,cpuKernelImpl:Rk}),T$={kernelName:A.FKq,backendName:"webgl",kernelFunc:N$},C$=DI({opSnippet:"return x * x;"}),E$={kernelName:A.bK0,backendName:"webgl",kernelFunc:C$},$$="return (a - b) * (a - b);",A$=RI({opSnippet:$$,packedOpSnippet:$$}),D$={kernelName:A._tC,backendName:"webgl",kernelFunc:A$},R$={kernelName:A.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=Yk+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Qk(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class _${constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=Ev(n.length),a=Ev(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const O$={kernelName:A.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=A.kuN.sliceInfo(r.shape,a,i,o,l,u,c,h,p);let v;if(m)v=PI({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){A.D5U.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=A.kuN.computeOutShape(b,x,w),t=XS({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=PI({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,A.f3b)(r.shape,r.dtype,e),s=_k(d,t,w,b);v=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new _$(b,w,d);v=n.runWebGLProgram(e,[r],r.dtype)}const k=PI({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},F$={kernelName:A._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=Ok(p,d,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},M$={kernelName:A.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=Fk(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},B$={kernelName:A.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=Mk(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},L$=DI({opSnippet:"return tan(x);"}),z$={kernelName:A.sEM,backendName:"webgl",kernelFunc:L$},P$=DI({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),U$={kernelName:A.MIZ,backendName:"webgl",kernelFunc:P$};class W${constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=Ev(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function V$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>A.D5U.decodeString(e))):e,s=(0,A.f3b)(r.shape,r.dtype,t),i=Lk(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new W$(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const G$={kernelName:A.n9L,backendName:"webgl",kernelFunc:V$};class H${constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class j${constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function X$(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function q$(e){let t=1;for(;t<e;)t*=2;return t}const K$={kernelName:A.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=(0,A.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,A.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=zk(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,$T({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(r):r,f=A.D5U.sizeFromShape(u)/c,m=PI({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&X$(n,d);const g=q$(a),y=q$(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,s)=>{const r=x(),a=new H$(s),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,r,"int32",i),X$(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),s=new j$([f,e/2]),r=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(s,t,"int32",r),X$(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=XS({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),X$(n,v);let k=qT({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});X$(n,m);const I=u.slice(0,-1);I.push(a),v=b,b=PI({inputs:{x:b},attrs:{shape:I},backend:n}),X$(n,v);const S=k;return k=PI({inputs:{x:k},attrs:{shape:I},backend:n}),X$(n,S),[k,b]}};class Q${constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Y$={kernelName:A.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=new Q$(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}},J$={kernelName:A.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;hv(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=Uk(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},Z$={kernelName:A.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=XS({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=PI({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class eA{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const tA=[eS,nS,rS,iS,uS,pS,dS,fS,wS,vS,IS,NS,CS,$S,DS,OS,FS,LS,zS,PS,VS,KS,QS,YS,nN,aN,lN,II,hN,xN,CN,RN,_N,ON,FN,MN,LN,PN,WN,qN,KN,QN,JN,tT,rT,aT,oT,uT,cT,pT,dT,mT,yT,xT,vT,ST,CT,AT,RT,FT,BT,PT,VT,GT,jT,KT,YT,ZT,vI,eC,gN,nC,rC,iC,TI,lC,cC,hC,dC,mC,yC,xC,vC,SC,TC,EC,AC,DC,RC,FC,MC,BC,LC,zC,UC,GC,jC,tE,zI,sE,aE,oE,uE,ZS,hE,fE,mE,xE,vE,$I,kE,IE,SE,NE,CE,tN,KC,$E,DE,_E,UI,ME,LE,UE,VE,jE,qE,QE,JE,e$,n$,r$,i$,l$,c$,p$,f$,qS,eE,g$,y$,b$,x$,w$,v$,k$,I$,T$,E$,D$,R$,O$,F$,M$,B$,JC,KI,z$,U$,G$,K$,Y$,YI,J$,Z$,{kernelName:A.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=A.Wap.getAxesPermutation([u],o);let h=r;null!=c&&(h=QI({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=A.Wap.getInnerMostAxes(1,o)[0]);const p=A.Wap.segment_util.computeOutShape(h.shape,u,i),d=A.D5U.sizeFromShape([h.shape[u]]),f=PI({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=(0,A.z4k)(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=A.Wap.segment_util.segOpComputeOptimalWindowSize(o,a),c=new eA({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const p=TE({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=V$({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,r,a)},y=PI({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=A.Wap.getUndoAxesPermutation(c);b=QI({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},dE];for(const e of tA)(0,A.wCN)(e);const nA={"tfjs-core":A.jTM,"tfjs-backend-cpu":"4.2.0","tfjs-backend-webgl":"4.2.0","tfjs-data":sf.version_data,"tfjs-layers":Vo,"tfjs-converter":nf,tfjs:"4.2.0"}},7187:e=>{"use strict";var t,n="object"==typeof Reflect?Reflect:null,s=n&&"function"==typeof n.apply?n.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};t=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var r=Number.isNaN||function(e){return e!=e};function a(){a.init.call(this)}e.exports=a,e.exports.once=function(e,t){return new Promise((function(n,s){function r(n){e.removeListener(t,a),s(n)}function a(){"function"==typeof e.removeListener&&e.removeListener("error",r),n([].slice.call(arguments))}m(e,t,a,{once:!0}),"error"!==t&&function(e,t,n){"function"==typeof e.on&&m(e,"error",t,{once:!0})}(e,r)}))},a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var i=10;function o(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function l(e){return void 0===e._maxListeners?a.defaultMaxListeners:e._maxListeners}function u(e,t,n,s){var r,a,i,u;if(o(n),void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),a=e._events),i=a[t]),void 0===i)i=a[t]=n,++e._eventsCount;else if("function"==typeof i?i=a[t]=s?[n,i]:[i,n]:s?i.unshift(n):i.push(n),(r=l(e))>0&&i.length>r&&!i.warned){i.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+i.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=e,c.type=t,c.count=i.length,u=c,console&&console.warn&&console.warn(u)}return e}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function h(e,t,n){var s={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},r=c.bind(s);return r.listener=n,s.wrapFn=r,r}function p(e,t,n){var s=e._events;if(void 0===s)return[];var r=s[t];return void 0===r?[]:"function"==typeof r?n?[r.listener||r]:[r]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(r):f(r,r.length)}function d(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function f(e,t){for(var n=new Array(t),s=0;s<t;++s)n[s]=e[s];return n}function m(e,t,n,s){if("function"==typeof e.on)s.once?e.once(t,n):e.on(t,n);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function r(a){s.once&&e.removeEventListener(t,r),n(a)}))}}Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return i},set:function(e){if("number"!=typeof e||e<0||r(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");i=e}}),a.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||r(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},a.prototype.getMaxListeners=function(){return l(this)},a.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r="error"===e,a=this._events;if(void 0!==a)r=r&&void 0===a.error;else if(!r)return!1;if(r){var i;if(t.length>0&&(i=t[0]),i instanceof Error)throw i;var o=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw o.context=i,o}var l=a[e];if(void 0===l)return!1;if("function"==typeof l)s(l,this,t);else{var u=l.length,c=f(l,u);for(n=0;n<u;++n)s(c[n],this,t)}return!0},a.prototype.addListener=function(e,t){return u(this,e,t,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(e,t){return u(this,e,t,!0)},a.prototype.once=function(e,t){return o(t),this.on(e,h(this,e,t)),this},a.prototype.prependOnceListener=function(e,t){return o(t),this.prependListener(e,h(this,e,t)),this},a.prototype.removeListener=function(e,t){var n,s,r,a,i;if(o(t),void 0===(s=this._events))return this;if(void 0===(n=s[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete s[e],s.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(r=-1,a=n.length-1;a>=0;a--)if(n[a]===t||n[a].listener===t){i=n[a].listener,r=a;break}if(r<0)return this;0===r?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,r),1===n.length&&(s[e]=n[0]),void 0!==s.removeListener&&this.emit("removeListener",e,i||t)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(e){var t,n,s;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var r,a=Object.keys(n);for(s=0;s<a.length;++s)"removeListener"!==(r=a[s])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(s=t.length-1;s>=0;s--)this.removeListener(e,t[s]);return this},a.prototype.listeners=function(e){return p(this,e,!0)},a.prototype.rawListeners=function(e){return p(this,e,!1)},a.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):d.call(e,t)},a.prototype.listenerCount=d,a.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},437:(e,t,n)=>{"use strict";var s=n(7091),r=n.n(s),a=new URL(n(534),n.b);r()(a)},7091:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));a=a.mul(p).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=(a.sub(l.mul(r)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=r+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=r*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+r*p+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(r);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),r=r.sub(d)}return a},S.div=S.divide,S.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},8724:()=>{},6377:(e,t,n)=>{var s=n(4832),r=n(8652),a=n(801),i=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},4832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},1971:function(e,t,n){var s;!function(r,a,i){var o,l=256,u=6,c="random",h=i.pow(l,u),p=i.pow(2,52),d=2*p,f=l-1;function m(e,t,n){var s=[],f=x(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,w(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),w(e)}catch(e){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,w(a)]}}():e,3),s),m=new g(s),v=function(){for(var e=m.g(u),t=h,n=0;e<p;)e=(e+n)*l,t*=l,n=m.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|m.g(4)},v.quick=function(){return m.g(4)/4294967296},v.double=v,x(w(m.S),a),(t.pass||n||function(e,t,n,s){return s&&(s.S&&y(s,m),e.state=function(){return y(m,{})}),n?(i[c]=e,t):e})(v,f,"global"in t?t.global:this==i,t.state)}function g(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=f&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=f&r+1],n=n*l+i[f&(i[r]=i[a=f&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function y(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(b(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function x(e,t){for(var n,s=e+"",r=0;r<s.length;)t[f&r]=f&(n^=19*t[f&r])+s.charCodeAt(r++);return w(t)}function w(e){return String.fromCharCode.apply(0,e)}if(x(i.random(),a),e.exports){e.exports=m;try{o=n(5042)}catch(e){}}else void 0===(s=function(){return m}.call(t,n,t,e))||(e.exports=s)}("undefined"!=typeof self?self:this,[],Math)},335:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Angle=void 0;class n{constructor(e,t,n,s,r){if(n<0)throw Error('"v" must be positive');this.x=e,this.y=t,this.v=n,this.angle=s,this.radius=r,this.active=!0}draw(e){e.beginPath(),e.arc(this.x,this.y,this.radius,0,2*Math.PI),e.fillStyle=this.active?"#0095DD":"rgba(0,149,221,0.55)",e.fill(),e.closePath()}reflectX(){this.angle=this.angle.reverseCos()}reflectY(){this.angle=this.angle.reverseSin()}accelerateToTop(){this.angle=this.angle.getAbsoluteSin()}move(){this.x+=this.v*this.angle.calculateCos(),this.y-=this.v*this.angle.calculateSin()}getCollisionRect(){return{left:this.x-this.radius,right:this.x+this.radius,top:this.y-this.radius,bottom:this.y+this.radius}}setAngle(e){this.angle=e}get isActive(){return this.active}activate(){this.active=!0}deactivate(){this.active=!1}accelerate(e){this.v+=e}isFacingRight(){return this.angle.getRadians()<=Math.PI/2||this.angle.getRadians()>=3*Math.PI/2}isFacingLeft(){return this.angle.getRadians()>=Math.PI/2&&this.angle.getRadians()<=3*Math.PI/2}isFacingTop(){return this.angle.getRadians()<=Math.PI}isFacingBottom(){return this.angle.getRadians()>=Math.PI}static forInitialize(e){return new n(e.width/2,e.height/1.5,4,s.forInitialize(),10)}}class s{constructor(e){this.radians=this.normalizeRadians(e)}getRadians(){return this.normalizeRadians(this.radians)}setRadians(e){this.radians=this.normalizeRadians(e)}reverseCos(){return new s(Math.PI-this.radians)}reverseSin(){return new s(-1*this.radians)}getAbsoluteSin(){const e=this.normalizeRadians(this.radians);return 0<=e&&e<=Math.PI?new s(this.radians):Math.PI<e&&e<=3*Math.PI/2?new s(this.radians-Math.PI/2):new s(this.normalizeRadians(this.radians+Math.PI/2))}calculateCos(){return Math.cos(this.radians)}calculateSin(){return Math.sin(this.radians)}normalizeRadians(e){for(;e<0;)e+=2*Math.PI;for(;e>=2*Math.PI;)e-=2*Math.PI;return e}static fromRadians(e){return new s(e)}static forInitialize(){const e=Math.random()>.5?Math.PI*(.5-.25*Math.random()+1/8):Math.PI*(.5+.25*Math.random()+1/8);return new s(e)}}t.Angle=s,t.default=n},8349:function(e,t,n){"use strict";var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.checkIntervalsIntersect=void 0;const r=s(n(7822)),a=s(n(6572)),i=s(n(134)),o=n(7187);t.checkIntervalsIntersect=([...e],[...t])=>{const n=[e,t].sort(((e,t)=>e[0]-t[0])),[s,r]=n;return s[1]>=r[0]};class l extends o.EventEmitter{constructor(){if(super(),this.canvas=document.getElementById("game"),!this.canvas)throw Error("canvasが存在しません");if(this.ctx=this.canvas.getContext("2d"),!this.ctx)throw Error("contextが存在しません.");this.model=new a.default(this.canvas),this.renderer=new i.default(this.canvas,this.ctx),this.lives=new r.default(this.canvas.width-65,20,2),this.renderer.draw(this.model.getBall(),this.model.getPaddle(),this.model.getBricks(),this.model.getScoreObject(),this.lives),this.isDone=!1}on(e,t){return super.on(e,(e=>t(e)))}emit(e,t){return super.emit(e,t)}removeAllListeners(e){return super.removeAllListeners(e)}init(){return this.removeAllListeners("step"),new l}step(){if(!this.isDone){if(this.model.update(),this.emit("step"),this.renderer.draw(this.model.getBall(),this.model.getPaddle(),this.model.getBricks(),this.model.getScoreObject(),this.lives),this.model.isGameOver()){if(this.lives.lives-=1,this.lives.lives<=0)return void this.gameOver();this.model.initBall()}requestAnimationFrame((()=>{this.step()}))}}start(){this.step()}done(){this.isDone=!0}gameOver(){this.done(),alert("GAME OVER")}paddleOperate(e){switch(e){case 0:this.model.getPaddle().accelerateToLeft();break;case 1:this.model.getPaddle().accelerateToRight();break;default:throw Error("classIdが不正です")}}}t.default=l},4107:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=n(8349);t.default=class{constructor(e,t,n,s){this.x=e,this.y=t,this.width=n,this.height=s,this.isRemain=!0}draw(e){this.isRemain&&(e.beginPath(),e.rect(this.x,this.y,this.width,this.height),e.fillStyle="#0095DD",e.fill(),e.closePath())}getCollisionRect(){return{left:this.x,right:this.x+this.width,top:this.y,bottom:this.y+this.height}}isCollided(e){const t=e.getCollisionRect(),n=this.getCollisionRect();return(0,s.checkIntervalsIntersect)([t.left,t.right],[n.left,n.right])&&(0,s.checkIntervalsIntersect)([t.top,t.bottom],[n.top,n.bottom])}bounce(e){(e.x<=this.getCollisionRect().left&&e.isFacingRight()||e.x>=this.getCollisionRect().right&&e.isFacingLeft())&&e.reflectX(),(e.y<=this.getCollisionRect().top&&e.isFacingBottom()||e.y>=this.getCollisionRect().bottom&&e.isFacingTop())&&e.reflectY()}}},7822:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t,n){this.x=e,this.y=t,this.lives=n}draw(e){e.font="16px Arial",e.fillStyle="#0095DD",e.fillText(`Lives: ${this.lives}`,this.x,this.y)}}},6572:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(n(335)),l=i(n(4107)),u=i(n(4894)),c=a(n(6534)),h=i(n(6814)),p=()=>{const e=[];for(let t=0;t<5;t++){e[t]=[];for(let n=0;n<3;n++){const s=85*t+30,r=30*n+30;e[t][n]=new l.default(s,r,75,20)}}return e};t.default=class{constructor(e){this.canvas=e;const t=e.width,n=e.height;this.ball=o.default.forInitialize(e);const s=(t-75)/2,r=n-10-10;this.paddle=new u.default(s,r,10,75),this.bricks=p(),this.wall=new h.default(t,n),this.scoreObject=new c.default(8,20,c.Score.forInitialScore())}update(){this.processCollision(),this.ball.move(),this.paddle.move()}processCollision(){if(this.wall.isCollided(this.ball)&&this.wall.bounce(this.ball),(this.wall.isCollidedLeft(this.paddle)&&this.paddle.dx<0||this.wall.isCollidedRight(this.paddle)&&this.paddle.dx>0)&&this.paddle.stop(),this.paddle.isCollided(this.ball)&&(this.paddle.bounce(this.ball),this.ball.activate()),this.ball.isActive)for(const e of this.bricks.flat())if(e.isRemain&&e.isCollided(this.ball)){e.bounce(this.ball),this.ball.accelerate(.1),this.scoreObject.add(c.Score.forBaseScore()),e.isRemain=!1,this.isAllClear()&&(this.scoreObject.score=this.scoreObject.score.add(c.Score.forAllClearBonus()),this.ball.accelerate(.5),this.ball.deactivate(),setTimeout((()=>{this.bricks=p()}),500));break}}isGameOver(){return this.wall.isCollidedBottom(this.ball)}isAllClear(){return this.bricks.flat().every((e=>!e.isRemain))}getBall(){return this.ball}initBall(){this.ball=o.default.forInitialize(this.canvas)}getPaddle(){return this.paddle}getBricks(){return this.bricks}getScoreObject(){return this.scoreObject}}},4894:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=n(335),r=n(8349);t.default=class{constructor(e,t,n,s){if(this.dxAbs=7,n<0||s<0)throw Error("height and width of paddle must be positive.");this.x=e,this.y=t,this.height=n,this.width=s,this.dx=0}draw(e){e.beginPath(),e.rect(this.x,this.y,this.width,this.height),e.fillStyle="#0095DD",e.fill(),e.closePath()}accelerateToRight(){this.dx=this.dxAbs}accelerateToLeft(){this.dx=0-this.dxAbs}stop(){this.dx=0}move(){this.x+=this.dx}getCollisionRect(){return{left:this.x,right:this.x+this.width,top:this.y,bottom:this.y+this.height}}isCollided(e){const t=e.getCollisionRect(),n=this.getCollisionRect();return(0,r.checkIntervalsIntersect)([t.left,t.right],[n.left,n.right])&&(0,r.checkIntervalsIntersect)([t.top,t.bottom],[n.top,n.bottom])}bounce(e){if(this.isCollided(e)){const t=2*(e.x-this.x-this.width/2)/(2*e.radius+this.width),n=s.Angle.fromRadians(Math.PI/2-Math.PI/2*t*.8);e.setAngle(n),e.accelerateToTop()}}}},134:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t){this.canvas=e,this.ctx=t}draw(e,t,n,s,r){this.clear(),e.draw(this.ctx),t.draw(this.ctx),n.flat().forEach((e=>e.draw(this.ctx))),s.draw(this.ctx),r.draw(this.ctx)}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}}},6534:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Score=void 0;class n{constructor(e){this.value=e}static forInitialScore(){return new n(this.INITIAL_SCORE)}static forBaseScore(){return new n(this.BASE_SCORE)}static forAllClearBonus(){return new n(this.ALL_CLEAR_BONUS)}add(e){return new n(this.value+e.value)}}n.INITIAL_SCORE=0,n.BASE_SCORE=1,n.ALL_CLEAR_BONUS=10,t.Score=n,t.default=class{constructor(e,t,n){this.x=e,this.y=t,this.score=n}add(e){this.score=this.score.add(e)}draw(e){e.font="16px Arial",e.fillStyle="#0095DD",e.fillText(`Score: ${this.score.value}`,this.x,this.y)}}},6814:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t){this.top=0,this.right=e,this.bottom=t,this.left=0}isCollided(e){const{top:t,left:n,right:s}=e.getCollisionRect();return n<=this.left||t<=this.top||s>=this.right}isCollidedLeft(e){const{left:t}=e.getCollisionRect();return t<=this.left}isCollidedRight(e){const{right:t}=e.getCollisionRect();return t>=this.right}isCollidedBottom(e){const{bottom:t}=e.getCollisionRect();return t>=this.bottom}bounce(e){const{top:t,left:n,right:s}=e.getCollisionRect();(n<=this.left&&e.isFacingLeft()||s>=this.right&&e.isFacingRight())&&e.reflectX(),t<=this.top&&e.reflectY()}}},1299:function(e,t,n){"use strict";var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(8349)),i=r(n(6602)),o=r(n(4449));class l{constructor(){const e=new a.default;this.modelController=new i.default,this.ui=new o.default(this.modelController,e)}init(){return s(this,void 0,void 0,(function*(){yield this.modelController.init()}))}}(()=>{const e=new l;document.addEventListener("DOMContentLoaded",(()=>s(void 0,void 0,void 0,(function*(){document.getElementById("loading-overlay").style.display="flex",console.log("ローディング中"),yield s(void 0,void 0,void 0,(function*(){yield e.init(),console.log("初期化完了")})),document.getElementById("loading-overlay").style.display="none",console.log("ローディング完了")}))))})()},3740:function(e,t,n){"use strict";var s,r,a=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return i(t,e),t},l=this&&this.__classPrivateFieldSet||function(e,t,n,s,r){if("m"===s)throw new TypeError("Private method is not writable");if("a"===s&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?r.call(e,n):r?r.value=n:t.set(e,n),n},u=this&&this.__classPrivateFieldGet||function(e,t,n,s){if("a"===n&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?s:"a"===n?s.call(e):s?s.value:t.get(e)};Object.defineProperty(t,"__esModule",{value:!0});const c=o(n(9422));s=new WeakMap,r=new WeakMap,t.default=class{constructor(e){s.set(this,void 0),r.set(this,void 0),this.numClasses=e,l(this,s,null,"f"),l(this,r,null,"f")}addTrainData(e,t){if(t<0||this.numClasses<=t)throw Error("labelが不正です");const n=c.tidy((()=>c.oneHot(c.tensor1d([t]).toInt(),this.numClasses)));if(u(this,s,"f")&&u(this,r,"f")){const t=u(this,s,"f");l(this,s,c.keep(t.concat(e,0)),"f");const a=u(this,r,"f");l(this,r,c.keep(a.concat(n,0)),"f"),t.dispose(),a.dispose(),n.dispose()}else l(this,s,c.keep(e),"f"),l(this,r,c.keep(n),"f")}reset(){u(this,s,"f")&&u(this,s,"f").dispose(),u(this,r,"f")&&u(this,r,"f").dispose(),l(this,s,null,"f"),l(this,r,null,"f")}get classSizes(){if(!u(this,r,"f"))return new Array(this.numClasses).fill(0);const e=u(this,r,"f").arraySync(),t=new Array(this.numClasses).fill(0);return e.forEach((e=>{t[e.indexOf(1)]++})),t}get dataSize(){return u(this,s,"f")?u(this,s,"f").shape[0]:0}get xs(){return u(this,s,"f")}get ys(){return u(this,r,"f")}}},5480:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t},i=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.MobileNet=void 0;const o=a(n(9422));class l extends o.GraphModel{static build(){return i(this,void 0,void 0,(function*(){return yield o.loadGraphModel("https://www.kaggle.com/models/google/mobilenet-v3/frameworks/TfJs/variations/small-100-224-feature-vector/versions/1",{fromTFHub:!0})}))}}t.MobileNet=l;class u extends o.Sequential{constructor(e){super(),this.add(o.layers.dense({inputShape:[1024],units:e,activation:"relu",kernelInitializer:"varianceScaling",useBias:!0})),this.add(o.layers.dense({units:u.NUM_CLASSES,kernelInitializer:"varianceScaling",useBias:!1,activation:"softmax"}))}static load(){return i(this,void 0,void 0,(function*(){this.mobileNet=yield this.mobileNetPromise}))}static build(e){return i(this,void 0,void 0,(function*(){if(!this.isReady)throw Error("モデルがロードされていません");return new u(e)}))}static embedding(e){return this.mobileNet.predict(e)}static isReady(){return!!this.mobileNet}}u.NUM_CLASSES=2,u.mobileNetPromise=l.build(),t.default=u},6602:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t},i=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(3740)),u=o(n(5480)),c=a(n(9422)),h=n(7187);class p extends h.EventEmitter{constructor(){super(),this.model=null,this.controllerDataset=new l.default(2)}load(){return i(this,void 0,void 0,(function*(){yield u.default.load(),console.log("mobileNetの読み込みが完了しました"),this.emit("modelInit")}))}init(){return i(this,void 0,void 0,(function*(){if(yield this.load(),!(yield u.default.build(1)))throw Error("modelがロードされていません");const e=c.randomNormal([1,224,224,3]);u.default.embedding(e),e.dispose()}))}on(e,t){return super.on(e,(e=>t(e)))}emit(e,t){return super.emit(e,t)}embedding(e){if(!u.default.isReady)throw Error("modelが初期化されていません");return u.default.embedding(e)}addTrainData(e,t){this.controllerDataset.addTrainData(this.embedding(e),t)}getClassSizes(e){return this.controllerDataset.classSizes[e]}train(e,t,n,s){return i(this,void 0,void 0,(function*(){if(this.model=yield u.default.build(e),!this.model)throw Error("先にビルドをしてください。`modelController.build(units: number)`");if(!this.controllerDataset.xs||!this.controllerDataset.ys)throw Error("訓練データが存在しません。先にデータを追加してください。");const r=c.train.adam(t);this.model.compile({optimizer:r,loss:"categoricalCrossentropy"});const a=Math.max(Math.floor(this.controllerDataset.dataSize*n),1);if(!(a>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction.");console.log("学習開始"),yield this.model.fit(this.controllerDataset.xs,this.controllerDataset.ys,{batchSize:a,epochs:s,callbacks:{onBatchEnd:(e,t)=>i(this,void 0,void 0,(function*(){t&&this.emit("batchEnd",{loss:t.loss.toFixed(5)})}))}}),console.log("学習終了"),this.emit("trainDone")}))}predict(e){return i(this,void 0,void 0,(function*(){if(!this.model)throw Error("先に学習をしてください。`model.train(units: number)`");const t=this.model.predict(u.default.embedding(e)),n=c.tidy((()=>Number(t.as1D().argMax().dataSync())));if(t.dispose(),0!==n&&1!==n)throw Error("classIdが不正です");this.emit("predict",{classId:n})}))}resetDataset(){this.controllerDataset.reset()}}t.default=p},4449:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t},i=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(3131)),u=a(n(9422));t.default=class{constructor(e,t){this.thumbCanvasLeft=document.getElementById("thumb-left"),this.thumbCanvasRight=document.getElementById("thumb-right");const n={thumbCanvasLeft:this.thumbCanvasLeft,thumbCanvasRight:this.thumbCanvasRight},s=Object.keys(n).find((e=>!n[e]));if(s)throw Error(`${s}が存在しません`);this.webcam=new l.default,this.mouseDown=!1;const r=this.getElementByIdAndCheckExists("button-left"),a=this.getElementByIdAndCheckExists("button-right");this.buttonTrain=this.getElementByIdAndCheckExists("train-button");const o=this.getElementByIdAndCheckExists("lever-image");this.modelController=e,this.modelController.on("batchEnd",(({loss:e})=>{this.setTrainStatus(`Loss: ${e}`)})),this.modelController.on("trainDone",this.enableStart.bind(this)),this.modelController.on("predict",this.highlightCorrectAnswer.bind(this)),this.modelController.on("predict",(({classId:e})=>{this.breakout.paddleOperate(e)})),this.modelController.on("predict",(({classId:e})=>{switch(e){case 0:o.style.transform="none";break;case 1:o.style.transform="scaleX(-1)";break;default:throw Error("classIdが不正です")}})),this.buttonTrain.addEventListener("click",(()=>{this.modelController.train(this.getDenseUnits(),this.getLeaningRate(),this.getBatchSizeFraction(),this.getEpochs())})),this.breakout=t,this.breakout.on("step",(()=>i(this,void 0,void 0,(function*(){const e=yield this.webcam.getProcessedImage();this.modelController.predict(e)}))));const c=this.getElementByIdAndCheckExists("start-button"),h=this.getElementByIdAndCheckExists("retry-button"),p=this.getElementByIdAndCheckExists("reset-button"),d=this.thumbCanvasLeft.getContext("2d"),f=this.thumbCanvasRight.getContext("2d");if(!d||!f)throw Error("コンテキストが存在しません");u.ready().then((()=>{const e=()=>{this.mouseDown=!1};r.addEventListener("mousedown",(()=>i(this,void 0,void 0,(function*(){yield this.buttonHandler(this.thumbCanvasLeft,0)})))),a.addEventListener("mousedown",(()=>i(this,void 0,void 0,(function*(){yield this.buttonHandler(this.thumbCanvasRight,1)})))),r.addEventListener("mouseup",e),a.addEventListener("mouseup",e),c.addEventListener("click",(()=>{this.breakout.start()})),c.addEventListener("click",(()=>{c.setAttribute("disabled","true"),h.removeAttribute("disabled")})),h.addEventListener("click",(()=>{this.breakout.done(),this.breakout=this.breakout.init(),this.breakout.on("step",(()=>i(this,void 0,void 0,(function*(){const e=yield this.webcam.getProcessedImage();this.modelController.predict(e)}))))})),h.addEventListener("click",(()=>{c.removeAttribute("disabled"),h.setAttribute("disabled","true")})),p.addEventListener("click",(()=>{const e=this.getElementByIdAndCheckExists("thumb-box-left"),t=this.getElementByIdAndCheckExists("thumb-box-right");e.classList.remove("predicted"),t.classList.remove("predicted"),this.buttonTrain.setAttribute("disabled","true"),this.setTrainStatus("学習"),this.modelController.resetDataset(),d.clearRect(0,0,this.thumbCanvasLeft.width,this.thumbCanvasLeft.height),f.clearRect(0,0,this.thumbCanvasRight.width,this.thumbCanvasRight.height)}))}));const m=this.getElementByIdAndCheckExists("process-dialog"),g=this.getElementByIdAndCheckExists("how-to-play"),y=this.getElementByIdAndCheckExists("close-button");g.addEventListener("click",(()=>{m.showModal()})),y.addEventListener("click",(()=>{m.close()})),m.addEventListener("click",(e=>{const t=m.getBoundingClientRect();t.top<=e.clientY&&e.clientY<=t.top+t.height&&t.left<=e.clientX&&e.clientX<=t.left+t.width||m.close()}));const b=this.getElementByIdAndCheckExists("detail-learning-rate"),x=this.getElementByIdAndCheckExists("detail-batch-size-fraction"),w=this.getElementByIdAndCheckExists("detail-epochs"),v=this.getElementByIdAndCheckExists("detail-dense-units"),k=this.getElementByIdAndCheckExists("dialog-learning-rate"),I=this.getElementByIdAndCheckExists("dialog-batch-size-fraction"),S=this.getElementByIdAndCheckExists("dialog-epochs"),N=this.getElementByIdAndCheckExists("dialog-dense-units");b.addEventListener("click",(()=>{k.showModal()})),x.addEventListener("click",(()=>{I.showModal()})),w.addEventListener("click",(()=>{S.showModal()})),v.addEventListener("click",(()=>{N.showModal()})),k.addEventListener("click",(e=>{const t=k.getBoundingClientRect();t.top<=e.clientY&&e.clientY<=t.top+t.height&&t.left<=e.clientX&&e.clientX<=t.left+t.width||k.close()})),I.addEventListener("click",(e=>{const t=I.getBoundingClientRect();t.top<=e.clientY&&e.clientY<=t.top+t.height&&t.left<=e.clientX&&e.clientX<=t.left+t.width||I.close()})),S.addEventListener("click",(e=>{const t=S.getBoundingClientRect();t.top<=e.clientY&&e.clientY<=t.top+t.height&&t.left<=e.clientX&&e.clientX<=t.left+t.width||S.close()})),N.addEventListener("click",(e=>{const t=N.getBoundingClientRect();t.top<=e.clientY&&e.clientY<=t.top+t.height&&t.left<=e.clientX&&e.clientX<=t.left+t.width||N.close()}))}getElementByIdAndCheckExists(e){const t=document.getElementById(e);if(!t)throw Error(`#${e}が存在しません`);return t}getLeaningRate(){return+this.getElementByIdAndCheckExists("learning-rate").value}getBatchSizeFraction(){return+this.getElementByIdAndCheckExists("batch-size-fraction").value}getEpochs(){return+this.getElementByIdAndCheckExists("epochs").value}getDenseUnits(){return+this.getElementByIdAndCheckExists("dense-units").value}highlightCorrectAnswer({classId:e}){const t=this.getElementByIdAndCheckExists("button-box-left"),n=this.getElementByIdAndCheckExists("button-box-right");switch(e){case 0:t.classList.add("predicted"),n.classList.remove("predicted");break;case 1:n.classList.add("predicted"),t.classList.remove("predicted");break;default:throw Error()}}buttonHandler(e,t){return i(this,void 0,void 0,(function*(){this.mouseDown=!0,this.getElementByIdAndCheckExists("reset-button").removeAttribute("disabled"),this.buttonTrain.removeAttribute("disabled");const n=()=>i(this,void 0,void 0,(function*(){const t=yield this.webcam.getImage(),n=u.tidy((()=>t.reverse(1).resizeBilinear([this.thumbCanvasLeft.width,this.thumbCanvasLeft.height]).div(256)));this.drawThumb(n,e),t.dispose(),n.dispose()})),s=()=>i(this,void 0,void 0,(function*(){const e=yield this.webcam.getProcessedImage();this.modelController.addTrainData(e,t)})),r=this.getElementByIdAndCheckExists("left-size"),a=this.getElementByIdAndCheckExists("right-size");for(;this.mouseDown;)yield new Promise((e=>setTimeout(e,50))),yield Promise.all([n(),s()]),r.innerHTML=String(this.modelController.getClassSizes(0)),a.innerHTML=String(this.modelController.getClassSizes(1))}))}drawThumb(e,t){u.browser.toPixels(e,t)}setTrainStatus(e){this.getElementByIdAndCheckExists("train-status").innerHTML=e}enableStart(){this.getElementByIdAndCheckExists("start-button").removeAttribute("disabled")}}},3131:function(e,t,n){"use strict";var s,r=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))},l=this&&this.__classPrivateFieldSet||function(e,t,n,s,r){if("m"===s)throw new TypeError("Private method is not writable");if("a"===s&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?r.call(e,n):r?r.value=n:t.set(e,n),n},u=this&&this.__classPrivateFieldGet||function(e,t,n,s){if("a"===n&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?s:"a"===n?s.call(e):s?s.value:t.get(e)};Object.defineProperty(t,"__esModule",{value:!0});const c=i(n(9422)),h=i(n(5934));s=new WeakMap,t.default=class{constructor(){s.set(this,void 0);const e=document.querySelector("#monitor");if(!e)throw Error("#webcamが存在しません");l(this,s,h.webcam(e,{resizeWidth:e.width,resizeHeight:e.height}),"f")}getImage(){return o(this,void 0,void 0,(function*(){return yield(yield u(this,s,"f")).capture()}))}getProcessedImage(){return o(this,void 0,void 0,(function*(){const e=yield this.getImage(),t=c.tidy((()=>e.expandDims(0).toFloat().div(127).sub(1)));return e.dispose(),t}))}}},534:(e,t,n)=>{"use strict";e.exports=n.p+"./images/icons8-lever-64.49a050c609062bda417b.png"},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n(1299),n(437),n(8724)})();